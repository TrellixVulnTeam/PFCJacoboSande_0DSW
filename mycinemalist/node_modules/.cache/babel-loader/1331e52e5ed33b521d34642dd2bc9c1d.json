{"ast":null,"code":"import { __extends } from \"tslib\";\nimport * as React from 'react';\nimport { hoistMethods, unhoistMethods } from '../../Utilities';\n\nvar BaseDecorator =\n/** @class */\nfunction (_super) {\n  __extends(BaseDecorator, _super);\n\n  function BaseDecorator(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this._updateComposedComponentRef = _this._updateComposedComponentRef.bind(_this);\n    return _this;\n  }\n  /**\n   * Updates the ref to the component composed by the decorator, which will also take care of hoisting\n   * (and unhoisting as appropriate) methods from said component.\n   *\n   * Pass this method as the argument to the 'ref' property of the composed component.\n   */\n\n\n  BaseDecorator.prototype._updateComposedComponentRef = function (composedComponentInstance) {\n    this._composedComponentInstance = composedComponentInstance;\n\n    if (composedComponentInstance) {\n      this._hoisted = hoistMethods(this, composedComponentInstance);\n    } else if (this._hoisted) {\n      unhoistMethods(this, this._hoisted);\n    }\n  };\n\n  return BaseDecorator;\n}(React.Component);\n\nexport { BaseDecorator };","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,iBAA7C;;AAEA;AAAA;AAAA;AAAmDC;;AAKjD,yBAAYC,KAAZ,EAAyB;AAAzB,gBACEC,kBAAMD,KAAN,KAAY,IADd;;AAEEE,SAAI,CAACC,2BAAL,GAAmCD,KAAI,CAACC,2BAAL,CAAiCC,IAAjC,CAAsCF,KAAtC,CAAnC;;AACD;AAED;;;;;;;;AAMUG,wDAAV,UAAsCC,yBAAtC,EAAgG;AAC9F,SAAKC,0BAAL,GAAkCD,yBAAlC;;AACA,QAAIA,yBAAJ,EAA+B;AAC7B,WAAKE,QAAL,GAAgBX,YAAY,CAAC,IAAD,EAAOS,yBAAP,CAA5B;AACD,KAFD,MAEO,IAAI,KAAKE,QAAT,EAAmB;AACxBV,oBAAc,CAAC,IAAD,EAAO,KAAKU,QAAZ,CAAd;AACD;AACF,GAPS;;AAQZ;AAAC,CAxBD,CAAmDZ,KAAK,CAACa,SAAzD","names":["React","hoistMethods","unhoistMethods","__extends","props","_super","_this","_updateComposedComponentRef","bind","BaseDecorator","composedComponentInstance","_composedComponentInstance","_hoisted","Component"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\office-ui-fabric-react\\lib\\utilities\\src\\utilities\\decorators\\BaseDecorator.ts"],"sourcesContent":["import * as React from 'react';\nimport { hoistMethods, unhoistMethods } from '../../Utilities';\n\nexport class BaseDecorator<TProps, TState> extends React.Component<TProps, TState> {\n  protected _composedComponentInstance: React.Component<TProps, TState>;\n\n  private _hoisted: string[];\n\n  constructor(props: TProps) {\n    super(props);\n    this._updateComposedComponentRef = this._updateComposedComponentRef.bind(this);\n  }\n\n  /**\n   * Updates the ref to the component composed by the decorator, which will also take care of hoisting\n   * (and unhoisting as appropriate) methods from said component.\n   *\n   * Pass this method as the argument to the 'ref' property of the composed component.\n   */\n  protected _updateComposedComponentRef(composedComponentInstance: React.Component<TProps, TState>): void {\n    this._composedComponentInstance = composedComponentInstance;\n    if (composedComponentInstance) {\n      this._hoisted = hoistMethods(this, composedComponentInstance);\n    } else if (this._hoisted) {\n      unhoistMethods(this, this._hoisted);\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}