{"ast":null,"code":"import { labelProperties, audioProperties, videoProperties, olProperties, liProperties, anchorProperties, buttonProperties, inputProperties, textAreaProperties, selectProperties, optionProperties, tableProperties, trProperties, thProperties, tdProperties, colGroupProperties, colProperties, formProperties, iframeProperties, imgProperties, htmlElementProperties, getNativeProps } from './properties';\nvar nativeElementMap = {\n  label: labelProperties,\n  audio: audioProperties,\n  video: videoProperties,\n  ol: olProperties,\n  li: liProperties,\n  a: anchorProperties,\n  button: buttonProperties,\n  input: inputProperties,\n  textarea: textAreaProperties,\n  select: selectProperties,\n  option: optionProperties,\n  table: tableProperties,\n  tr: trProperties,\n  th: thProperties,\n  td: tdProperties,\n  colGroup: colGroupProperties,\n  col: colProperties,\n  form: formProperties,\n  iframe: iframeProperties,\n  img: imgProperties\n};\n/**\n * Given an element tagname and user props, filters the props to only allowed props for the given\n * element type.\n * @param tagName - Tag name (e.g. \"div\")\n * @param props - Props object\n * @param excludedPropNames - List of props to disallow\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nexport function getNativeElementProps(tagName, props, excludedPropNames) {\n  var allowedPropNames = tagName && nativeElementMap[tagName] || htmlElementProperties;\n  return getNativeProps(props, allowedPropNames, excludedPropNames);\n}","map":{"version":3,"mappings":"AAAA,SACEA,eADF,EAEEC,eAFF,EAGEC,eAHF,EAIEC,YAJF,EAKEC,YALF,EAMEC,gBANF,EAOEC,gBAPF,EAQEC,eARF,EASEC,kBATF,EAUEC,gBAVF,EAWEC,gBAXF,EAYEC,eAZF,EAaEC,YAbF,EAcEC,YAdF,EAeEC,YAfF,EAgBEC,kBAhBF,EAiBEC,aAjBF,EAkBEC,cAlBF,EAmBEC,gBAnBF,EAoBEC,aApBF,EAqBEC,qBArBF,EAsBEC,cAtBF,QAuBO,cAvBP;AA0BA,IAAMC,gBAAgB,GAA2C;EAC/DC,KAAK,EAAEvB,eADwD;EAE/DwB,KAAK,EAAEvB,eAFwD;EAG/DwB,KAAK,EAAEvB,eAHwD;EAI/DwB,EAAE,EAAEvB,YAJ2D;EAK/DwB,EAAE,EAAEvB,YAL2D;EAM/DwB,CAAC,EAAEvB,gBAN4D;EAO/DwB,MAAM,EAAEvB,gBAPuD;EAQ/DwB,KAAK,EAAEvB,eARwD;EAS/DwB,QAAQ,EAAEvB,kBATqD;EAU/DwB,MAAM,EAAEvB,gBAVuD;EAW/DwB,MAAM,EAAEvB,gBAXuD;EAY/DwB,KAAK,EAAEvB,eAZwD;EAa/DwB,EAAE,EAAEvB,YAb2D;EAc/DwB,EAAE,EAAEvB,YAd2D;EAe/DwB,EAAE,EAAEvB,YAf2D;EAgB/DwB,QAAQ,EAAEvB,kBAhBqD;EAiB/DwB,GAAG,EAAEvB,aAjB0D;EAkB/DwB,IAAI,EAAEvB,cAlByD;EAmB/DwB,MAAM,EAAEvB,gBAnBuD;EAoB/DwB,GAAG,EAAEvB;AApB0D,CAAjE;AAuBA;;;;;;;AAOA;;AACA,OAAM,SAAUwB,qBAAV,CACJC,OADI,EAEJC,KAFI,EAGJC,iBAHI,EAGwB;EAE5B,IAAMC,gBAAgB,GAAIH,OAAO,IAAItB,gBAAgB,CAACsB,OAAD,CAA5B,IAA0CxB,qBAAnE;EAEA,OAAOC,cAAc,CAACwB,KAAD,EAAQE,gBAAR,EAA0BD,iBAA1B,CAArB;AACD","names":["labelProperties","audioProperties","videoProperties","olProperties","liProperties","anchorProperties","buttonProperties","inputProperties","textAreaProperties","selectProperties","optionProperties","tableProperties","trProperties","thProperties","tdProperties","colGroupProperties","colProperties","formProperties","iframeProperties","imgProperties","htmlElementProperties","getNativeProps","nativeElementMap","label","audio","video","ol","li","a","button","input","textarea","select","option","table","tr","th","td","colGroup","col","form","iframe","img","getNativeElementProps","tagName","props","excludedPropNames","allowedPropNames"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\office-ui-fabric-react\\node_modules\\@uifabric\\utilities\\src\\getNativeElementProps.ts"],"sourcesContent":["import {\n  labelProperties,\n  audioProperties,\n  videoProperties,\n  olProperties,\n  liProperties,\n  anchorProperties,\n  buttonProperties,\n  inputProperties,\n  textAreaProperties,\n  selectProperties,\n  optionProperties,\n  tableProperties,\n  trProperties,\n  thProperties,\n  tdProperties,\n  colGroupProperties,\n  colProperties,\n  formProperties,\n  iframeProperties,\n  imgProperties,\n  htmlElementProperties,\n  getNativeProps,\n} from './properties';\nimport * as React from 'react';\n\nconst nativeElementMap: Record<string, Record<string, number>> = {\n  label: labelProperties,\n  audio: audioProperties,\n  video: videoProperties,\n  ol: olProperties,\n  li: liProperties,\n  a: anchorProperties,\n  button: buttonProperties,\n  input: inputProperties,\n  textarea: textAreaProperties,\n  select: selectProperties,\n  option: optionProperties,\n  table: tableProperties,\n  tr: trProperties,\n  th: thProperties,\n  td: tdProperties,\n  colGroup: colGroupProperties,\n  col: colProperties,\n  form: formProperties,\n  iframe: iframeProperties,\n  img: imgProperties,\n};\n\n/**\n * Given an element tagname and user props, filters the props to only allowed props for the given\n * element type.\n * @param tagName - Tag name (e.g. \"div\")\n * @param props - Props object\n * @param excludedPropNames - List of props to disallow\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function getNativeElementProps<TAttributes extends React.HTMLAttributes<any>>(\n  tagName: string,\n  props: {},\n  excludedPropNames?: string[],\n): TAttributes {\n  const allowedPropNames = (tagName && nativeElementMap[tagName]) || htmlElementProperties;\n\n  return getNativeProps(props, allowedPropNames, excludedPropNames);\n}\n"]},"metadata":{},"sourceType":"module"}