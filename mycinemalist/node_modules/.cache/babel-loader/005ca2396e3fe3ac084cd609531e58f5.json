{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { warn } from '../../Utilities';\nimport { ButtonType } from './Button.types';\nimport { DefaultButton } from './DefaultButton/DefaultButton';\nimport { ActionButton } from './ActionButton/ActionButton';\nimport { CompoundButton } from './CompoundButton/CompoundButton';\nimport { IconButton } from './IconButton/IconButton';\nimport { PrimaryButton } from './PrimaryButton/PrimaryButton';\n/**\n * This class is deprecated. Use the individual *Button components instead.\n * @deprecated Use the individual *Button components instead.\n * {@docCategory Button}\n */\n\nvar Button =\n/** @class */\nfunction (_super) {\n  __extends(Button, _super);\n\n  function Button(props) {\n    var _this = _super.call(this, props) || this;\n\n    warn(\"The Button component has been deprecated. Use specific variants instead. \" + \"(PrimaryButton, DefaultButton, IconButton, ActionButton, etc.)\");\n    return _this;\n  }\n\n  Button.prototype.render = function () {\n    var props = this.props; // eslint-disable-next-line deprecation/deprecation\n\n    switch (props.buttonType) {\n      case ButtonType.command:\n        return React.createElement(ActionButton, __assign({}, props));\n\n      case ButtonType.compound:\n        return React.createElement(CompoundButton, __assign({}, props));\n\n      case ButtonType.icon:\n        return React.createElement(IconButton, __assign({}, props));\n\n      case ButtonType.primary:\n        return React.createElement(PrimaryButton, __assign({}, props));\n\n      default:\n        return React.createElement(DefaultButton, __assign({}, props));\n    }\n  };\n\n  return Button;\n}(React.Component);\n\nexport { Button };","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SAASC,IAAT,QAAqB,iBAArB;AACA,SAASC,UAAT,QAAyC,gBAAzC;AACA,SAASC,aAAT,QAA8B,+BAA9B;AACA,SAASC,YAAT,QAA6B,6BAA7B;AACA,SAASC,cAAT,QAA+B,iCAA/B;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,SAASC,aAAT,QAA8B,+BAA9B;AAEA;;;;;;AAKA;AAAA;AAAA;AAA4BC;;AAC1B,kBAAYC,KAAZ,EAA+B;AAA/B,gBACEC,kBAAMD,KAAN,KAAY,IADd;;AAGER,QAAI,CACF,8EACE,gEAFA,CAAJ;;AAID;;AAEMU,4BAAP;AACE,QAAMF,KAAK,GAAG,KAAKA,KAAnB,CADF,CAGE;;AACA,YAAQA,KAAK,CAACG,UAAd;AACE,WAAKV,UAAU,CAACW,OAAhB;AACE,eAAOb,oBAACI,YAAD,EAAaU,aAAKL,KAAL,CAAb,CAAP;;AAEF,WAAKP,UAAU,CAACa,QAAhB;AACE,eAAOf,oBAACK,cAAD,EAAeS,aAAKL,KAAL,CAAf,CAAP;;AAEF,WAAKP,UAAU,CAACc,IAAhB;AACE,eAAOhB,oBAACM,UAAD,EAAWQ,aAAKL,KAAL,CAAX,CAAP;;AAEF,WAAKP,UAAU,CAACe,OAAhB;AACE,eAAOjB,oBAACO,aAAD,EAAcO,aAAKL,KAAL,CAAd,CAAP;;AAEF;AACE,eAAOT,oBAACG,aAAD,EAAcW,aAAKL,KAAL,CAAd,CAAP;AAdJ;AAgBD,GApBM;;AAqBT;AAAC,CA/BD,CAA4BT,KAAK,CAACkB,SAAlC","names":["React","warn","ButtonType","DefaultButton","ActionButton","CompoundButton","IconButton","PrimaryButton","__extends","props","_super","Button","buttonType","command","__assign","compound","icon","primary","Component"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\office-ui-fabric-react\\lib\\components\\src\\components\\Button\\Button.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { warn } from '../../Utilities';\nimport { ButtonType, IButtonProps } from './Button.types';\nimport { DefaultButton } from './DefaultButton/DefaultButton';\nimport { ActionButton } from './ActionButton/ActionButton';\nimport { CompoundButton } from './CompoundButton/CompoundButton';\nimport { IconButton } from './IconButton/IconButton';\nimport { PrimaryButton } from './PrimaryButton/PrimaryButton';\n\n/**\n * This class is deprecated. Use the individual *Button components instead.\n * @deprecated Use the individual *Button components instead.\n * {@docCategory Button}\n */\nexport class Button extends React.Component<IButtonProps, {}> {\n  constructor(props: IButtonProps) {\n    super(props);\n\n    warn(\n      `The Button component has been deprecated. Use specific variants instead. ` +\n        `(PrimaryButton, DefaultButton, IconButton, ActionButton, etc.)`,\n    );\n  }\n\n  public render(): JSX.Element {\n    const props = this.props;\n\n    // eslint-disable-next-line deprecation/deprecation\n    switch (props.buttonType) {\n      case ButtonType.command:\n        return <ActionButton {...props} />;\n\n      case ButtonType.compound:\n        return <CompoundButton {...props} />;\n\n      case ButtonType.icon:\n        return <IconButton {...props} />;\n\n      case ButtonType.primary:\n        return <PrimaryButton {...props} />;\n\n      default:\n        return <DefaultButton {...props} />;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}