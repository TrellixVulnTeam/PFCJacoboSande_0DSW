{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { HighContrastSelector } from '../../Styling';\nimport { IsFocusVisibleClassName } from '../../Utilities';\n\nvar splitButtonDividerBaseStyles = function splitButtonDividerBaseStyles() {\n  return {\n    position: 'absolute',\n    width: 1,\n    right: 31,\n    top: 8,\n    bottom: 8\n  };\n};\n\nexport function standardStyles(theme) {\n  var _a, _b, _c, _d, _e;\n\n  var s = theme.semanticColors,\n      p = theme.palette;\n  var buttonBackground = s.buttonBackground;\n  var buttonBackgroundPressed = s.buttonBackgroundPressed;\n  var buttonBackgroundHovered = s.buttonBackgroundHovered;\n  var buttonText = s.buttonText;\n  var buttonTextHovered = s.buttonTextHovered;\n  var buttonTextChecked = s.buttonTextChecked;\n  var buttonTextCheckedHovered = s.buttonTextCheckedHovered;\n  return {\n    root: {\n      backgroundColor: buttonBackground,\n      color: buttonText\n    },\n    rootHovered: {\n      backgroundColor: buttonBackgroundHovered,\n      color: buttonTextHovered,\n      selectors: (_a = {}, _a[HighContrastSelector] = {\n        borderColor: 'Highlight',\n        color: 'Highlight'\n      }, _a)\n    },\n    rootPressed: {\n      backgroundColor: buttonBackgroundPressed,\n      color: buttonTextChecked\n    },\n    rootExpanded: {\n      backgroundColor: buttonBackgroundPressed,\n      color: buttonTextChecked\n    },\n    rootChecked: {\n      backgroundColor: buttonBackgroundPressed,\n      color: buttonTextChecked\n    },\n    rootCheckedHovered: {\n      backgroundColor: buttonBackgroundPressed,\n      color: buttonTextCheckedHovered\n    },\n    rootDisabled: {\n      selectors: (_b = {}, _b[HighContrastSelector] = {\n        color: 'GrayText',\n        borderColor: 'GrayText',\n        backgroundColor: 'Window'\n      }, _b)\n    },\n    // Split button styles\n    splitButtonContainer: {\n      selectors: (_c = {}, _c[HighContrastSelector] = {\n        border: 'none'\n      }, _c)\n    },\n    splitButtonMenuButton: {\n      color: p.white,\n      backgroundColor: 'transparent',\n      selectors: {\n        ':hover': {\n          backgroundColor: p.neutralLight,\n          selectors: (_d = {}, _d[HighContrastSelector] = {\n            color: 'Highlight'\n          }, _d)\n        }\n      }\n    },\n    splitButtonMenuButtonDisabled: {\n      backgroundColor: s.buttonBackgroundDisabled,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.buttonBackgroundDisabled\n        }\n      }\n    },\n    splitButtonDivider: __assign(__assign({}, splitButtonDividerBaseStyles()), {\n      backgroundColor: p.neutralTertiaryAlt,\n      selectors: (_e = {}, _e[HighContrastSelector] = {\n        backgroundColor: 'WindowText'\n      }, _e)\n    }),\n    splitButtonDividerDisabled: {\n      backgroundColor: theme.palette.neutralTertiaryAlt\n    },\n    splitButtonMenuButtonChecked: {\n      backgroundColor: p.neutralQuaternaryAlt,\n      selectors: {\n        ':hover': {\n          backgroundColor: p.neutralQuaternaryAlt\n        }\n      }\n    },\n    splitButtonMenuButtonExpanded: {\n      backgroundColor: p.neutralQuaternaryAlt,\n      selectors: {\n        ':hover': {\n          backgroundColor: p.neutralQuaternaryAlt\n        }\n      }\n    },\n    splitButtonMenuIcon: {\n      color: s.buttonText\n    },\n    splitButtonMenuIconDisabled: {\n      color: s.buttonTextDisabled\n    }\n  };\n}\nexport function primaryStyles(theme) {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n\n  var p = theme.palette,\n      s = theme.semanticColors;\n  return {\n    root: {\n      backgroundColor: s.primaryButtonBackground,\n      border: \"1px solid \" + s.primaryButtonBackground,\n      color: s.primaryButtonText,\n      selectors: (_a = {}, _a[HighContrastSelector] = {\n        color: 'Window',\n        backgroundColor: 'WindowText',\n        borderColor: 'WindowText',\n        MsHighContrastAdjust: 'none'\n      }, _a[\".\" + IsFocusVisibleClassName + \" &:focus\"] = {\n        selectors: {\n          ':after': {\n            border: \"none\",\n            outlineColor: p.white\n          }\n        }\n      }, _a)\n    },\n    rootHovered: {\n      backgroundColor: s.primaryButtonBackgroundHovered,\n      border: \"1px solid \" + s.primaryButtonBackgroundHovered,\n      color: s.primaryButtonTextHovered,\n      selectors: (_b = {}, _b[HighContrastSelector] = {\n        color: 'Window',\n        backgroundColor: 'Highlight',\n        borderColor: 'Highlight'\n      }, _b)\n    },\n    rootPressed: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      border: \"1px solid \" + s.primaryButtonBackgroundPressed,\n      color: s.primaryButtonTextPressed,\n      selectors: (_c = {}, _c[HighContrastSelector] = {\n        color: 'Window',\n        backgroundColor: 'WindowText',\n        borderColor: 'WindowText',\n        MsHighContrastAdjust: 'none'\n      }, _c)\n    },\n    rootExpanded: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      color: s.primaryButtonTextPressed\n    },\n    rootChecked: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      color: s.primaryButtonTextPressed\n    },\n    rootCheckedHovered: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      color: s.primaryButtonTextPressed\n    },\n    rootDisabled: {\n      selectors: (_d = {}, _d[HighContrastSelector] = {\n        color: 'GrayText',\n        borderColor: 'GrayText',\n        backgroundColor: 'Window'\n      }, _d)\n    },\n    // Split button styles\n    splitButtonContainer: {\n      selectors: (_e = {}, _e[HighContrastSelector] = {\n        border: 'none'\n      }, _e)\n    },\n    splitButtonDivider: __assign(__assign({}, splitButtonDividerBaseStyles()), {\n      backgroundColor: p.white,\n      selectors: (_f = {}, _f[HighContrastSelector] = {\n        backgroundColor: 'Window'\n      }, _f)\n    }),\n    splitButtonMenuButton: {\n      backgroundColor: s.primaryButtonBackground,\n      color: s.primaryButtonText,\n      selectors: (_g = {}, _g[HighContrastSelector] = {\n        backgroundColor: 'WindowText'\n      }, _g[':hover'] = {\n        backgroundColor: s.primaryButtonBackgroundHovered,\n        selectors: (_h = {}, _h[HighContrastSelector] = {\n          color: 'Highlight'\n        }, _h)\n      }, _g)\n    },\n    splitButtonMenuButtonDisabled: {\n      backgroundColor: s.primaryButtonBackgroundDisabled,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.primaryButtonBackgroundDisabled\n        }\n      }\n    },\n    splitButtonMenuButtonChecked: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.primaryButtonBackgroundPressed\n        }\n      }\n    },\n    splitButtonMenuButtonExpanded: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.primaryButtonBackgroundPressed\n        }\n      }\n    },\n    splitButtonMenuIcon: {\n      color: s.primaryButtonText\n    },\n    splitButtonMenuIconDisabled: {\n      color: p.neutralTertiary,\n      selectors: (_j = {}, _j[HighContrastSelector] = {\n        color: 'GrayText'\n      }, _j)\n    }\n  };\n}","map":{"version":3,"mappings":";AACA,SAAiBA,oBAAjB,QAAwD,eAAxD;AACA,SAASC,uBAAT,QAAwC,iBAAxC;;AAEA,IAAMC,4BAA4B,GAAG,SAA/BA,4BAA+B;EACnC,OAAO;IACLC,QAAQ,EAAE,UADL;IAELC,KAAK,EAAE,CAFF;IAGLC,KAAK,EAAE,EAHF;IAILC,GAAG,EAAE,CAJA;IAKLC,MAAM,EAAE;EALH,CAAP;AAOD,CARD;;AAUA,OAAM,SAAUC,cAAV,CAAyBC,KAAzB,EAAsC;;;EAClC;EAAA,IAAmBC,iBAAnB;EAER,IAAMC,gBAAgB,GAAGC,CAAC,CAACD,gBAA3B;EACA,IAAME,uBAAuB,GAAGD,CAAC,CAACC,uBAAlC;EACA,IAAMC,uBAAuB,GAAGF,CAAC,CAACE,uBAAlC;EAEA,IAAMC,UAAU,GAAGH,CAAC,CAACG,UAArB;EACA,IAAMC,iBAAiB,GAAGJ,CAAC,CAACI,iBAA5B;EACA,IAAMC,iBAAiB,GAAGL,CAAC,CAACK,iBAA5B;EACA,IAAMC,wBAAwB,GAAGN,CAAC,CAACM,wBAAnC;EAEA,OAAO;IACLC,IAAI,EAAE;MACJC,eAAe,EAAET,gBADb;MAEJU,KAAK,EAAEN;IAFH,CADD;IAMLO,WAAW,EAAE;MACXF,eAAe,EAAEN,uBADN;MAEXO,KAAK,EAAEL,iBAFI;MAGXO,SAAS,YACPC,GAACxB,oBAAD,IAAwB;QACtByB,WAAW,EAAE,WADS;QAEtBJ,KAAK,EAAE;MAFe,CADjB;IAHE,CANR;IAiBLK,WAAW,EAAE;MACXN,eAAe,EAAEP,uBADN;MAEXQ,KAAK,EAAEJ;IAFI,CAjBR;IAsBLU,YAAY,EAAE;MACZP,eAAe,EAAEP,uBADL;MAEZQ,KAAK,EAAEJ;IAFK,CAtBT;IA2BLW,WAAW,EAAE;MACXR,eAAe,EAAEP,uBADN;MAEXQ,KAAK,EAAEJ;IAFI,CA3BR;IAgCLY,kBAAkB,EAAE;MAClBT,eAAe,EAAEP,uBADC;MAElBQ,KAAK,EAAEH;IAFW,CAhCf;IAqCLY,YAAY,EAAE;MACZP,SAAS,YACPQ,GAAC/B,oBAAD,IAAwB;QACtBqB,KAAK,EAAE,UADe;QAEtBI,WAAW,EAAE,UAFS;QAGtBL,eAAe,EAAE;MAHK,CADjB;IADG,CArCT;IA+CL;IACAY,oBAAoB,EAAE;MACpBT,SAAS,YACPU,GAACjC,oBAAD,IAAwB;QACtBkC,MAAM,EAAE;MADc,CADjB;IADW,CAhDjB;IAwDLC,qBAAqB,EAAE;MACrBd,KAAK,EAAEX,CAAC,CAAC0B,KADY;MAErBhB,eAAe,EAAE,aAFI;MAGrBG,SAAS,EAAE;QACT,UAAU;UACRH,eAAe,EAAEV,CAAC,CAAC2B,YADX;UAERd,SAAS,YACPe,GAACtC,oBAAD,IAAwB;YACtBqB,KAAK,EAAE;UADe,CADjB;QAFD;MADD;IAHU,CAxDlB;IAuELkB,6BAA6B,EAAE;MAC7BnB,eAAe,EAAER,CAAC,CAAC4B,wBADU;MAE7BjB,SAAS,EAAE;QACT,UAAU;UACRH,eAAe,EAAER,CAAC,CAAC4B;QADX;MADD;IAFkB,CAvE1B;IAgFLC,kBAAkB,wBACbvC,4BAA4B,EADf,GACiB;MACjCkB,eAAe,EAAEV,CAAC,CAACgC,kBADc;MAEjCnB,SAAS,YACPoB,GAAC3C,oBAAD,IAAwB;QACtBoB,eAAe,EAAE;MADK,CADjB;IAFwB,CADjB,CAhFb;IA0FLwB,0BAA0B,EAAE;MAC1BxB,eAAe,EAAEX,KAAK,CAACoC,OAAN,CAAcH;IADL,CA1FvB;IA8FLI,4BAA4B,EAAE;MAC5B1B,eAAe,EAAEV,CAAC,CAACqC,oBADS;MAE5BxB,SAAS,EAAE;QACT,UAAU;UACRH,eAAe,EAAEV,CAAC,CAACqC;QADX;MADD;IAFiB,CA9FzB;IAuGLC,6BAA6B,EAAE;MAC7B5B,eAAe,EAAEV,CAAC,CAACqC,oBADU;MAE7BxB,SAAS,EAAE;QACT,UAAU;UACRH,eAAe,EAAEV,CAAC,CAACqC;QADX;MADD;IAFkB,CAvG1B;IAgHLE,mBAAmB,EAAE;MACnB5B,KAAK,EAAET,CAAC,CAACG;IADU,CAhHhB;IAoHLmC,2BAA2B,EAAE;MAC3B7B,KAAK,EAAET,CAAC,CAACuC;IADkB;EApHxB,CAAP;AAwHD;AAED,OAAM,SAAUC,aAAV,CAAwB3C,KAAxB,EAAqC;;;EACjC;EAAA,IAAYG,wBAAZ;EAER,OAAO;IACLO,IAAI,EAAE;MACJC,eAAe,EAAER,CAAC,CAACyC,uBADf;MAEJnB,MAAM,EAAE,eAAatB,CAAC,CAACyC,uBAFnB;MAGJhC,KAAK,EAAET,CAAC,CAAC0C,iBAHL;MAIJ/B,SAAS,YACPC,GAACxB,oBAAD,IAAwB;QACtBqB,KAAK,EAAE,QADe;QAEtBD,eAAe,EAAE,YAFK;QAGtBK,WAAW,EAAE,YAHS;QAItB8B,oBAAoB,EAAE;MAJA,CADjB,EAOP/B,GAAC,MAAIvB,uBAAJ,GAA2B,UAA5B,IAAyC;QACvCsB,SAAS,EAAE;UACT,UAAU;YACRW,MAAM,EAAE,MADA;YAERsB,YAAY,EAAE9C,CAAC,CAAC0B;UAFR;QADD;MAD4B,CAPlC;IAJL,CADD;IAuBLd,WAAW,EAAE;MACXF,eAAe,EAAER,CAAC,CAAC6C,8BADR;MAEXvB,MAAM,EAAE,eAAatB,CAAC,CAAC6C,8BAFZ;MAGXpC,KAAK,EAAET,CAAC,CAAC8C,wBAHE;MAIXnC,SAAS,YACPQ,GAAC/B,oBAAD,IAAwB;QACtBqB,KAAK,EAAE,QADe;QAEtBD,eAAe,EAAE,WAFK;QAGtBK,WAAW,EAAE;MAHS,CADjB;IAJE,CAvBR;IAoCLC,WAAW,EAAE;MACXN,eAAe,EAAER,CAAC,CAAC+C,8BADR;MAEXzB,MAAM,EAAE,eAAatB,CAAC,CAAC+C,8BAFZ;MAGXtC,KAAK,EAAET,CAAC,CAACgD,wBAHE;MAIXrC,SAAS,YACPU,GAACjC,oBAAD,IAAwB;QACtBqB,KAAK,EAAE,QADe;QAEtBD,eAAe,EAAE,YAFK;QAGtBK,WAAW,EAAE,YAHS;QAItB8B,oBAAoB,EAAE;MAJA,CADjB;IAJE,CApCR;IAkDL5B,YAAY,EAAE;MACZP,eAAe,EAAER,CAAC,CAAC+C,8BADP;MAEZtC,KAAK,EAAET,CAAC,CAACgD;IAFG,CAlDT;IAuDLhC,WAAW,EAAE;MACXR,eAAe,EAAER,CAAC,CAAC+C,8BADR;MAEXtC,KAAK,EAAET,CAAC,CAACgD;IAFE,CAvDR;IA4DL/B,kBAAkB,EAAE;MAClBT,eAAe,EAAER,CAAC,CAAC+C,8BADD;MAElBtC,KAAK,EAAET,CAAC,CAACgD;IAFS,CA5Df;IAiEL9B,YAAY,EAAE;MACZP,SAAS,YACPe,GAACtC,oBAAD,IAAwB;QACtBqB,KAAK,EAAE,UADe;QAEtBI,WAAW,EAAE,UAFS;QAGtBL,eAAe,EAAE;MAHK,CADjB;IADG,CAjET;IA2EL;IACAY,oBAAoB,EAAE;MACpBT,SAAS,YACPoB,GAAC3C,oBAAD,IAAwB;QACtBkC,MAAM,EAAE;MADc,CADjB;IADW,CA5EjB;IAoFLO,kBAAkB,wBACbvC,4BAA4B,EADf,GACiB;MACjCkB,eAAe,EAAEV,CAAC,CAAC0B,KADc;MAEjCb,SAAS,YACPsC,GAAC7D,oBAAD,IAAwB;QACtBoB,eAAe,EAAE;MADK,CADjB;IAFwB,CADjB,CApFb;IA8FLe,qBAAqB,EAAE;MACrBf,eAAe,EAAER,CAAC,CAACyC,uBADE;MAErBhC,KAAK,EAAET,CAAC,CAAC0C,iBAFY;MAGrB/B,SAAS,YACPuC,GAAC9D,oBAAD,IAAwB;QACtBoB,eAAe,EAAE;MADK,CADjB,EAIP0C,eAAU;QACR1C,eAAe,EAAER,CAAC,CAAC6C,8BADX;QAERlC,SAAS,YACPwC,GAAC/D,oBAAD,IAAwB;UACtBqB,KAAK,EAAE;QADe,CADjB;MAFD,CAJH;IAHY,CA9FlB;IAgHLkB,6BAA6B,EAAE;MAC7BnB,eAAe,EAAER,CAAC,CAACoD,+BADU;MAE7BzC,SAAS,EAAE;QACT,UAAU;UACRH,eAAe,EAAER,CAAC,CAACoD;QADX;MADD;IAFkB,CAhH1B;IAyHLlB,4BAA4B,EAAE;MAC5B1B,eAAe,EAAER,CAAC,CAAC+C,8BADS;MAE5BpC,SAAS,EAAE;QACT,UAAU;UACRH,eAAe,EAAER,CAAC,CAAC+C;QADX;MADD;IAFiB,CAzHzB;IAkILX,6BAA6B,EAAE;MAC7B5B,eAAe,EAAER,CAAC,CAAC+C,8BADU;MAE7BpC,SAAS,EAAE;QACT,UAAU;UACRH,eAAe,EAAER,CAAC,CAAC+C;QADX;MADD;IAFkB,CAlI1B;IA2ILV,mBAAmB,EAAE;MACnB5B,KAAK,EAAET,CAAC,CAAC0C;IADU,CA3IhB;IA+ILJ,2BAA2B,EAAE;MAC3B7B,KAAK,EAAEX,CAAC,CAACuD,eADkB;MAG3B1C,SAAS,YACP2C,GAAClE,oBAAD,IAAwB;QACtBqB,KAAK,EAAE;MADe,CADjB;IAHkB;EA/IxB,CAAP;AAyJD","names":["HighContrastSelector","IsFocusVisibleClassName","splitButtonDividerBaseStyles","position","width","right","top","bottom","standardStyles","theme","p","buttonBackground","s","buttonBackgroundPressed","buttonBackgroundHovered","buttonText","buttonTextHovered","buttonTextChecked","buttonTextCheckedHovered","root","backgroundColor","color","rootHovered","selectors","_a","borderColor","rootPressed","rootExpanded","rootChecked","rootCheckedHovered","rootDisabled","_b","splitButtonContainer","_c","border","splitButtonMenuButton","white","neutralLight","_d","splitButtonMenuButtonDisabled","buttonBackgroundDisabled","splitButtonDivider","neutralTertiaryAlt","_e","splitButtonDividerDisabled","palette","splitButtonMenuButtonChecked","neutralQuaternaryAlt","splitButtonMenuButtonExpanded","splitButtonMenuIcon","splitButtonMenuIconDisabled","buttonTextDisabled","primaryStyles","primaryButtonBackground","primaryButtonText","MsHighContrastAdjust","outlineColor","primaryButtonBackgroundHovered","primaryButtonTextHovered","primaryButtonBackgroundPressed","primaryButtonTextPressed","_f","_g","_h","primaryButtonBackgroundDisabled","neutralTertiary","_j"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\office-ui-fabric-react\\lib\\components\\src\\components\\Button\\ButtonThemes.ts"],"sourcesContent":["import { IButtonStyles } from './Button.types';\nimport { ITheme, HighContrastSelector, IRawStyle } from '../../Styling';\nimport { IsFocusVisibleClassName } from '../../Utilities';\n\nconst splitButtonDividerBaseStyles = (): IRawStyle => {\n  return {\n    position: 'absolute',\n    width: 1,\n    right: 31,\n    top: 8,\n    bottom: 8,\n  };\n};\n\nexport function standardStyles(theme: ITheme): IButtonStyles {\n  const { semanticColors: s, palette: p } = theme;\n\n  const buttonBackground = s.buttonBackground;\n  const buttonBackgroundPressed = s.buttonBackgroundPressed;\n  const buttonBackgroundHovered = s.buttonBackgroundHovered;\n\n  const buttonText = s.buttonText;\n  const buttonTextHovered = s.buttonTextHovered;\n  const buttonTextChecked = s.buttonTextChecked;\n  const buttonTextCheckedHovered = s.buttonTextCheckedHovered;\n\n  return {\n    root: {\n      backgroundColor: buttonBackground,\n      color: buttonText,\n    },\n\n    rootHovered: {\n      backgroundColor: buttonBackgroundHovered,\n      color: buttonTextHovered,\n      selectors: {\n        [HighContrastSelector]: {\n          borderColor: 'Highlight',\n          color: 'Highlight',\n        },\n      },\n    },\n\n    rootPressed: {\n      backgroundColor: buttonBackgroundPressed,\n      color: buttonTextChecked,\n    },\n\n    rootExpanded: {\n      backgroundColor: buttonBackgroundPressed,\n      color: buttonTextChecked,\n    },\n\n    rootChecked: {\n      backgroundColor: buttonBackgroundPressed,\n      color: buttonTextChecked,\n    },\n\n    rootCheckedHovered: {\n      backgroundColor: buttonBackgroundPressed,\n      color: buttonTextCheckedHovered,\n    },\n\n    rootDisabled: {\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'GrayText',\n          borderColor: 'GrayText',\n          backgroundColor: 'Window',\n        },\n      },\n    },\n\n    // Split button styles\n    splitButtonContainer: {\n      selectors: {\n        [HighContrastSelector]: {\n          border: 'none',\n        },\n      },\n    },\n\n    splitButtonMenuButton: {\n      color: p.white,\n      backgroundColor: 'transparent',\n      selectors: {\n        ':hover': {\n          backgroundColor: p.neutralLight,\n          selectors: {\n            [HighContrastSelector]: {\n              color: 'Highlight',\n            },\n          },\n        },\n      },\n    },\n\n    splitButtonMenuButtonDisabled: {\n      backgroundColor: s.buttonBackgroundDisabled,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.buttonBackgroundDisabled,\n        },\n      },\n    },\n\n    splitButtonDivider: {\n      ...splitButtonDividerBaseStyles(),\n      backgroundColor: p.neutralTertiaryAlt,\n      selectors: {\n        [HighContrastSelector]: {\n          backgroundColor: 'WindowText',\n        },\n      },\n    },\n\n    splitButtonDividerDisabled: {\n      backgroundColor: theme.palette.neutralTertiaryAlt,\n    },\n\n    splitButtonMenuButtonChecked: {\n      backgroundColor: p.neutralQuaternaryAlt,\n      selectors: {\n        ':hover': {\n          backgroundColor: p.neutralQuaternaryAlt,\n        },\n      },\n    },\n\n    splitButtonMenuButtonExpanded: {\n      backgroundColor: p.neutralQuaternaryAlt,\n      selectors: {\n        ':hover': {\n          backgroundColor: p.neutralQuaternaryAlt,\n        },\n      },\n    },\n\n    splitButtonMenuIcon: {\n      color: s.buttonText,\n    },\n\n    splitButtonMenuIconDisabled: {\n      color: s.buttonTextDisabled,\n    },\n  };\n}\n\nexport function primaryStyles(theme: ITheme): IButtonStyles {\n  const { palette: p, semanticColors: s } = theme;\n\n  return {\n    root: {\n      backgroundColor: s.primaryButtonBackground,\n      border: `1px solid ${s.primaryButtonBackground}`,\n      color: s.primaryButtonText,\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'Window',\n          backgroundColor: 'WindowText',\n          borderColor: 'WindowText',\n          MsHighContrastAdjust: 'none',\n        },\n        [`.${IsFocusVisibleClassName} &:focus`]: {\n          selectors: {\n            ':after': {\n              border: `none`,\n              outlineColor: p.white,\n            },\n          },\n        },\n      },\n    },\n\n    rootHovered: {\n      backgroundColor: s.primaryButtonBackgroundHovered,\n      border: `1px solid ${s.primaryButtonBackgroundHovered}`,\n      color: s.primaryButtonTextHovered,\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'Window',\n          backgroundColor: 'Highlight',\n          borderColor: 'Highlight',\n        },\n      },\n    },\n\n    rootPressed: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      border: `1px solid ${s.primaryButtonBackgroundPressed}`,\n      color: s.primaryButtonTextPressed,\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'Window',\n          backgroundColor: 'WindowText',\n          borderColor: 'WindowText',\n          MsHighContrastAdjust: 'none',\n        },\n      },\n    },\n\n    rootExpanded: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      color: s.primaryButtonTextPressed,\n    },\n\n    rootChecked: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      color: s.primaryButtonTextPressed,\n    },\n\n    rootCheckedHovered: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      color: s.primaryButtonTextPressed,\n    },\n\n    rootDisabled: {\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'GrayText',\n          borderColor: 'GrayText',\n          backgroundColor: 'Window',\n        },\n      },\n    },\n\n    // Split button styles\n    splitButtonContainer: {\n      selectors: {\n        [HighContrastSelector]: {\n          border: 'none',\n        },\n      },\n    },\n\n    splitButtonDivider: {\n      ...splitButtonDividerBaseStyles(),\n      backgroundColor: p.white,\n      selectors: {\n        [HighContrastSelector]: {\n          backgroundColor: 'Window',\n        },\n      },\n    },\n\n    splitButtonMenuButton: {\n      backgroundColor: s.primaryButtonBackground,\n      color: s.primaryButtonText,\n      selectors: {\n        [HighContrastSelector]: {\n          backgroundColor: 'WindowText',\n        },\n        ':hover': {\n          backgroundColor: s.primaryButtonBackgroundHovered,\n          selectors: {\n            [HighContrastSelector]: {\n              color: 'Highlight',\n            },\n          },\n        },\n      },\n    },\n\n    splitButtonMenuButtonDisabled: {\n      backgroundColor: s.primaryButtonBackgroundDisabled,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.primaryButtonBackgroundDisabled,\n        },\n      },\n    },\n\n    splitButtonMenuButtonChecked: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.primaryButtonBackgroundPressed,\n        },\n      },\n    },\n\n    splitButtonMenuButtonExpanded: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.primaryButtonBackgroundPressed,\n        },\n      },\n    },\n\n    splitButtonMenuIcon: {\n      color: s.primaryButtonText,\n    },\n\n    splitButtonMenuIconDisabled: {\n      color: p.neutralTertiary,\n\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'GrayText',\n        },\n      },\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}