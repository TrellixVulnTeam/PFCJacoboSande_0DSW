{"ast":null,"code":"import { _isSSR } from './setSSR';\n/**\n * Helper to get the document object. Note that in popup window cases, document\n * might be the wrong document, which is why we look at ownerDocument for the\n * truth. Also note that the SSR flag is used to test ssr scenarios even if\n * document is defined (from JSDOM for example.)\n *\n * @public\n */\n\nexport function getDocument(rootElement) {\n  if (_isSSR || typeof document === 'undefined') {\n    return undefined;\n  } else {\n    var el = rootElement;\n    return el && el.ownerDocument ? el.ownerDocument : document;\n  }\n}","map":{"version":3,"mappings":"AAAA,SAASA,MAAT,QAAuB,UAAvB;AAEA;;;;;;;;;AAQA,OAAM,SAAUC,WAAV,CAAsBC,WAAtB,EAAsD;EAC1D,IAAIF,MAAM,IAAI,OAAOG,QAAP,KAAoB,WAAlC,EAA+C;IAC7C,OAAOC,SAAP;EACD,CAFD,MAEO;IACL,IAAMC,EAAE,GAAGH,WAAX;IAEA,OAAOG,EAAE,IAAIA,EAAE,CAACC,aAAT,GAAyBD,EAAE,CAACC,aAA5B,GAA4CH,QAAnD;EACD;AACF","names":["_isSSR","getDocument","rootElement","document","undefined","el","ownerDocument"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\office-ui-fabric-react\\node_modules\\@uifabric\\utilities\\lib\\src\\dom\\getDocument.ts"],"sourcesContent":["import { _isSSR } from './setSSR';\n\n/**\n * Helper to get the document object. Note that in popup window cases, document\n * might be the wrong document, which is why we look at ownerDocument for the\n * truth. Also note that the SSR flag is used to test ssr scenarios even if\n * document is defined (from JSDOM for example.)\n *\n * @public\n */\nexport function getDocument(rootElement?: HTMLElement | null): Document | undefined {\n  if (_isSSR || typeof document === 'undefined') {\n    return undefined;\n  } else {\n    const el = rootElement as Element;\n\n    return el && el.ownerDocument ? el.ownerDocument : document;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}