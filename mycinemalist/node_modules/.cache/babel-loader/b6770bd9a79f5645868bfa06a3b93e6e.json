{"ast":null,"code":"import { getWindow } from './dom/getWindow';\nimport { Stylesheet } from '@uifabric/merge-styles'; // Initialize global window id.\n\nvar CURRENT_ID_PROPERTY = '__currentId__';\nvar DEFAULT_ID_STRING = 'id__'; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nvar _global = getWindow() || {};\n\nif (_global[CURRENT_ID_PROPERTY] === undefined) {\n  _global[CURRENT_ID_PROPERTY] = 0;\n}\n\nvar _initializedStylesheetResets = false;\n/**\n * Generates a unique id in the global scope (this spans across duplicate copies of the same library.)\n *\n * @public\n */\n\nexport function getId(prefix) {\n  if (!_initializedStylesheetResets) {\n    // Configure ids to reset on stylesheet resets.\n    var stylesheet = Stylesheet.getInstance();\n\n    if (stylesheet && stylesheet.onReset) {\n      stylesheet.onReset(resetIds);\n    }\n\n    _initializedStylesheetResets = true;\n  }\n\n  var index = _global[CURRENT_ID_PROPERTY]++;\n  return (prefix === undefined ? DEFAULT_ID_STRING : prefix) + index;\n}\n/**\n * Resets id counter to an (optional) number.\n *\n * @public\n */\n\nexport function resetIds(counter) {\n  if (counter === void 0) {\n    counter = 0;\n  }\n\n  _global[CURRENT_ID_PROPERTY] = counter;\n}","map":{"version":3,"mappings":"AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,SAASC,UAAT,QAA2B,wBAA3B,C,CAEA;;AACA,IAAMC,mBAAmB,GAAG,eAA5B;AACA,IAAMC,iBAAiB,GAAG,MAA1B,C,CAEA;;AACA,IAAIC,OAAO,GAAQJ,SAAS,MAAM,EAAlC;;AAEA,IAAII,OAAO,CAACF,mBAAD,CAAP,KAAiCG,SAArC,EAAgD;AAC9CD,SAAO,CAACF,mBAAD,CAAP,GAA+B,CAA/B;AACD;;AAED,IAAII,4BAA4B,GAAG,KAAnC;AAEA;;;;;;AAKA,OAAM,SAAUC,KAAV,CAAgBC,MAAhB,EAA+B;AACnC,MAAI,CAACF,4BAAL,EAAmC;AACjC;AACA,QAAMG,UAAU,GAAGR,UAAU,CAACS,WAAX,EAAnB;;AAEA,QAAID,UAAU,IAAIA,UAAU,CAACE,OAA7B,EAAsC;AACpCF,gBAAU,CAACE,OAAX,CAAmBC,QAAnB;AACD;;AACDN,gCAA4B,GAAG,IAA/B;AACD;;AAED,MAAIO,KAAK,GAAGT,OAAO,CAACF,mBAAD,CAAP,EAAZ;AAEA,SAAO,CAACM,MAAM,KAAKH,SAAX,GAAuBF,iBAAvB,GAA2CK,MAA5C,IAAsDK,KAA7D;AACD;AAED;;;;;;AAKA,OAAM,SAAUD,QAAV,CAAmBE,OAAnB,EAAsC;AAAnB;AAAAA;AAAmB;;AAC1CV,SAAO,CAACF,mBAAD,CAAP,GAA+BY,OAA/B;AACD","names":["getWindow","Stylesheet","CURRENT_ID_PROPERTY","DEFAULT_ID_STRING","_global","undefined","_initializedStylesheetResets","getId","prefix","stylesheet","getInstance","onReset","resetIds","index","counter"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\@uifabric\\utilities\\src\\getId.ts"],"sourcesContent":["import { getWindow } from './dom/getWindow';\nimport { Stylesheet } from '@uifabric/merge-styles';\n\n// Initialize global window id.\nconst CURRENT_ID_PROPERTY = '__currentId__';\nconst DEFAULT_ID_STRING = 'id__';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nlet _global: any = getWindow() || {};\n\nif (_global[CURRENT_ID_PROPERTY] === undefined) {\n  _global[CURRENT_ID_PROPERTY] = 0;\n}\n\nlet _initializedStylesheetResets = false;\n\n/**\n * Generates a unique id in the global scope (this spans across duplicate copies of the same library.)\n *\n * @public\n */\nexport function getId(prefix?: string): string {\n  if (!_initializedStylesheetResets) {\n    // Configure ids to reset on stylesheet resets.\n    const stylesheet = Stylesheet.getInstance();\n\n    if (stylesheet && stylesheet.onReset) {\n      stylesheet.onReset(resetIds);\n    }\n    _initializedStylesheetResets = true;\n  }\n\n  let index = _global[CURRENT_ID_PROPERTY]++;\n\n  return (prefix === undefined ? DEFAULT_ID_STRING : prefix) + index;\n}\n\n/**\n * Resets id counter to an (optional) number.\n *\n * @public\n */\nexport function resetIds(counter: number = 0): void {\n  _global[CURRENT_ID_PROPERTY] = counter;\n}\n"]},"metadata":{},"sourceType":"module"}