{"ast":null,"code":"import { concatStyleSets, HighContrastSelector } from '../../../Styling';\nimport { memoizeFunction } from '../../../Utilities';\nimport { getStyles as getBaseButtonStyles } from '../BaseButton.styles';\nvar DEFAULT_BUTTON_HEIGHT = '40px';\nvar DEFAULT_PADDING = '0 4px';\nexport var getStyles = memoizeFunction(function (theme, customStyles) {\n  var _a;\n\n  var baseButtonStyles = getBaseButtonStyles(theme);\n  var actionButtonStyles = {\n    root: {\n      padding: DEFAULT_PADDING,\n      height: DEFAULT_BUTTON_HEIGHT,\n      color: theme.palette.neutralPrimary,\n      backgroundColor: 'transparent',\n      border: '1px solid transparent'\n    },\n    rootHovered: {\n      color: theme.palette.themePrimary,\n      selectors: (_a = {}, _a[HighContrastSelector] = {\n        borderColor: 'Highlight',\n        color: 'Highlight'\n      }, _a)\n    },\n    iconHovered: {\n      color: theme.palette.themePrimary\n    },\n    rootPressed: {\n      color: theme.palette.black\n    },\n    rootExpanded: {\n      color: theme.palette.themePrimary\n    },\n    iconPressed: {\n      color: theme.palette.themeDarker\n    },\n    rootDisabled: {\n      color: theme.palette.neutralTertiary,\n      backgroundColor: 'transparent',\n      borderColor: 'transparent'\n    },\n    rootChecked: {\n      color: theme.palette.black\n    },\n    iconChecked: {\n      color: theme.palette.themeDarker\n    },\n    flexContainer: {\n      justifyContent: 'flex-start'\n    },\n    icon: {\n      color: theme.palette.themeDarkAlt\n    },\n    iconDisabled: {\n      color: 'inherit'\n    },\n    menuIcon: {\n      color: theme.palette.neutralSecondary\n    },\n    textContainer: {\n      flexGrow: 0\n    }\n  };\n  return concatStyleSets(baseButtonStyles, actionButtonStyles, customStyles);\n});","map":{"version":3,"mappings":"AACA,SAAiBA,eAAjB,EAAkCC,oBAAlC,QAA8D,kBAA9D;AACA,SAASC,eAAT,QAAgC,oBAAhC;AACA,SAASC,SAAS,IAAIC,mBAAtB,QAAiD,sBAAjD;AAEA,IAAMC,qBAAqB,GAAG,MAA9B;AACA,IAAMC,eAAe,GAAG,OAAxB;AAEA,OAAO,IAAMH,SAAS,GAAGD,eAAe,CACtC,UAACK,KAAD,EAAgBC,YAAhB,EAA4C;;;EAC1C,IAAMC,gBAAgB,GAAkBL,mBAAmB,CAACG,KAAD,CAA3D;EACA,IAAMG,kBAAkB,GAAkB;IACxCC,IAAI,EAAE;MACJC,OAAO,EAAEN,eADL;MAEJO,MAAM,EAAER,qBAFJ;MAGJS,KAAK,EAAEP,KAAK,CAACQ,OAAN,CAAcC,cAHjB;MAIJC,eAAe,EAAE,aAJb;MAKJC,MAAM,EAAE;IALJ,CADkC;IASxCC,WAAW,EAAE;MACXL,KAAK,EAAEP,KAAK,CAACQ,OAAN,CAAcK,YADV;MAEXC,SAAS,YACPC,GAACrB,oBAAD,IAAwB;QACtBsB,WAAW,EAAE,WADS;QAEtBT,KAAK,EAAE;MAFe,CADjB;IAFE,CAT2B;IAmBxCU,WAAW,EAAE;MACXV,KAAK,EAAEP,KAAK,CAACQ,OAAN,CAAcK;IADV,CAnB2B;IAuBxCK,WAAW,EAAE;MACXX,KAAK,EAAEP,KAAK,CAACQ,OAAN,CAAcW;IADV,CAvB2B;IA2BxCC,YAAY,EAAE;MACZb,KAAK,EAAEP,KAAK,CAACQ,OAAN,CAAcK;IADT,CA3B0B;IA+BxCQ,WAAW,EAAE;MACXd,KAAK,EAAEP,KAAK,CAACQ,OAAN,CAAcc;IADV,CA/B2B;IAmCxCC,YAAY,EAAE;MACZhB,KAAK,EAAEP,KAAK,CAACQ,OAAN,CAAcgB,eADT;MAEZd,eAAe,EAAE,aAFL;MAGZM,WAAW,EAAE;IAHD,CAnC0B;IAyCxCS,WAAW,EAAE;MACXlB,KAAK,EAAEP,KAAK,CAACQ,OAAN,CAAcW;IADV,CAzC2B;IA6CxCO,WAAW,EAAE;MACXnB,KAAK,EAAEP,KAAK,CAACQ,OAAN,CAAcc;IADV,CA7C2B;IAiDxCK,aAAa,EAAE;MACbC,cAAc,EAAE;IADH,CAjDyB;IAqDxCC,IAAI,EAAE;MACJtB,KAAK,EAAEP,KAAK,CAACQ,OAAN,CAAcsB;IADjB,CArDkC;IAyDxCC,YAAY,EAAE;MACZxB,KAAK,EAAE;IADK,CAzD0B;IA6DxCyB,QAAQ,EAAE;MACRzB,KAAK,EAAEP,KAAK,CAACQ,OAAN,CAAcyB;IADb,CA7D8B;IAiExCC,aAAa,EAAE;MACbC,QAAQ,EAAE;IADG;EAjEyB,CAA1C;EAsEA,OAAO1C,eAAe,CAACS,gBAAD,EAAmBC,kBAAnB,EAAuCF,YAAvC,CAAtB;AACD,CA1EqC,CAAjC","names":["concatStyleSets","HighContrastSelector","memoizeFunction","getStyles","getBaseButtonStyles","DEFAULT_BUTTON_HEIGHT","DEFAULT_PADDING","theme","customStyles","baseButtonStyles","actionButtonStyles","root","padding","height","color","palette","neutralPrimary","backgroundColor","border","rootHovered","themePrimary","selectors","_a","borderColor","iconHovered","rootPressed","black","rootExpanded","iconPressed","themeDarker","rootDisabled","neutralTertiary","rootChecked","iconChecked","flexContainer","justifyContent","icon","themeDarkAlt","iconDisabled","menuIcon","neutralSecondary","textContainer","flexGrow"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\office-ui-fabric-react\\lib\\components\\Button\\src\\components\\Button\\ActionButton\\ActionButton.styles.ts"],"sourcesContent":["import { IButtonStyles } from '../Button.types';\nimport { ITheme, concatStyleSets, HighContrastSelector } from '../../../Styling';\nimport { memoizeFunction } from '../../../Utilities';\nimport { getStyles as getBaseButtonStyles } from '../BaseButton.styles';\n\nconst DEFAULT_BUTTON_HEIGHT = '40px';\nconst DEFAULT_PADDING = '0 4px';\n\nexport const getStyles = memoizeFunction(\n  (theme: ITheme, customStyles?: IButtonStyles): IButtonStyles => {\n    const baseButtonStyles: IButtonStyles = getBaseButtonStyles(theme);\n    const actionButtonStyles: IButtonStyles = {\n      root: {\n        padding: DEFAULT_PADDING,\n        height: DEFAULT_BUTTON_HEIGHT,\n        color: theme.palette.neutralPrimary,\n        backgroundColor: 'transparent',\n        border: '1px solid transparent',\n      },\n\n      rootHovered: {\n        color: theme.palette.themePrimary,\n        selectors: {\n          [HighContrastSelector]: {\n            borderColor: 'Highlight',\n            color: 'Highlight',\n          },\n        },\n      },\n\n      iconHovered: {\n        color: theme.palette.themePrimary,\n      },\n\n      rootPressed: {\n        color: theme.palette.black,\n      },\n\n      rootExpanded: {\n        color: theme.palette.themePrimary,\n      },\n\n      iconPressed: {\n        color: theme.palette.themeDarker,\n      },\n\n      rootDisabled: {\n        color: theme.palette.neutralTertiary,\n        backgroundColor: 'transparent',\n        borderColor: 'transparent',\n      },\n\n      rootChecked: {\n        color: theme.palette.black,\n      },\n\n      iconChecked: {\n        color: theme.palette.themeDarker,\n      },\n\n      flexContainer: {\n        justifyContent: 'flex-start',\n      },\n\n      icon: {\n        color: theme.palette.themeDarkAlt,\n      },\n\n      iconDisabled: {\n        color: 'inherit',\n      },\n\n      menuIcon: {\n        color: theme.palette.neutralSecondary,\n      },\n\n      textContainer: {\n        flexGrow: 0,\n      },\n    };\n\n    return concatStyleSets(baseButtonStyles, actionButtonStyles, customStyles)!;\n  },\n);\n"]},"metadata":{},"sourceType":"module"}