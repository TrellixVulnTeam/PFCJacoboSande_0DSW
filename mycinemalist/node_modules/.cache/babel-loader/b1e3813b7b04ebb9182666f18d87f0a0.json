{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { css, getId, initializeComponentRef } from '../../../../Utilities';\nimport { Persona, PersonaSize } from '../../../../Persona';\nimport { IconButton } from '../../../../Button';\nimport * as stylesImport from './ExtendedSelectedItem.scss';\nvar styles = stylesImport;\n\nvar ExtendedSelectedItem =\n/** @class */\nfunction (_super) {\n  __extends(ExtendedSelectedItem, _super);\n\n  function ExtendedSelectedItem(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.persona = React.createRef();\n    initializeComponentRef(_this); // eslint-disable-next-line react/no-unused-state\n\n    _this.state = {\n      contextualMenuVisible: false\n    };\n    return _this;\n  }\n\n  ExtendedSelectedItem.prototype.render = function () {\n    var _a, _b;\n\n    var _c = this.props,\n        item = _c.item,\n        onExpandItem = _c.onExpandItem,\n        onRemoveItem = _c.onRemoveItem,\n        removeButtonAriaLabel = _c.removeButtonAriaLabel,\n        index = _c.index,\n        selected = _c.selected;\n    var itemId = getId();\n    return React.createElement(\"div\", {\n      ref: this.persona,\n      className: css('ms-PickerPersona-container', styles.personaContainer, (_a = {}, _a['is-selected ' + styles.personaContainerIsSelected] = selected, _a), (_b = {}, _b['is-invalid ' + styles.validationError] = !item.isValid, _b)),\n      \"data-is-focusable\": true,\n      \"data-is-sub-focuszone\": true,\n      \"data-selection-index\": index,\n      role: 'listitem',\n      \"aria-labelledby\": 'selectedItemPersona-' + itemId\n    }, React.createElement(\"div\", {\n      hidden: !item.canExpand || onExpandItem === undefined\n    }, React.createElement(IconButton, {\n      onClick: this._onClickIconButton(onExpandItem),\n      iconProps: {\n        iconName: 'Add',\n        style: {\n          fontSize: '14px'\n        }\n      },\n      className: css('ms-PickerItem-removeButton', styles.expandButton, styles.actionButton),\n      ariaLabel: removeButtonAriaLabel\n    })), React.createElement(\"div\", {\n      className: css(styles.personaWrapper)\n    }, React.createElement(\"div\", {\n      className: css('ms-PickerItem-content', styles.itemContent),\n      id: 'selectedItemPersona-' + itemId\n    }, React.createElement(Persona, __assign({}, item, {\n      onRenderCoin: this.props.renderPersonaCoin,\n      onRenderPrimaryText: this.props.renderPrimaryText,\n      size: PersonaSize.size32\n    }))), React.createElement(IconButton, {\n      onClick: this._onClickIconButton(onRemoveItem),\n      iconProps: {\n        iconName: 'Cancel',\n        style: {\n          fontSize: '14px'\n        }\n      },\n      className: css('ms-PickerItem-removeButton', styles.removeButton, styles.actionButton),\n      ariaLabel: removeButtonAriaLabel\n    })));\n  };\n\n  ExtendedSelectedItem.prototype._onClickIconButton = function (action) {\n    return function (ev) {\n      ev.stopPropagation();\n      ev.preventDefault();\n\n      if (action) {\n        action();\n      }\n    };\n  };\n\n  return ExtendedSelectedItem;\n}(React.Component);\n\nexport { ExtendedSelectedItem };","map":{"version":3,"mappings":"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","names":["React","css","getId","initializeComponentRef","Persona","PersonaSize","IconButton","stylesImport","styles","__extends","props","_super","_this","createRef","state","contextualMenuVisible","ExtendedSelectedItem","item","onExpandItem","onRemoveItem","removeButtonAriaLabel","index","selected","itemId","ref","persona","className","personaContainer","_a","personaContainerIsSelected","_b","validationError","isValid","role","hidden","canExpand","undefined","onClick","_onClickIconButton","iconProps","iconName","style","fontSize","expandButton","actionButton","ariaLabel","personaWrapper","itemContent","id","__assign","onRenderCoin","renderPersonaCoin","onRenderPrimaryText","renderPrimaryText","size","size32","removeButton","action","ev","stopPropagation","preventDefault","Component"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\office-ui-fabric-react\\lib\\components\\SelectedItemsList\\SelectedPeopleList\\src\\components\\SelectedItemsList\\SelectedPeopleList\\Items\\ExtendedSelectedItem.tsx"],"sourcesContent":["import * as React from 'react';\nimport { css, getId, initializeComponentRef } from '../../../../Utilities';\nimport { Persona, PersonaSize } from '../../../../Persona';\nimport { ISelectedPeopleItemProps } from '../SelectedPeopleList';\nimport { IconButton } from '../../../../Button';\nimport * as stylesImport from './ExtendedSelectedItem.scss';\nconst styles: any = stylesImport;\n\nexport interface IPeoplePickerItemState {\n  contextualMenuVisible: boolean;\n}\n\nexport class ExtendedSelectedItem extends React.Component<ISelectedPeopleItemProps, IPeoplePickerItemState> {\n  protected persona = React.createRef<HTMLDivElement>();\n\n  constructor(props: ISelectedPeopleItemProps) {\n    super(props);\n\n    initializeComponentRef(this);\n    // eslint-disable-next-line react/no-unused-state\n    this.state = { contextualMenuVisible: false };\n  }\n\n  public render(): JSX.Element {\n    const { item, onExpandItem, onRemoveItem, removeButtonAriaLabel, index, selected } = this.props;\n    const itemId = getId();\n    return (\n      <div\n        ref={this.persona}\n        className={css(\n          'ms-PickerPersona-container',\n          styles.personaContainer,\n          { ['is-selected ' + styles.personaContainerIsSelected]: selected },\n          { ['is-invalid ' + styles.validationError]: !item.isValid },\n        )}\n        data-is-focusable={true}\n        data-is-sub-focuszone={true}\n        data-selection-index={index}\n        role={'listitem'}\n        aria-labelledby={'selectedItemPersona-' + itemId}\n      >\n        <div hidden={!item.canExpand || onExpandItem === undefined}>\n          <IconButton\n            onClick={this._onClickIconButton(onExpandItem)}\n            iconProps={{ iconName: 'Add', style: { fontSize: '14px' } }}\n            className={css('ms-PickerItem-removeButton', styles.expandButton, styles.actionButton)}\n            ariaLabel={removeButtonAriaLabel}\n          />\n        </div>\n        <div className={css(styles.personaWrapper)}>\n          <div className={css('ms-PickerItem-content', styles.itemContent)} id={'selectedItemPersona-' + itemId}>\n            <Persona\n              {...item}\n              onRenderCoin={this.props.renderPersonaCoin}\n              onRenderPrimaryText={this.props.renderPrimaryText}\n              size={PersonaSize.size32}\n            />\n          </div>\n          <IconButton\n            onClick={this._onClickIconButton(onRemoveItem)}\n            iconProps={{ iconName: 'Cancel', style: { fontSize: '14px' } }}\n            className={css('ms-PickerItem-removeButton', styles.removeButton, styles.actionButton)}\n            ariaLabel={removeButtonAriaLabel}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  private _onClickIconButton(\n    action: (() => void) | undefined,\n  ): (ev: React.MouseEvent<HTMLAnchorElement | HTMLButtonElement>) => void {\n    return (ev: React.MouseEvent<HTMLAnchorElement | HTMLButtonElement>): void => {\n      ev.stopPropagation();\n      ev.preventDefault();\n      if (action) {\n        action();\n      }\n    };\n  }\n}\n"]},"metadata":{},"sourceType":"module"}