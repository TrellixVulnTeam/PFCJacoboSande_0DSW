{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { KeyCodes, css, getRTL, format } from '../../Utilities';\nimport { FocusZone } from '../../FocusZone';\nimport * as stylesImport from './Calendar.scss';\nimport { Icon } from '../../Icon';\nvar styles = stylesImport;\nvar CELL_COUNT = 12;\nvar DefaultCalendarYearStrings = {\n  prevRangeAriaLabel: undefined,\n  nextRangeAriaLabel: undefined\n};\nvar DefaultNavigationIcons = {\n  leftNavigation: 'Up',\n  rightNavigation: 'Down',\n  closeIcon: 'CalculatorMultiply'\n};\n\nvar CalendarYearGridCell =\n/** @class */\nfunction (_super) {\n  __extends(CalendarYearGridCell, _super);\n\n  function CalendarYearGridCell() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this._buttonRef = React.createRef();\n\n    _this._onRenderYear = function () {\n      var _a = _this.props,\n          year = _a.year,\n          onRenderYear = _a.onRenderYear;\n\n      if (onRenderYear) {\n        return onRenderYear(year);\n      }\n\n      return year;\n    };\n\n    _this._onClick = function () {\n      if (_this.props.onSelectYear) {\n        _this.props.onSelectYear(_this.props.year);\n      }\n    };\n\n    _this._onKeyDown = function (ev) {\n      if (_this.props.onSelectYear && ev.which === KeyCodes.enter) {\n        _this.props.onSelectYear(_this.props.year);\n      }\n    };\n\n    return _this;\n  }\n\n  CalendarYearGridCell.prototype.focus = function () {\n    if (this._buttonRef.current) {\n      this._buttonRef.current.focus();\n    }\n  };\n\n  CalendarYearGridCell.prototype.render = function () {\n    var _a;\n\n    var _b = this.props,\n        year = _b.year,\n        selected = _b.selected,\n        disabled = _b.disabled,\n        onSelectYear = _b.onSelectYear;\n    return React.createElement(\"button\", {\n      className: css('ms-DatePicker-yearOption', styles.yearOption, (_a = {}, _a['ms-DatePicker-day--highlighted ' + styles.yearIsHighlighted] = selected, _a['ms-DatePicker-yearOption--disabled ' + styles.yearOptionIsDisabled] = disabled, _a)),\n      type: \"button\",\n      role: \"gridcell\",\n      onClick: !disabled && onSelectYear ? this._onClick : undefined,\n      onKeyDown: !disabled && onSelectYear ? this._onKeyDown : undefined,\n      disabled: disabled,\n      \"aria-label\": String(year),\n      \"aria-selected\": selected,\n      ref: this._buttonRef\n    }, this._onRenderYear());\n  };\n\n  return CalendarYearGridCell;\n}(React.Component);\n\nvar CalendarYearGrid =\n/** @class */\nfunction (_super) {\n  __extends(CalendarYearGrid, _super);\n\n  function CalendarYearGrid() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this._selectedCellRef = React.createRef();\n    _this._currentCellRef = React.createRef();\n\n    _this._renderCell = function (year) {\n      var selected = year === _this.props.selectedYear;\n      var _a = _this.props,\n          minYear = _a.minYear,\n          maxYear = _a.maxYear,\n          onSelectYear = _a.onSelectYear;\n      var disabled = minYear !== undefined && year < minYear || maxYear !== undefined && year > maxYear;\n      var current = year === new Date().getFullYear();\n      return React.createElement(CalendarYearGridCell, {\n        key: year,\n        year: year,\n        selected: selected,\n        current: current,\n        disabled: disabled,\n        onSelectYear: onSelectYear,\n        ref: selected ? _this._selectedCellRef : current ? _this._currentCellRef : undefined\n      });\n    };\n\n    return _this;\n  }\n\n  CalendarYearGrid.prototype.focus = function () {\n    if (this._selectedCellRef.current) {\n      this._selectedCellRef.current.focus();\n    } else if (this._currentCellRef.current) {\n      this._currentCellRef.current.focus();\n    }\n  };\n\n  CalendarYearGrid.prototype.render = function () {\n    var _a = this.props,\n        fromYear = _a.fromYear,\n        toYear = _a.toYear;\n    var year = fromYear;\n    var cells = [];\n\n    while (year <= toYear) {\n      cells.push(this._renderCell(year));\n      year++;\n    }\n\n    return React.createElement(FocusZone, null, React.createElement(\"div\", {\n      className: css('ms-DatePicker-optionGrid', styles.optionGrid),\n      role: \"grid\"\n    }, React.createElement(\"div\", {\n      role: \"row\"\n    }, cells)));\n  };\n\n  return CalendarYearGrid;\n}(React.Component);\n\nvar CalendarYearNavPrev =\n/** @class */\nfunction (_super) {\n  __extends(CalendarYearNavPrev, _super);\n\n  function CalendarYearNavPrev() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this._onSelectPrev = function () {\n      if (!_this.isDisabled && _this.props.onSelectPrev) {\n        _this.props.onSelectPrev();\n      }\n    };\n\n    _this._onKeyDown = function (ev) {\n      if (ev.which === KeyCodes.enter) {\n        _this._onSelectPrev();\n      }\n    };\n\n    return _this;\n  }\n\n  CalendarYearNavPrev.prototype.render = function () {\n    var _a;\n\n    var iconStrings = this.props.navigationIcons || DefaultNavigationIcons;\n    var strings = this.props.strings || DefaultCalendarYearStrings;\n    var prevRangeAriaLabel = strings.prevRangeAriaLabel;\n    var prevRange = {\n      fromYear: this.props.fromYear - CELL_COUNT,\n      toYear: this.props.toYear - CELL_COUNT\n    };\n    var prevAriaLabel = prevRangeAriaLabel ? typeof prevRangeAriaLabel === 'string' ? prevRangeAriaLabel : prevRangeAriaLabel(prevRange) : undefined;\n    var disabled = this.isDisabled;\n    var onSelectPrev = this.props.onSelectPrev;\n    return React.createElement(\"button\", {\n      className: css('ms-DatePicker-prevDecade', styles.prevDecade, (_a = {}, _a['ms-DatePicker-prevDecade--disabled ' + styles.prevDecadeIsDisabled] = disabled, _a)),\n      onClick: !disabled && onSelectPrev ? this._onSelectPrev : undefined,\n      onKeyDown: !disabled && onSelectPrev ? this._onKeyDown : undefined,\n      type: \"button\",\n      tabIndex: 0,\n      title: prevAriaLabel,\n      disabled: disabled\n    }, React.createElement(Icon, {\n      iconName: getRTL() ? iconStrings.rightNavigation : iconStrings.leftNavigation\n    }));\n  };\n\n  Object.defineProperty(CalendarYearNavPrev.prototype, \"isDisabled\", {\n    get: function get() {\n      var minYear = this.props.minYear;\n      return minYear !== undefined && this.props.fromYear < minYear;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return CalendarYearNavPrev;\n}(React.Component);\n\nvar CalendarYearNavNext =\n/** @class */\nfunction (_super) {\n  __extends(CalendarYearNavNext, _super);\n\n  function CalendarYearNavNext() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this._onSelectNext = function () {\n      if (!_this.isDisabled && _this.props.onSelectNext) {\n        _this.props.onSelectNext();\n      }\n    };\n\n    _this._onKeyDown = function (ev) {\n      if (ev.which === KeyCodes.enter) {\n        _this._onSelectNext();\n      }\n    };\n\n    return _this;\n  }\n\n  CalendarYearNavNext.prototype.render = function () {\n    var _a;\n\n    var iconStrings = this.props.navigationIcons || DefaultNavigationIcons;\n    var strings = this.props.strings || DefaultCalendarYearStrings;\n    var nextRangeAriaLabel = strings.nextRangeAriaLabel;\n    var nextRange = {\n      fromYear: this.props.fromYear + CELL_COUNT,\n      toYear: this.props.toYear + CELL_COUNT\n    };\n    var nextAriaLabel = nextRangeAriaLabel ? typeof nextRangeAriaLabel === 'string' ? nextRangeAriaLabel : nextRangeAriaLabel(nextRange) : undefined;\n    var onSelectNext = this.props.onSelectNext;\n    var disabled = this.isDisabled;\n    return React.createElement(\"button\", {\n      className: css('ms-DatePicker-nextDecade', styles.nextDecade, (_a = {}, _a['ms-DatePicker-nextDecade--disabled ' + styles.nextDecadeIsDisabled] = disabled, _a)),\n      onClick: !disabled && onSelectNext ? this._onSelectNext : undefined,\n      onKeyDown: !disabled && onSelectNext ? this._onKeyDown : undefined,\n      type: \"button\",\n      tabIndex: 0,\n      title: nextAriaLabel,\n      disabled: this.isDisabled\n    }, React.createElement(Icon, {\n      iconName: getRTL() ? iconStrings.leftNavigation : iconStrings.rightNavigation\n    }));\n  };\n\n  Object.defineProperty(CalendarYearNavNext.prototype, \"isDisabled\", {\n    get: function get() {\n      var maxYear = this.props.maxYear;\n      return maxYear !== undefined && this.props.fromYear + CELL_COUNT > maxYear;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return CalendarYearNavNext;\n}(React.Component);\n\nvar CalendarYearNav =\n/** @class */\nfunction (_super) {\n  __extends(CalendarYearNav, _super);\n\n  function CalendarYearNav() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  CalendarYearNav.prototype.render = function () {\n    return React.createElement(\"div\", {\n      className: css('ms-DatePicker-decadeComponents', styles.decadeComponents)\n    }, React.createElement(\"div\", {\n      className: css('ms-DatePicker-navContainer', styles.navContainer)\n    }, React.createElement(CalendarYearNavPrev, __assign({}, this.props)), React.createElement(CalendarYearNavNext, __assign({}, this.props))));\n  };\n\n  return CalendarYearNav;\n}(React.Component);\n\nvar CalendarYearTitle =\n/** @class */\nfunction (_super) {\n  __extends(CalendarYearTitle, _super);\n\n  function CalendarYearTitle() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this._onHeaderSelect = function () {\n      if (_this.props.onHeaderSelect) {\n        _this.props.onHeaderSelect(true);\n      }\n    };\n\n    _this._onHeaderKeyDown = function (ev) {\n      if (_this.props.onHeaderSelect && (ev.which === KeyCodes.enter || ev.which === KeyCodes.space)) {\n        _this.props.onHeaderSelect(true);\n      }\n    };\n\n    _this._onRenderYear = function (year) {\n      if (_this.props.onRenderYear) {\n        return _this.props.onRenderYear(year);\n      }\n\n      return year;\n    };\n\n    return _this;\n  }\n\n  CalendarYearTitle.prototype.render = function () {\n    var _a = this.props,\n        fromYear = _a.fromYear,\n        toYear = _a.toYear,\n        onHeaderSelect = _a.onHeaderSelect;\n\n    if (onHeaderSelect) {\n      var strings = this.props.strings || DefaultCalendarYearStrings;\n      var rangeAriaLabel = strings.rangeAriaLabel;\n      var currentDateRange = rangeAriaLabel ? typeof rangeAriaLabel === 'string' ? rangeAriaLabel : rangeAriaLabel(this.props) : undefined;\n      var ariaLabel = strings.headerAriaLabelFormatString ? format(strings.headerAriaLabelFormatString, currentDateRange) : currentDateRange;\n      return React.createElement(\"div\", {\n        className: css('ms-DatePicker-currentDecade js-showYearPicker', styles.currentDecade, styles.headerToggleView),\n        onClick: this._onHeaderSelect,\n        onKeyDown: this._onHeaderKeyDown,\n        \"aria-label\": ariaLabel,\n        role: \"button\",\n        \"aria-atomic\": true,\n        \"aria-live\": \"polite\",\n        tabIndex: 0\n      }, this._onRenderYear(fromYear), \" - \", this._onRenderYear(toYear));\n    }\n\n    return React.createElement(\"div\", {\n      className: css('ms-DatePicker-currentDecade js-showYearPicker', styles.currentDecade)\n    }, this._onRenderYear(fromYear), \" - \", this._onRenderYear(toYear));\n  };\n\n  return CalendarYearTitle;\n}(React.Component);\n\nvar CalendarYearHeader =\n/** @class */\nfunction (_super) {\n  __extends(CalendarYearHeader, _super);\n\n  function CalendarYearHeader() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this._onRenderTitle = function () {\n      if (_this.props.onRenderTitle) {\n        return _this.props.onRenderTitle(_this.props);\n      }\n\n      return React.createElement(CalendarYearTitle, __assign({}, _this.props));\n    };\n\n    _this._onRenderNav = function () {\n      return React.createElement(CalendarYearNav, __assign({}, _this.props));\n    };\n\n    return _this;\n  }\n\n  CalendarYearHeader.prototype.render = function () {\n    return React.createElement(\"div\", {\n      className: css('ms-DatePicker-header', styles.header)\n    }, this._onRenderTitle(), this._onRenderNav());\n  };\n\n  return CalendarYearHeader;\n}(React.Component);\n\nvar CalendarYear =\n/** @class */\nfunction (_super) {\n  __extends(CalendarYear, _super);\n\n  function CalendarYear(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this._gridRef = React.createRef();\n\n    _this._onNavNext = function () {\n      _this.setState({\n        fromYear: _this.state.fromYear + CELL_COUNT\n      });\n    };\n\n    _this._onNavPrev = function () {\n      _this.setState({\n        fromYear: _this.state.fromYear - CELL_COUNT\n      });\n    };\n\n    _this._renderHeader = function () {\n      return React.createElement(CalendarYearHeader, __assign({}, _this.props, {\n        fromYear: _this.state.fromYear,\n        toYear: _this.state.fromYear + CELL_COUNT - 1,\n        onSelectPrev: _this._onNavPrev,\n        onSelectNext: _this._onNavNext\n      }));\n    };\n\n    _this._renderGrid = function () {\n      return React.createElement(CalendarYearGrid, __assign({}, _this.props, {\n        fromYear: _this.state.fromYear,\n        toYear: _this.state.fromYear + CELL_COUNT - 1,\n        ref: _this._gridRef\n      }));\n    };\n\n    _this.state = _this._calculateInitialStateFromProps(props);\n    return _this;\n  }\n\n  CalendarYear.prototype.focus = function () {\n    if (this._gridRef.current) {\n      this._gridRef.current.focus();\n    }\n  };\n\n  CalendarYear.prototype.render = function () {\n    return React.createElement(\"div\", {\n      className: css('ms-DatePicker-yearPicker', styles.yearPicker)\n    }, this._renderHeader(), this._renderGrid());\n  };\n\n  CalendarYear.prototype._calculateInitialStateFromProps = function (props) {\n    var selectedYear = props.selectedYear,\n        navigatedYear = props.navigatedYear;\n    var rangeYear = selectedYear || navigatedYear || new Date().getFullYear();\n    var fromYear = Math.floor(rangeYear / 10) * 10;\n    return {\n      fromYear: fromYear,\n      navigatedYear: navigatedYear,\n      selectedYear: selectedYear\n    };\n  };\n\n  return CalendarYear;\n}(React.Component);\n\nexport { CalendarYear };","map":{"version":3,"mappings":"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","names":["React","KeyCodes","css","getRTL","format","FocusZone","stylesImport","Icon","styles","CELL_COUNT","DefaultCalendarYearStrings","prevRangeAriaLabel","undefined","nextRangeAriaLabel","DefaultNavigationIcons","leftNavigation","rightNavigation","closeIcon","__extends","_this","createRef","year","onRenderYear","props","onSelectYear","ev","which","enter","CalendarYearGridCell","_buttonRef","current","focus","selected","disabled","className","yearOption","_a","yearIsHighlighted","yearOptionIsDisabled","type","role","onClick","_onClick","onKeyDown","_onKeyDown","String","ref","_onRenderYear","Component","selectedYear","minYear","maxYear","Date","getFullYear","key","_selectedCellRef","_currentCellRef","CalendarYearGrid","fromYear","toYear","cells","push","_renderCell","optionGrid","isDisabled","onSelectPrev","_onSelectPrev","CalendarYearNavPrev","iconStrings","navigationIcons","strings","prevRange","prevAriaLabel","prevDecade","prevDecadeIsDisabled","tabIndex","title","iconName","Object","onSelectNext","_onSelectNext","CalendarYearNavNext","nextRange","nextAriaLabel","nextDecade","nextDecadeIsDisabled","CalendarYearNav","decadeComponents","navContainer","__assign","onHeaderSelect","space","CalendarYearTitle","rangeAriaLabel","currentDateRange","ariaLabel","headerAriaLabelFormatString","currentDecade","headerToggleView","_onHeaderSelect","_onHeaderKeyDown","onRenderTitle","CalendarYearHeader","header","_onRenderTitle","_onRenderNav","_super","setState","state","_onNavPrev","_onNavNext","_gridRef","_calculateInitialStateFromProps","CalendarYear","yearPicker","_renderHeader","_renderGrid","navigatedYear","rangeYear","Math","floor"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\office-ui-fabric-react\\lib\\components\\src\\components\\Calendar\\CalendarYear.tsx"],"sourcesContent":["import * as React from 'react';\nimport { KeyCodes, css, getRTL, format } from '../../Utilities';\nimport { ICalendarIconStrings } from './Calendar.types';\nimport { FocusZone } from '../../FocusZone';\nimport * as stylesImport from './Calendar.scss';\nimport { Icon } from '../../Icon';\n\nconst styles: any = stylesImport;\n\nconst CELL_COUNT = 12;\n\nexport interface ICalendarYearRange {\n  fromYear: number;\n  toYear: number;\n}\n\nexport interface ICalendarYearRangeToString {\n  (range: ICalendarYearRange): string;\n}\n\nexport interface ICalendarYearStrings {\n  rangeAriaLabel?: string | ICalendarYearRangeToString;\n  prevRangeAriaLabel?: string | ICalendarYearRangeToString;\n  nextRangeAriaLabel?: string | ICalendarYearRangeToString;\n  headerAriaLabelFormatString?: string;\n}\n\nexport interface ICalendarYear {\n  focus(): void;\n}\n\nexport interface ICalendarYearProps {\n  navigationIcons?: ICalendarIconStrings;\n  navigatedYear?: number;\n  selectedYear?: number;\n  minYear?: number;\n  maxYear?: number;\n  onHeaderSelect?: (focus: boolean) => void;\n  onSelectYear?: (year: number) => void;\n  onRenderTitle?: (props: ICalendarYearHeaderProps) => React.ReactNode;\n  onRenderYear?: (year: number) => React.ReactNode;\n  className?: string;\n  strings?: ICalendarYearStrings;\n}\n\nconst DefaultCalendarYearStrings: ICalendarYearStrings = {\n  prevRangeAriaLabel: undefined,\n  nextRangeAriaLabel: undefined,\n};\n\nconst DefaultNavigationIcons: ICalendarIconStrings = {\n  leftNavigation: 'Up',\n  rightNavigation: 'Down',\n  closeIcon: 'CalculatorMultiply',\n};\n\ninterface ICalendarYearGridCell {\n  focus(): void;\n}\n\ninterface ICalendarYearGridCellProps {\n  year: number;\n  current?: boolean;\n  selected?: boolean;\n  disabled?: boolean;\n  onSelectYear?: (year: number) => void;\n  onRenderYear?: (year: number) => React.ReactNode;\n}\n\nclass CalendarYearGridCell extends React.Component<ICalendarYearGridCellProps, {}> implements ICalendarYearGridCell {\n  private _buttonRef = React.createRef<HTMLButtonElement>();\n\n  public focus() {\n    if (this._buttonRef.current) {\n      this._buttonRef.current.focus();\n    }\n  }\n\n  public render() {\n    const { year, selected, disabled, onSelectYear } = this.props;\n    return (\n      <button\n        className={css('ms-DatePicker-yearOption', styles.yearOption, {\n          ['ms-DatePicker-day--highlighted ' + styles.yearIsHighlighted]: selected,\n          ['ms-DatePicker-yearOption--disabled ' + styles.yearOptionIsDisabled]: disabled,\n        })}\n        type=\"button\"\n        role=\"gridcell\"\n        onClick={!disabled && onSelectYear ? this._onClick : undefined}\n        onKeyDown={!disabled && onSelectYear ? this._onKeyDown : undefined}\n        disabled={disabled}\n        aria-label={String(year)}\n        aria-selected={selected}\n        ref={this._buttonRef}\n      >\n        {this._onRenderYear()}\n      </button>\n    );\n  }\n\n  private _onRenderYear = () => {\n    const { year, onRenderYear } = this.props;\n    if (onRenderYear) {\n      return onRenderYear(year);\n    }\n    return year;\n  };\n\n  private _onClick = () => {\n    if (this.props.onSelectYear) {\n      this.props.onSelectYear(this.props.year);\n    }\n  };\n\n  private _onKeyDown = (ev: React.KeyboardEvent<HTMLElement>) => {\n    if (this.props.onSelectYear && ev.which === KeyCodes.enter) {\n      this.props.onSelectYear(this.props.year);\n    }\n  };\n}\n\ninterface ICalendarYearGrid {\n  focus(): void;\n}\n\ninterface ICalendarYearGridProps extends ICalendarYearProps, ICalendarYearRange {\n  selectedYear?: number;\n}\n\nclass CalendarYearGrid extends React.Component<ICalendarYearGridProps, {}> implements ICalendarYearGrid {\n  private _selectedCellRef = React.createRef<CalendarYearGridCell>();\n  private _currentCellRef = React.createRef<CalendarYearGridCell>();\n\n  public focus() {\n    if (this._selectedCellRef.current) {\n      this._selectedCellRef.current.focus();\n    } else if (this._currentCellRef.current) {\n      this._currentCellRef.current.focus();\n    }\n  }\n\n  public render() {\n    const { fromYear, toYear } = this.props;\n    let year = fromYear;\n    const cells = [];\n    while (year <= toYear) {\n      cells.push(this._renderCell(year));\n      year++;\n    }\n    return (\n      <FocusZone>\n        <div className={css('ms-DatePicker-optionGrid', styles.optionGrid)} role=\"grid\">\n          <div role=\"row\">{cells}</div>\n        </div>\n      </FocusZone>\n    );\n  }\n\n  private _renderCell = (year: number): React.ReactNode => {\n    const selected = year === this.props.selectedYear;\n    const { minYear, maxYear, onSelectYear } = this.props;\n    const disabled = (minYear !== undefined && year < minYear) || (maxYear !== undefined && year > maxYear);\n    const current = year === new Date().getFullYear();\n    return (\n      <CalendarYearGridCell\n        key={year}\n        year={year}\n        selected={selected}\n        current={current}\n        disabled={disabled}\n        onSelectYear={onSelectYear}\n        ref={selected ? this._selectedCellRef : current ? this._currentCellRef : undefined}\n      />\n    );\n  };\n}\n\nexport interface ICalendarYearHeaderProps extends ICalendarYearProps, ICalendarYearRange {\n  onSelectPrev?: () => void;\n  onSelectNext?: () => void;\n}\n\nclass CalendarYearNavPrev extends React.Component<ICalendarYearHeaderProps, any> {\n  public render() {\n    const iconStrings = this.props.navigationIcons || DefaultNavigationIcons;\n    const strings = this.props.strings || DefaultCalendarYearStrings;\n    const prevRangeAriaLabel = strings.prevRangeAriaLabel;\n    const prevRange = { fromYear: this.props.fromYear - CELL_COUNT, toYear: this.props.toYear - CELL_COUNT };\n    const prevAriaLabel = prevRangeAriaLabel\n      ? typeof prevRangeAriaLabel === 'string'\n        ? (prevRangeAriaLabel as string)\n        : (prevRangeAriaLabel as ICalendarYearRangeToString)(prevRange)\n      : undefined;\n    const disabled = this.isDisabled;\n    const { onSelectPrev } = this.props;\n    return (\n      <button\n        className={css('ms-DatePicker-prevDecade', styles.prevDecade, {\n          ['ms-DatePicker-prevDecade--disabled ' + styles.prevDecadeIsDisabled]: disabled,\n        })}\n        onClick={!disabled && onSelectPrev ? this._onSelectPrev : undefined}\n        onKeyDown={!disabled && onSelectPrev ? this._onKeyDown : undefined}\n        type=\"button\"\n        tabIndex={0}\n        title={prevAriaLabel}\n        disabled={disabled}\n      >\n        <Icon iconName={getRTL() ? iconStrings.rightNavigation : iconStrings.leftNavigation} />\n      </button>\n    );\n  }\n\n  public get isDisabled() {\n    const { minYear } = this.props;\n    return minYear !== undefined && this.props.fromYear < minYear;\n  }\n\n  private _onSelectPrev = () => {\n    if (!this.isDisabled && this.props.onSelectPrev) {\n      this.props.onSelectPrev();\n    }\n  };\n\n  private _onKeyDown = (ev: React.KeyboardEvent<HTMLElement>) => {\n    if (ev.which === KeyCodes.enter) {\n      this._onSelectPrev();\n    }\n  };\n}\n\nclass CalendarYearNavNext extends React.Component<ICalendarYearHeaderProps, any> {\n  public render() {\n    const iconStrings = this.props.navigationIcons || DefaultNavigationIcons;\n    const strings = this.props.strings || DefaultCalendarYearStrings;\n    const nextRangeAriaLabel = strings.nextRangeAriaLabel;\n    const nextRange = { fromYear: this.props.fromYear + CELL_COUNT, toYear: this.props.toYear + CELL_COUNT };\n    const nextAriaLabel = nextRangeAriaLabel\n      ? typeof nextRangeAriaLabel === 'string'\n        ? (nextRangeAriaLabel as string)\n        : (nextRangeAriaLabel as ICalendarYearRangeToString)(nextRange)\n      : undefined;\n    const { onSelectNext } = this.props;\n    const disabled = this.isDisabled;\n    return (\n      <button\n        className={css('ms-DatePicker-nextDecade', styles.nextDecade, {\n          ['ms-DatePicker-nextDecade--disabled ' + styles.nextDecadeIsDisabled]: disabled,\n        })}\n        onClick={!disabled && onSelectNext ? this._onSelectNext : undefined}\n        onKeyDown={!disabled && onSelectNext ? this._onKeyDown : undefined}\n        type=\"button\"\n        tabIndex={0}\n        title={nextAriaLabel}\n        disabled={this.isDisabled}\n      >\n        <Icon iconName={getRTL() ? iconStrings.leftNavigation : iconStrings.rightNavigation} />\n      </button>\n    );\n  }\n\n  public get isDisabled() {\n    const { maxYear } = this.props;\n    return maxYear !== undefined && this.props.fromYear + CELL_COUNT > maxYear;\n  }\n\n  private _onSelectNext = () => {\n    if (!this.isDisabled && this.props.onSelectNext) {\n      this.props.onSelectNext();\n    }\n  };\n\n  private _onKeyDown = (ev: React.KeyboardEvent<HTMLElement>) => {\n    if (ev.which === KeyCodes.enter) {\n      this._onSelectNext();\n    }\n  };\n}\n\nclass CalendarYearNav extends React.Component<ICalendarYearHeaderProps, any> {\n  public render() {\n    return (\n      <div className={css('ms-DatePicker-decadeComponents', styles.decadeComponents)}>\n        <div className={css('ms-DatePicker-navContainer', styles.navContainer)}>\n          <CalendarYearNavPrev {...this.props} />\n          <CalendarYearNavNext {...this.props} />\n        </div>\n      </div>\n    );\n  }\n}\n\nclass CalendarYearTitle extends React.Component<ICalendarYearHeaderProps, any> {\n  public render() {\n    const { fromYear, toYear, onHeaderSelect } = this.props;\n    if (onHeaderSelect) {\n      const strings = this.props.strings || DefaultCalendarYearStrings;\n      const rangeAriaLabel = strings.rangeAriaLabel;\n      const currentDateRange = rangeAriaLabel\n        ? typeof rangeAriaLabel === 'string'\n          ? (rangeAriaLabel as string)\n          : (rangeAriaLabel as ICalendarYearRangeToString)(this.props)\n        : undefined;\n\n      const ariaLabel = strings.headerAriaLabelFormatString\n        ? format(strings.headerAriaLabelFormatString, currentDateRange)\n        : currentDateRange;\n\n      return (\n        <div\n          className={css(\n            'ms-DatePicker-currentDecade js-showYearPicker',\n            styles.currentDecade,\n            styles.headerToggleView,\n          )}\n          onClick={this._onHeaderSelect}\n          onKeyDown={this._onHeaderKeyDown}\n          aria-label={ariaLabel}\n          role=\"button\"\n          aria-atomic={true}\n          aria-live=\"polite\"\n          tabIndex={0}\n        >\n          {this._onRenderYear(fromYear)} - {this._onRenderYear(toYear)}\n        </div>\n      );\n    }\n    return (\n      <div className={css('ms-DatePicker-currentDecade js-showYearPicker', styles.currentDecade)}>\n        {this._onRenderYear(fromYear)} - {this._onRenderYear(toYear)}\n      </div>\n    );\n  }\n\n  private _onHeaderSelect = () => {\n    if (this.props.onHeaderSelect) {\n      this.props.onHeaderSelect(true);\n    }\n  };\n\n  private _onHeaderKeyDown = (ev: React.KeyboardEvent<HTMLElement>) => {\n    if (this.props.onHeaderSelect && (ev.which === KeyCodes.enter || ev.which === KeyCodes.space)) {\n      this.props.onHeaderSelect(true);\n    }\n  };\n\n  private _onRenderYear = (year: number) => {\n    if (this.props.onRenderYear) {\n      return this.props.onRenderYear(year);\n    }\n    return year;\n  };\n}\n\nclass CalendarYearHeader extends React.Component<ICalendarYearHeaderProps, any> {\n  public render() {\n    return (\n      <div className={css('ms-DatePicker-header', styles.header)}>\n        {this._onRenderTitle()}\n        {this._onRenderNav()}\n      </div>\n    );\n  }\n\n  private _onRenderTitle = () => {\n    if (this.props.onRenderTitle) {\n      return this.props.onRenderTitle(this.props);\n    }\n    return <CalendarYearTitle {...this.props} />;\n  };\n\n  private _onRenderNav = () => {\n    return <CalendarYearNav {...this.props} />;\n  };\n}\n\nexport interface ICalendarYearState {\n  fromYear: number;\n  navigatedYear?: number;\n  selectedYear?: number;\n}\n\nexport class CalendarYear extends React.Component<ICalendarYearProps, ICalendarYearState> implements ICalendarYear {\n  private _gridRef = React.createRef<CalendarYearGrid>();\n\n  public constructor(props: ICalendarYearProps) {\n    super(props);\n    this.state = this._calculateInitialStateFromProps(props);\n  }\n\n  public focus() {\n    if (this._gridRef.current) {\n      this._gridRef.current.focus();\n    }\n  }\n\n  public render() {\n    return (\n      <div className={css('ms-DatePicker-yearPicker', styles.yearPicker)}>\n        {this._renderHeader()}\n        {this._renderGrid()}\n      </div>\n    );\n  }\n\n  private _onNavNext = () => {\n    this.setState({ fromYear: this.state.fromYear + CELL_COUNT });\n  };\n\n  private _onNavPrev = () => {\n    this.setState({ fromYear: this.state.fromYear - CELL_COUNT });\n  };\n\n  private _renderHeader = (): React.ReactNode => {\n    return (\n      <CalendarYearHeader\n        {...this.props}\n        fromYear={this.state.fromYear}\n        toYear={this.state.fromYear + CELL_COUNT - 1}\n        onSelectPrev={this._onNavPrev}\n        onSelectNext={this._onNavNext}\n      />\n    );\n  };\n\n  private _renderGrid = (): React.ReactNode => {\n    return (\n      <CalendarYearGrid\n        {...this.props}\n        fromYear={this.state.fromYear}\n        toYear={this.state.fromYear + CELL_COUNT - 1}\n        ref={this._gridRef}\n      />\n    );\n  };\n\n  private _calculateInitialStateFromProps(props: ICalendarYearProps): ICalendarYearState {\n    const { selectedYear, navigatedYear } = props;\n    const rangeYear = selectedYear || navigatedYear || new Date().getFullYear();\n    const fromYear = Math.floor(rangeYear / 10) * 10;\n    return {\n      fromYear: fromYear,\n      navigatedYear: navigatedYear,\n      selectedYear: selectedYear,\n    };\n  }\n}\n"]},"metadata":{},"sourceType":"module"}