{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { divProperties, getNativeProps } from '../../Utilities';\nimport { classNamesFunction } from '../../Utilities';\nvar getClassNames = classNamesFunction({\n  // Label is used a lot by other components.\n  // It's likely to see expected cases which pass different className to the Label.\n  // Therefore setting a larger cache size.\n  cacheSize: 100\n});\n\nvar LabelBase =\n/** @class */\nfunction (_super) {\n  __extends(LabelBase, _super);\n\n  function LabelBase() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  LabelBase.prototype.render = function () {\n    var _a = this.props,\n        _b = _a.as,\n        RootType = _b === void 0 ? 'label' : _b,\n        children = _a.children,\n        className = _a.className,\n        disabled = _a.disabled,\n        styles = _a.styles,\n        required = _a.required,\n        theme = _a.theme;\n    var classNames = getClassNames(styles, {\n      className: className,\n      disabled: disabled,\n      required: required,\n      theme: theme\n    });\n    return React.createElement(RootType, __assign({}, getNativeProps(this.props, divProperties), {\n      className: classNames.root\n    }), children);\n  };\n\n  return LabelBase;\n}(React.Component);\n\nexport { LabelBase };","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,aAAT,EAAwBC,cAAxB,QAA8C,iBAA9C;AACA,SAASC,kBAAT,QAAmC,iBAAnC;AAGA,IAAMC,aAAa,GAAGD,kBAAkB,CAAiC;EACvE;EACA;EACA;EACAE,SAAS,EAAE;AAJ4D,CAAjC,CAAxC;;AAOA;AAAA;AAAA;EAA+BC;;EAA/B;;EAeC;;EAdQC,6BAAP;IACQ;IAAA,IAAEC,UAAF;IAAA,IAAEC,uCAAF;IAAA,IAA0BC,sBAA1B;IAAA,IAAoCC,wBAApC;IAAA,IAA+CC,sBAA/C;IAAA,IAAyDC,kBAAzD;IAAA,IAAiEC,sBAAjE;IAAA,IAA2EC,gBAA3E;IACN,IAAMC,UAAU,GAAGZ,aAAa,CAACS,MAAD,EAAS;MACvCF,SAAS,WAD8B;MAEvCC,QAAQ,UAF+B;MAGvCE,QAAQ,UAH+B;MAIvCC,KAAK,EAAEA;IAJgC,CAAT,CAAhC;IAMA,OACEf,oBAACS,QAAD,EAASQ,aAAKf,cAAc,CAAC,KAAKgB,KAAN,EAAajB,aAAb,CAAnB,EAA8C;MAAEU,SAAS,EAAEK,UAAU,CAACG;IAAxB,CAA9C,CAAT,EACGT,QADH,CADF;EAKD,CAbM;;EAcT;AAAC,CAfD,CAA+BV,KAAK,CAACoB,SAArC","names":["React","divProperties","getNativeProps","classNamesFunction","getClassNames","cacheSize","__extends","LabelBase","_b","RootType","children","className","disabled","styles","required","theme","classNames","__assign","props","root","Component"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\office-ui-fabric-react\\lib\\components\\src\\components\\Label\\Label.base.tsx"],"sourcesContent":["import * as React from 'react';\nimport { divProperties, getNativeProps } from '../../Utilities';\nimport { classNamesFunction } from '../../Utilities';\nimport { ILabelProps, ILabelStyleProps, ILabelStyles } from './Label.types';\n\nconst getClassNames = classNamesFunction<ILabelStyleProps, ILabelStyles>({\n  // Label is used a lot by other components.\n  // It's likely to see expected cases which pass different className to the Label.\n  // Therefore setting a larger cache size.\n  cacheSize: 100,\n});\n\nexport class LabelBase extends React.Component<ILabelProps, {}> {\n  public render(): JSX.Element {\n    const { as: RootType = 'label', children, className, disabled, styles, required, theme } = this.props;\n    const classNames = getClassNames(styles, {\n      className,\n      disabled,\n      required,\n      theme: theme!,\n    });\n    return (\n      <RootType {...getNativeProps(this.props, divProperties)} className={classNames.root}>\n        {children}\n      </RootType>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}