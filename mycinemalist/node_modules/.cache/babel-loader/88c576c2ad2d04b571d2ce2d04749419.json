{"ast":null,"code":"import { MAX_COLOR_RGB } from './consts';\n/** Converts RGB components to an HSV color. */\n\nexport function rgb2hsv(r, g, b) {\n  var h = NaN;\n  var max = Math.max(r, g, b);\n  var min = Math.min(r, g, b);\n  var delta = max - min; // hue\n\n  if (delta === 0) {\n    h = 0;\n  } else if (r === max) {\n    h = (g - b) / delta % 6;\n  } else if (g === max) {\n    h = (b - r) / delta + 2;\n  } else if (b === max) {\n    h = (r - g) / delta + 4;\n  }\n\n  h = Math.round(h * 60);\n\n  if (h < 0) {\n    h += 360;\n  } // saturation\n\n\n  var s = Math.round((max === 0 ? 0 : delta / max) * 100); // value\n\n  var v = Math.round(max / MAX_COLOR_RGB * 100);\n  return {\n    h: h,\n    s: s,\n    v: v\n  };\n}","map":{"version":3,"mappings":"AACA,SAASA,aAAT,QAA8B,UAA9B;AAEA;;AACA,OAAM,SAAUC,OAAV,CAAkBC,CAAlB,EAA6BC,CAA7B,EAAwCC,CAAxC,EAAiD;EACrD,IAAIC,CAAC,GAAGC,GAAR;EACA,IAAMC,GAAG,GAAGC,IAAI,CAACD,GAAL,CAASL,CAAT,EAAYC,CAAZ,EAAeC,CAAf,CAAZ;EACA,IAAMK,GAAG,GAAGD,IAAI,CAACC,GAAL,CAASP,CAAT,EAAYC,CAAZ,EAAeC,CAAf,CAAZ;EACA,IAAMM,KAAK,GAAGH,GAAG,GAAGE,GAApB,CAJqD,CAMrD;;EACA,IAAIC,KAAK,KAAK,CAAd,EAAiB;IACfL,CAAC,GAAG,CAAJ;EACD,CAFD,MAEO,IAAIH,CAAC,KAAKK,GAAV,EAAe;IACpBF,CAAC,GAAI,CAACF,CAAC,GAAGC,CAAL,IAAUM,KAAX,GAAoB,CAAxB;EACD,CAFM,MAEA,IAAIP,CAAC,KAAKI,GAAV,EAAe;IACpBF,CAAC,GAAG,CAACD,CAAC,GAAGF,CAAL,IAAUQ,KAAV,GAAkB,CAAtB;EACD,CAFM,MAEA,IAAIN,CAAC,KAAKG,GAAV,EAAe;IACpBF,CAAC,GAAG,CAACH,CAAC,GAAGC,CAAL,IAAUO,KAAV,GAAkB,CAAtB;EACD;;EAEDL,CAAC,GAAGG,IAAI,CAACG,KAAL,CAAWN,CAAC,GAAG,EAAf,CAAJ;;EAEA,IAAIA,CAAC,GAAG,CAAR,EAAW;IACTA,CAAC,IAAI,GAAL;EACD,CArBoD,CAuBrD;;;EACA,IAAMO,CAAC,GAAGJ,IAAI,CAACG,KAAL,CAAW,CAACJ,GAAG,KAAK,CAAR,GAAY,CAAZ,GAAgBG,KAAK,GAAGH,GAAzB,IAAgC,GAA3C,CAAV,CAxBqD,CA0BrD;;EACA,IAAMM,CAAC,GAAGL,IAAI,CAACG,KAAL,CAAYJ,GAAG,GAAGP,aAAP,GAAwB,GAAnC,CAAV;EAEA,OAAO;IAAEK,CAAC,GAAH;IAAKO,CAAC,GAAN;IAAQC,CAAC;EAAT,CAAP;AACD","names":["MAX_COLOR_RGB","rgb2hsv","r","g","b","h","NaN","max","Math","min","delta","round","s","v"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\office-ui-fabric-react\\lib\\utilities\\src\\utilities\\color\\rgb2hsv.ts"],"sourcesContent":["import { IHSV } from './interfaces';\nimport { MAX_COLOR_RGB } from './consts';\n\n/** Converts RGB components to an HSV color. */\nexport function rgb2hsv(r: number, g: number, b: number): IHSV {\n  let h = NaN;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const delta = max - min;\n\n  // hue\n  if (delta === 0) {\n    h = 0;\n  } else if (r === max) {\n    h = ((g - b) / delta) % 6;\n  } else if (g === max) {\n    h = (b - r) / delta + 2;\n  } else if (b === max) {\n    h = (r - g) / delta + 4;\n  }\n\n  h = Math.round(h * 60);\n\n  if (h < 0) {\n    h += 360;\n  }\n\n  // saturation\n  const s = Math.round((max === 0 ? 0 : delta / max) * 100);\n\n  // value\n  const v = Math.round((max / MAX_COLOR_RGB) * 100);\n\n  return { h, s, v };\n}\n"]},"metadata":{},"sourceType":"module"}