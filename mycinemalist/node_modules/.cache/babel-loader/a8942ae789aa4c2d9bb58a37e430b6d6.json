{"ast":null,"code":"import { __extends, __spreadArrays } from \"tslib\";\nimport * as React from 'react';\nimport { KeyCodes, css, getId, getRTL, getRTLSafeKeyCode, format, findIndex, find, initializeComponentRef } from '../../Utilities';\nimport { DateRangeType } from '../../utilities/dateValues/DateValues';\nimport { FocusZone } from '../../FocusZone';\nimport { Icon } from '../../Icon';\nimport { addDays, addWeeks, addMonths, compareDates, compareDatePart, getDateRangeArray, isInDateRangeArray, getWeekNumber, getWeekNumbersInMonth, getMonthStart, getMonthEnd } from '../../utilities/dateMath/DateMath';\nimport * as stylesImport from './Calendar.scss';\nvar styles = stylesImport;\nvar DAYS_IN_WEEK = 7;\n\nvar CalendarDay =\n/** @class */\nfunction (_super) {\n  __extends(CalendarDay, _super);\n\n  function CalendarDay(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.days = {};\n\n    _this._onKeyDown = function (callback, ev) {\n      if (ev.which === KeyCodes.enter || ev.which === KeyCodes.space) {\n        callback();\n      }\n    };\n\n    _this._onDayKeyDown = function (originalDate, weekIndex, dayIndex) {\n      return function (ev) {\n        if (ev.which === KeyCodes.enter) {\n          _this._onSelectDate(originalDate, ev);\n\n          ev.preventDefault();\n        } else {\n          _this._navigateMonthEdge(ev, originalDate, weekIndex, dayIndex);\n        }\n      };\n    };\n\n    _this._onDayMouseDown = function (originalDate, weekIndex, dayIndex, dateRangeType) {\n      return function (ev) {\n        // set the press styling\n        if (dateRangeType === DateRangeType.Month) {\n          _this._applyFunctionToDayRefs(function (ref, day) {\n            if (ref && day.originalDate.getMonth() === originalDate.getMonth() && day.isInBounds) {\n              ref.classList.add(styles.dayPress);\n            }\n          });\n        } else {\n          // week or work week view\n          _this._applyFunctionToDayRefs(function (ref, day, dayWeekIndex) {\n            if (ref && dayWeekIndex === weekIndex && day.isInBounds) {\n              ref.classList.add(styles.dayPress);\n              ref.classList.add(styles.dayIsHighlighted);\n            } else if (ref) {\n              ref.classList.remove(styles.dayIsHighlighted);\n            }\n          });\n        }\n      };\n    };\n\n    _this._onDayMouseUp = function (originalDate, weekIndex, dayIndex, dateRangeType) {\n      return function (ev) {\n        // remove press styling\n        if (dateRangeType === DateRangeType.Month) {\n          _this._applyFunctionToDayRefs(function (ref, day) {\n            if (ref && day.originalDate.getMonth() === originalDate.getMonth() && day.isInBounds) {\n              ref.classList.remove(styles.dayPress);\n            }\n          });\n        } else {\n          // week or work week view\n          _this._applyFunctionToDayRefs(function (ref, day, dayWeekIndex) {\n            if (ref && dayWeekIndex === weekIndex && day.isInBounds) {\n              ref.classList.remove(styles.dayPress);\n            }\n          });\n        }\n      };\n    };\n\n    _this._onDayMouseOver = function (originalDate, weekIndex, dayIndex, dateRangeType) {\n      return function (ev) {\n        // set the hover styling on every day in the same month\n        if (dateRangeType === DateRangeType.Month) {\n          _this._applyFunctionToDayRefs(function (ref, day) {\n            if (ref && day.originalDate.getMonth() === originalDate.getMonth() && day.isInBounds) {\n              ref.classList.add(styles.dayHover);\n            }\n          });\n        } else {\n          // week or work week view\n          _this._applyFunctionToDayRefs(function (ref, day, dayWeekIndex) {\n            if (ref && dayWeekIndex === weekIndex && day.isInBounds) {\n              ref.classList.add(styles.dayHover);\n            }\n          });\n        }\n      };\n    };\n\n    _this._onDayMouseLeave = function (originalDate, weekIndex, dayIndex, dateRangeType) {\n      return function (ev) {\n        // remove the hover and pressed styling\n        if (dateRangeType === DateRangeType.Month) {\n          _this._applyFunctionToDayRefs(function (ref, day) {\n            if (ref && day.originalDate.getMonth() === originalDate.getMonth() && day.isInBounds) {\n              ref.classList.remove(styles.dayHover);\n            }\n          });\n        } else {\n          // week or work week view\n          _this._applyFunctionToDayRefs(function (ref, day, dayWeekIndex) {\n            if (ref && dayWeekIndex === weekIndex && day.isInBounds) {\n              ref.classList.remove(styles.dayHover);\n            }\n          });\n        }\n      };\n    };\n\n    _this._onTableMouseLeave = function (ev) {\n      if (ev.target.contains && ev.relatedTarget && ev.relatedTarget.contains && ev.target.contains(ev.relatedTarget)) {\n        return;\n      }\n\n      _this._applyFunctionToDayRefs(function (ref, day) {\n        if (ref) {\n          ref.classList.remove(styles.dayHover);\n          ref.classList.remove(styles.dayPress);\n        }\n      });\n    };\n\n    _this._onTableMouseUp = function (ev) {\n      if (ev.target.contains && ev.relatedTarget && ev.relatedTarget.contains && ev.target.contains(ev.relatedTarget)) {\n        return;\n      }\n\n      _this._applyFunctionToDayRefs(function (ref, day) {\n        if (ref) {\n          ref.classList.remove(styles.dayPress);\n        }\n      });\n    };\n\n    _this._onSelectDate = function (selectedDate, ev) {\n      var _a = _this.props,\n          onSelectDate = _a.onSelectDate,\n          dateRangeType = _a.dateRangeType,\n          firstDayOfWeek = _a.firstDayOfWeek,\n          navigatedDate = _a.navigatedDate,\n          autoNavigateOnSelection = _a.autoNavigateOnSelection,\n          minDate = _a.minDate,\n          maxDate = _a.maxDate,\n          workWeekDays = _a.workWeekDays;\n\n      if (ev) {\n        ev.stopPropagation();\n      }\n\n      var dateRange = getDateRangeArray(selectedDate, dateRangeType, firstDayOfWeek, workWeekDays);\n\n      if (dateRangeType !== DateRangeType.Day) {\n        dateRange = _this._getBoundedDateRange(dateRange, minDate, maxDate);\n      }\n\n      dateRange = dateRange.filter(function (d) {\n        return !_this._getIsRestrictedDate(d);\n      });\n\n      if (onSelectDate) {\n        onSelectDate(selectedDate, dateRange);\n      } // Navigate to next or previous month if needed\n\n\n      if (autoNavigateOnSelection && selectedDate.getMonth() !== navigatedDate.getMonth()) {\n        var compareResult = compareDatePart(selectedDate, navigatedDate);\n\n        if (compareResult < 0) {\n          _this._onSelectPrevMonth();\n        } else if (compareResult > 0) {\n          _this._onSelectNextMonth();\n        }\n      }\n    };\n\n    _this._onSelectNextMonth = function () {\n      _this.props.onNavigateDate(addMonths(_this.props.navigatedDate, 1), false);\n    };\n\n    _this._onSelectPrevMonth = function () {\n      _this.props.onNavigateDate(addMonths(_this.props.navigatedDate, -1), false);\n    };\n\n    _this._onClose = function () {\n      if (_this.props.onDismiss) {\n        _this.props.onDismiss();\n      }\n    };\n\n    _this._onHeaderSelect = function () {\n      var onHeaderSelect = _this.props.onHeaderSelect;\n\n      if (onHeaderSelect) {\n        onHeaderSelect(true);\n      }\n    };\n\n    _this._onHeaderKeyDown = function (ev) {\n      var onHeaderSelect = _this.props.onHeaderSelect;\n\n      if (onHeaderSelect && (ev.which === KeyCodes.enter || ev.which === KeyCodes.space)) {\n        onHeaderSelect(true);\n      }\n    };\n\n    _this._onPrevMonthKeyDown = function (ev) {\n      if (ev.which === KeyCodes.enter) {\n        _this._onKeyDown(_this._onSelectPrevMonth, ev);\n      }\n    };\n\n    _this._onNextMonthKeyDown = function (ev) {\n      if (ev.which === KeyCodes.enter) {\n        _this._onKeyDown(_this._onSelectNextMonth, ev);\n      }\n    };\n\n    _this._onCloseButtonKeyDown = function (ev) {\n      if (ev.which === KeyCodes.enter) {\n        _this._onKeyDown(_this._onClose, ev);\n      }\n    };\n\n    initializeComponentRef(_this);\n    _this.state = {\n      activeDescendantId: getId('DatePickerDay-active'),\n      weeks: _this._getWeeks(props)\n    };\n    _this._onSelectNextMonth = _this._onSelectNextMonth.bind(_this);\n    _this._onSelectPrevMonth = _this._onSelectPrevMonth.bind(_this);\n    _this._onClose = _this._onClose.bind(_this);\n    return _this;\n  }\n\n  CalendarDay.prototype.UNSAFE_componentWillReceiveProps = function (nextProps) {\n    this.setState({\n      weeks: this._getWeeks(nextProps)\n    });\n  };\n\n  CalendarDay.prototype.render = function () {\n    var _a, _b;\n\n    var _this = this;\n\n    var _c = this.state,\n        activeDescendantId = _c.activeDescendantId,\n        weeks = _c.weeks;\n    var _d = this.props,\n        firstDayOfWeek = _d.firstDayOfWeek,\n        strings = _d.strings,\n        navigatedDate = _d.navigatedDate,\n        selectedDate = _d.selectedDate,\n        dateRangeType = _d.dateRangeType,\n        navigationIcons = _d.navigationIcons,\n        showWeekNumbers = _d.showWeekNumbers,\n        firstWeekOfYear = _d.firstWeekOfYear,\n        dateTimeFormatter = _d.dateTimeFormatter,\n        minDate = _d.minDate,\n        maxDate = _d.maxDate,\n        showCloseButton = _d.showCloseButton,\n        allFocusable = _d.allFocusable;\n    var dayPickerId = getId('DatePickerDay-dayPicker');\n    var monthAndYearId = getId('DatePickerDay-monthAndYear');\n    var leftNavigationIcon = navigationIcons.leftNavigation;\n    var rightNavigationIcon = navigationIcons.rightNavigation;\n    var closeNavigationIcon = navigationIcons.closeIcon;\n    var weekNumbers = showWeekNumbers ? getWeekNumbersInMonth(weeks.length, firstDayOfWeek, firstWeekOfYear, navigatedDate) : null;\n    var selectedDateWeekNumber = showWeekNumbers ? getWeekNumber(selectedDate, firstDayOfWeek, firstWeekOfYear) : undefined; // When the month is highlighted get the corner dates so that styles can be added to them\n\n    var weekCorners = this._getWeekCornerStyles(weeks, dateRangeType); // determine if previous/next months are in bounds\n\n\n    var prevMonthInBounds = minDate ? compareDatePart(minDate, getMonthStart(navigatedDate)) < 0 : true;\n    var nextMonthInBounds = maxDate ? compareDatePart(getMonthEnd(navigatedDate), maxDate) < 0 : true;\n    return React.createElement(\"div\", {\n      className: css('ms-DatePicker-dayPicker', styles.dayPicker, showWeekNumbers && 'ms-DatePicker-showWeekNumbers' && (getRTL() ? styles.showWeekNumbersRTL : styles.showWeekNumbers)),\n      id: dayPickerId\n    }, React.createElement(\"div\", {\n      className: css('ms-DatePicker-header', styles.header)\n    }, React.createElement(\"div\", {\n      \"aria-live\": \"polite\",\n      \"aria-relevant\": \"text\",\n      \"aria-atomic\": \"true\",\n      id: monthAndYearId,\n      className: styles.monthAndYear\n    }, this.props.onHeaderSelect ? React.createElement(\"div\", {\n      className: css('ms-DatePicker-monthAndYear js-showMonthPicker', styles.headerToggleView),\n      onClick: this._onHeaderSelect,\n      onKeyDown: this._onHeaderKeyDown,\n      \"aria-label\": dateTimeFormatter.formatMonthYear(navigatedDate, strings),\n      role: \"button\",\n      tabIndex: 0\n    }, dateTimeFormatter.formatMonthYear(navigatedDate, strings)) : React.createElement(\"div\", {\n      className: css('ms-DatePicker-monthAndYear', styles.monthAndYear)\n    }, dateTimeFormatter.formatMonthYear(navigatedDate, strings))), React.createElement(\"div\", {\n      className: css('ms-DatePicker-monthComponents', styles.monthComponents)\n    }, React.createElement(\"div\", {\n      className: css('ms-DatePicker-navContainer', styles.navContainer)\n    }, React.createElement(\"button\", {\n      className: css('ms-DatePicker-prevMonth js-prevMonth', styles.prevMonth, (_a = {}, _a['ms-DatePicker-prevMonth--disabled ' + styles.prevMonthIsDisabled] = !prevMonthInBounds, _a)),\n      disabled: !allFocusable && !prevMonthInBounds,\n      \"aria-disabled\": !prevMonthInBounds,\n      onClick: prevMonthInBounds ? this._onSelectPrevMonth : undefined,\n      onKeyDown: prevMonthInBounds ? this._onPrevMonthKeyDown : undefined,\n      \"aria-controls\": dayPickerId,\n      title: strings.prevMonthAriaLabel ? strings.prevMonthAriaLabel + ' ' + strings.months[addMonths(navigatedDate, -1).getMonth()] : undefined,\n      role: \"button\",\n      type: \"button\"\n    }, React.createElement(Icon, {\n      iconName: leftNavigationIcon\n    })), React.createElement(\"button\", {\n      className: css('ms-DatePicker-nextMonth js-nextMonth', styles.nextMonth, (_b = {}, _b['ms-DatePicker-nextMonth--disabled ' + styles.nextMonthIsDisabled] = !nextMonthInBounds, _b)),\n      disabled: !allFocusable && !nextMonthInBounds,\n      \"aria-disabled\": !nextMonthInBounds,\n      onClick: nextMonthInBounds ? this._onSelectNextMonth : undefined,\n      onKeyDown: nextMonthInBounds ? this._onNextMonthKeyDown : undefined,\n      \"aria-controls\": dayPickerId,\n      title: strings.nextMonthAriaLabel ? strings.nextMonthAriaLabel + ' ' + strings.months[addMonths(navigatedDate, 1).getMonth()] : undefined,\n      role: \"button\",\n      type: \"button\"\n    }, React.createElement(Icon, {\n      iconName: rightNavigationIcon\n    })), showCloseButton && React.createElement(\"button\", {\n      className: css('ms-DatePicker-closeButton js-closeButton', styles.closeButton),\n      onClick: this._onClose,\n      onKeyDown: this._onCloseButtonKeyDown,\n      title: strings.closeButtonAriaLabel,\n      role: \"button\",\n      type: \"button\"\n    }, React.createElement(Icon, {\n      iconName: closeNavigationIcon\n    }))))), React.createElement(FocusZone, null, React.createElement(\"table\", {\n      className: css('ms-DatePicker-table', styles.table),\n      \"aria-readonly\": \"true\",\n      \"aria-multiselectable\": \"false\",\n      \"aria-labelledby\": monthAndYearId,\n      \"aria-activedescendant\": activeDescendantId,\n      role: \"grid\"\n    }, React.createElement(\"thead\", null, React.createElement(\"tr\", null, showWeekNumbers && React.createElement(\"th\", {\n      className: css('ms-DatePicker-weekday', styles.weekday)\n    }), strings.shortDays.map(function (val, index) {\n      return React.createElement(\"th\", {\n        className: css('ms-DatePicker-weekday', styles.weekday),\n        role: \"columnheader\",\n        scope: \"col\",\n        key: index,\n        title: strings.days[(index + firstDayOfWeek) % DAYS_IN_WEEK],\n        \"aria-label\": strings.days[(index + firstDayOfWeek) % DAYS_IN_WEEK],\n        \"data-is-focusable\": allFocusable ? true : undefined\n      }, strings.shortDays[(index + firstDayOfWeek) % DAYS_IN_WEEK]);\n    }))), React.createElement(\"tbody\", {\n      onMouseLeave: dateRangeType !== DateRangeType.Day ? this._onTableMouseLeave : undefined,\n      onMouseUp: dateRangeType !== DateRangeType.Day ? this._onTableMouseUp : undefined\n    }, weeks.map(function (week, weekIndex) {\n      var _a;\n\n      return React.createElement(\"tr\", {\n        key: weekNumbers ? weekNumbers[weekIndex] : weekIndex\n      }, showWeekNumbers && weekNumbers && React.createElement(\"th\", {\n        className: css('ms-DatePicker-weekNumbers', 'ms-DatePicker-weekday', styles.weekday, styles.weekNumbers),\n        key: weekIndex,\n        title: weekNumbers && strings.weekNumberFormatString && format(strings.weekNumberFormatString, weekNumbers[weekIndex]),\n        \"aria-label\": weekNumbers && strings.weekNumberFormatString && format(strings.weekNumberFormatString, weekNumbers[weekIndex]),\n        scope: \"row\"\n      }, React.createElement(\"div\", {\n        className: css('ms-DatePicker-day', styles.day, (_a = {}, _a['ms-DatePicker-week--highlighted ' + styles.weekIsHighlighted] = selectedDateWeekNumber === weekNumbers[weekIndex], _a))\n      }, React.createElement(\"span\", null, weekNumbers[weekIndex]))), week.map(function (day, dayIndex) {\n        var _a, _b;\n\n        var isNavigatedDate = compareDates(navigatedDate, day.originalDate);\n        return React.createElement(\"td\", {\n          key: day.key,\n          onClick: day.isInBounds ? day.onSelected : undefined,\n          className: css(styles.dayWrapper, 'ms-DatePicker-day', _this._getHighlightedCornerStyle(weekCorners, dayIndex, weekIndex), (_a = {}, _a['ms-DatePicker-weekBackground ' + styles.weekBackground] = day.isSelected && (dateRangeType === DateRangeType.Week || dateRangeType === DateRangeType.WorkWeek), _a['ms-DatePicker-dayBackground ' + styles.dayBackground] = dateRangeType === DateRangeType.Day, _a['ms-DatePicker-day--highlighted ' + styles.dayIsHighlighted] = day.isSelected && dateRangeType === DateRangeType.Day, _a['ms-DatePicker-day--infocus ' + styles.dayIsFocused] = day.isInBounds && day.isInMonth, _a['ms-DatePicker-day--outfocus ' + styles.dayIsUnfocused] = day.isInBounds && !day.isInMonth, _a[styles.daySelection] = dateRangeType === DateRangeType.Day, _a[styles.weekSelection] = dateRangeType === DateRangeType.Week || dateRangeType === DateRangeType.WorkWeek, _a[styles.monthSelection] = dateRangeType === DateRangeType.Month, _a)),\n          ref: function (element) {\n            return _this._setDayCellRef(element, day, isNavigatedDate);\n          },\n          onMouseOver: dateRangeType !== DateRangeType.Day && day.isInBounds ? _this._onDayMouseOver(day.originalDate, weekIndex, dayIndex, dateRangeType) : undefined,\n          onMouseLeave: dateRangeType !== DateRangeType.Day && day.isInBounds ? _this._onDayMouseLeave(day.originalDate, weekIndex, dayIndex, dateRangeType) : undefined,\n          onMouseDown: dateRangeType !== DateRangeType.Day && day.isInBounds ? _this._onDayMouseDown(day.originalDate, weekIndex, dayIndex, dateRangeType) : undefined,\n          onMouseUp: dateRangeType !== DateRangeType.Day && day.isInBounds ? _this._onDayMouseUp(day.originalDate, weekIndex, dayIndex, dateRangeType) : undefined,\n          role: 'gridcell'\n        }, React.createElement(\"button\", {\n          key: day.key + 'button',\n          onClick: day.isInBounds ? day.onSelected : undefined,\n          className: css(styles.day, 'ms-DatePicker-day-button', (_b = {}, _b['ms-DatePicker-day--disabled ' + styles.dayIsDisabled] = !day.isInBounds, _b['ms-DatePicker-day--today ' + styles.dayIsToday] = day.isToday, _b)),\n          onKeyDown: _this._onDayKeyDown(day.originalDate, weekIndex, dayIndex),\n          \"aria-label\": dateTimeFormatter.formatMonthDayYear(day.originalDate, strings),\n          id: isNavigatedDate ? activeDescendantId : undefined,\n          \"aria-readonly\": true,\n          \"aria-current\": day.isToday ? 'date' : undefined,\n          \"aria-selected\": day.isInBounds ? day.isSelected : undefined,\n          \"data-is-focusable\": allFocusable || (day.isInBounds ? true : undefined),\n          ref: function (element) {\n            return _this._setDayRef(element, day, isNavigatedDate);\n          },\n          disabled: !allFocusable && !day.isInBounds,\n          \"aria-disabled\": !day.isInBounds,\n          type: \"button\"\n        }, React.createElement(\"span\", {\n          \"aria-hidden\": \"true\"\n        }, dateTimeFormatter.formatDay(day.originalDate))));\n      }));\n    })))));\n  };\n\n  CalendarDay.prototype.focus = function () {\n    if (this.navigatedDay) {\n      this.navigatedDay.tabIndex = 0;\n      this.navigatedDay.focus();\n    }\n  };\n\n  CalendarDay.prototype._setDayRef = function (element, day, isNavigatedDate) {\n    if (isNavigatedDate) {\n      this.navigatedDay = element;\n    }\n  };\n\n  CalendarDay.prototype._setDayCellRef = function (element, day, isNavigatedDate) {\n    this.days[day.key] = element;\n  };\n\n  CalendarDay.prototype._getWeekCornerStyles = function (weeks, dateRangeType) {\n    var _this = this;\n\n    var weekCornersStyled = {};\n\n    switch (dateRangeType) {\n      case DateRangeType.Month:\n        /* need to handle setting all of the corners on arbitrarily shaped blobs\n              __\n           __|A |\n          |B |C |__\n          |D |E |F |\n                   in this case, A needs top left rounded, top right rounded\n          B needs top left rounded\n          C doesn't need any rounding\n          D needs bottom left rounded\n          E doesn't need any rounding\n          F needs top right rounding\n        */\n        // if there's an item above, lose both top corners. Item below, lose both bottom corners, etc.\n        weeks.forEach(function (week, weekIndex) {\n          week.forEach(function (day, dayIndex) {\n            var above = weeks[weekIndex - 1] && weeks[weekIndex - 1][dayIndex] && weeks[weekIndex - 1][dayIndex].originalDate.getMonth() === weeks[weekIndex][dayIndex].originalDate.getMonth();\n            var below = weeks[weekIndex + 1] && weeks[weekIndex + 1][dayIndex] && weeks[weekIndex + 1][dayIndex].originalDate.getMonth() === weeks[weekIndex][dayIndex].originalDate.getMonth();\n            var left = weeks[weekIndex][dayIndex - 1] && weeks[weekIndex][dayIndex - 1].originalDate.getMonth() === weeks[weekIndex][dayIndex].originalDate.getMonth();\n            var right = weeks[weekIndex][dayIndex + 1] && weeks[weekIndex][dayIndex + 1].originalDate.getMonth() === weeks[weekIndex][dayIndex].originalDate.getMonth();\n            var roundedTopLeft = !above && !left;\n            var roundedTopRight = !above && !right;\n            var roundedBottomLeft = !below && !left;\n            var roundedBottomRight = !below && !right;\n            var style = '';\n\n            if (roundedTopLeft) {\n              style = getRTL() ? style.concat(styles.topRightCornerDate + ' ') : style.concat(styles.topLeftCornerDate + ' ');\n            }\n\n            if (roundedTopRight) {\n              style = getRTL() ? style.concat(styles.topLeftCornerDate + ' ') : style.concat(styles.topRightCornerDate + ' ');\n            }\n\n            if (roundedBottomLeft) {\n              style = getRTL() ? style.concat(styles.bottomRightCornerDate + ' ') : style.concat(styles.bottomLeftCornerDate + ' ');\n            }\n\n            if (roundedBottomRight) {\n              style = getRTL() ? style.concat(styles.bottomLeftCornerDate + ' ') : style.concat(styles.bottomRightCornerDate + ' ');\n            }\n\n            if (!above) {\n              style = style.concat(styles.topDate + ' ');\n            }\n\n            if (!below) {\n              style = style.concat(styles.bottomDate + ' ');\n            }\n\n            if (!right) {\n              style = style.concat(styles.rightDate + ' ');\n            }\n\n            if (!left) {\n              style = style.concat(styles.leftdate + ' ');\n            }\n\n            weekCornersStyled[weekIndex + '_' + dayIndex] = style;\n          });\n        });\n        break;\n\n      case DateRangeType.Week:\n      case DateRangeType.WorkWeek:\n        weeks.forEach(function (week, weekIndex) {\n          var minIndex = findIndex(week, function (item) {\n            return item.isInBounds;\n          });\n\n          var maxIndex = _this._findLastIndex(week, function (item) {\n            return item.isInBounds;\n          });\n\n          var leftStyle = styles.topLeftCornerDate + ' ' + styles.bottomLeftCornerDate;\n          var rightStyle = styles.topRightCornerDate + ' ' + styles.bottomRightCornerDate;\n          weekCornersStyled[weekIndex + '_' + minIndex] = getRTL() ? rightStyle : leftStyle;\n          weekCornersStyled[weekIndex + '_' + maxIndex] = getRTL() ? leftStyle : rightStyle;\n        });\n        break;\n    }\n\n    return weekCornersStyled;\n  };\n\n  CalendarDay.prototype._getHighlightedCornerStyle = function (weekCorners, dayIndex, weekIndex) {\n    var cornerStyle = weekCorners[weekIndex + '_' + dayIndex] ? weekCorners[weekIndex + '_' + dayIndex] : '';\n    return cornerStyle;\n  };\n\n  CalendarDay.prototype._navigateMonthEdge = function (ev, date, weekIndex, dayIndex) {\n    var _a = this.props,\n        minDate = _a.minDate,\n        maxDate = _a.maxDate;\n    var targetDate = undefined;\n\n    if (weekIndex === 0 && ev.which === KeyCodes.up) {\n      targetDate = addWeeks(date, -1);\n    } else if (weekIndex === this.state.weeks.length - 1 && ev.which === KeyCodes.down) {\n      targetDate = addWeeks(date, 1);\n    } else if (dayIndex === 0 && ev.which === getRTLSafeKeyCode(KeyCodes.left)) {\n      targetDate = addDays(date, -1);\n    } else if (dayIndex === DAYS_IN_WEEK - 1 && ev.which === getRTLSafeKeyCode(KeyCodes.right)) {\n      targetDate = addDays(date, 1);\n    } // Don't navigate to out-of-bounds date\n\n\n    if (targetDate && (minDate ? compareDatePart(minDate, targetDate) < 1 : true) && (maxDate ? compareDatePart(targetDate, maxDate) < 1 : true)) {\n      this.props.onNavigateDate(targetDate, true);\n      ev.preventDefault();\n    }\n  };\n\n  CalendarDay.prototype._applyFunctionToDayRefs = function (func) {\n    var _this = this;\n\n    if (this.state.weeks) {\n      this.state.weeks.forEach(function (week, weekIndex) {\n        week.forEach(function (day) {\n          var ref = _this.days[day.key];\n          func(ref, day, weekIndex);\n        });\n      });\n    }\n  };\n\n  CalendarDay.prototype._getWeeks = function (propsToUse) {\n    var navigatedDate = propsToUse.navigatedDate,\n        selectedDate = propsToUse.selectedDate,\n        dateRangeType = propsToUse.dateRangeType,\n        firstDayOfWeek = propsToUse.firstDayOfWeek,\n        today = propsToUse.today,\n        minDate = propsToUse.minDate,\n        maxDate = propsToUse.maxDate,\n        showSixWeeksByDefault = propsToUse.showSixWeeksByDefault,\n        workWeekDays = propsToUse.workWeekDays;\n    var date = new Date(navigatedDate.getFullYear(), navigatedDate.getMonth(), 1);\n    var todaysDate = today || new Date();\n    var weeks = []; // Cycle the date backwards to get to the first day of the week.\n\n    while (date.getDay() !== firstDayOfWeek) {\n      date.setDate(date.getDate() - 1);\n    } // a flag to indicate whether all days of the week are in the month\n\n\n    var isAllDaysOfWeekOutOfMonth = false; // in work week view we want to select the whole week\n\n    var selectedDateRangeType = dateRangeType === DateRangeType.WorkWeek ? DateRangeType.Week : dateRangeType;\n    var selectedDates = getDateRangeArray(selectedDate, selectedDateRangeType, firstDayOfWeek, workWeekDays);\n\n    if (dateRangeType !== DateRangeType.Day) {\n      selectedDates = this._getBoundedDateRange(selectedDates, minDate, maxDate);\n    }\n\n    var shouldGetWeeks = true;\n\n    for (var weekIndex = 0; shouldGetWeeks; weekIndex++) {\n      var week = [];\n      isAllDaysOfWeekOutOfMonth = true;\n\n      for (var dayIndex = 0; dayIndex < DAYS_IN_WEEK; dayIndex++) {\n        // Casting date parameter as an any to avoid [ object Object ] error.\n        var originalDate = new Date(date);\n        var dayInfo = {\n          key: date.toString(),\n          date: date.getDate().toString(),\n          originalDate: originalDate,\n          isInMonth: date.getMonth() === navigatedDate.getMonth(),\n          isToday: compareDates(todaysDate, date),\n          isSelected: isInDateRangeArray(date, selectedDates),\n          onSelected: this._onSelectDate.bind(this, originalDate),\n          isInBounds: (minDate ? compareDatePart(minDate, date) < 1 : true) && (maxDate ? compareDatePart(date, maxDate) < 1 : true) && !this._getIsRestrictedDate(date)\n        };\n        week.push(dayInfo);\n\n        if (dayInfo.isInMonth) {\n          isAllDaysOfWeekOutOfMonth = false;\n        }\n\n        date.setDate(date.getDate() + 1);\n      } // We append the condition of the loop depending upon the showSixWeeksByDefault prop.\n\n\n      shouldGetWeeks = showSixWeeksByDefault ? !isAllDaysOfWeekOutOfMonth || weekIndex <= 5 : !isAllDaysOfWeekOutOfMonth;\n\n      if (shouldGetWeeks) {\n        weeks.push(week);\n      }\n    }\n\n    return weeks;\n  };\n\n  CalendarDay.prototype._getIsRestrictedDate = function (date) {\n    var restrictedDates = this.props.restrictedDates;\n\n    if (!restrictedDates) {\n      return false;\n    }\n\n    var restrictedDate = find(restrictedDates, function (rd) {\n      return compareDates(rd, date);\n    });\n    return restrictedDate ? true : false;\n  };\n\n  CalendarDay.prototype._getBoundedDateRange = function (dateRange, minDate, maxDate) {\n    var boundedDateRange = __spreadArrays(dateRange);\n\n    if (minDate) {\n      boundedDateRange = boundedDateRange.filter(function (date) {\n        return compareDatePart(date, minDate) >= 0;\n      });\n    }\n\n    if (maxDate) {\n      boundedDateRange = boundedDateRange.filter(function (date) {\n        return compareDatePart(date, maxDate) <= 0;\n      });\n    }\n\n    return boundedDateRange;\n  };\n  /**\n   * Returns the index of the last element in the array where the predicate is true, and -1\n   * otherwise\n   * @param items Array of items to be iterated over using the predicate\n   * @param predicate find calls predicate once for each element of the array, in descending\n   * order, until it finds one where predicate returns true if such an element is found.\n   */\n\n\n  CalendarDay.prototype._findLastIndex = function (items, predicate) {\n    for (var i = items.length - 1; i >= 0; i--) {\n      var item = items[i];\n\n      if (predicate(item)) {\n        return i;\n      }\n    }\n\n    return -1;\n  };\n\n  return CalendarDay;\n}(React.Component);\n\nexport { CalendarDay };","map":{"version":3,"mappings":"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","names":["React","KeyCodes","css","getId","getRTL","getRTLSafeKeyCode","format","findIndex","find","initializeComponentRef","DateRangeType","FocusZone","Icon","addDays","addWeeks","addMonths","compareDates","compareDatePart","getDateRangeArray","isInDateRangeArray","getWeekNumber","getWeekNumbersInMonth","getMonthStart","getMonthEnd","stylesImport","styles","DAYS_IN_WEEK","__extends","props","_super","_this","callback","ev","which","enter","space","originalDate","weekIndex","dayIndex","_onSelectDate","preventDefault","_navigateMonthEdge","dateRangeType","Month","_applyFunctionToDayRefs","ref","day","getMonth","isInBounds","classList","add","dayPress","dayWeekIndex","dayIsHighlighted","remove","dayHover","target","contains","relatedTarget","selectedDate","onSelectDate","firstDayOfWeek","navigatedDate","autoNavigateOnSelection","minDate","maxDate","workWeekDays","stopPropagation","dateRange","Day","_getBoundedDateRange","filter","_getIsRestrictedDate","d","compareResult","_onSelectPrevMonth","_onSelectNextMonth","onNavigateDate","onDismiss","onHeaderSelect","_onKeyDown","_onClose","state","activeDescendantId","weeks","_getWeeks","bind","CalendarDay","nextProps","setState","strings","navigationIcons","showWeekNumbers","firstWeekOfYear","dateTimeFormatter","showCloseButton","allFocusable","dayPickerId","monthAndYearId","leftNavigationIcon","leftNavigation","rightNavigationIcon","rightNavigation","closeNavigationIcon","closeIcon","weekNumbers","length","selectedDateWeekNumber","undefined","weekCorners","_getWeekCornerStyles","prevMonthInBounds","nextMonthInBounds","className","dayPicker","showWeekNumbersRTL","id","header","monthAndYear","headerToggleView","onClick","_onHeaderSelect","onKeyDown","_onHeaderKeyDown","formatMonthYear","role","tabIndex","monthComponents","navContainer","prevMonth","_a","prevMonthIsDisabled","disabled","_onPrevMonthKeyDown","title","prevMonthAriaLabel","months","type","iconName","nextMonth","_b","nextMonthIsDisabled","_onNextMonthKeyDown","nextMonthAriaLabel","closeButton","_onCloseButtonKeyDown","closeButtonAriaLabel","table","weekday","shortDays","map","val","index","scope","key","days","onMouseLeave","_onTableMouseLeave","onMouseUp","_onTableMouseUp","week","weekNumberFormatString","weekIsHighlighted","isNavigatedDate","onSelected","dayWrapper","_getHighlightedCornerStyle","weekBackground","isSelected","Week","WorkWeek","dayBackground","dayIsFocused","isInMonth","dayIsUnfocused","daySelection","weekSelection","monthSelection","_setDayCellRef","element","onMouseOver","_onDayMouseOver","_onDayMouseLeave","onMouseDown","_onDayMouseDown","_onDayMouseUp","dayIsDisabled","dayIsToday","isToday","_onDayKeyDown","formatMonthDayYear","_setDayRef","formatDay","navigatedDay","focus","weekCornersStyled","forEach","above","below","left","right","roundedTopLeft","roundedTopRight","roundedBottomLeft","roundedBottomRight","style","concat","topRightCornerDate","topLeftCornerDate","bottomRightCornerDate","bottomLeftCornerDate","topDate","bottomDate","rightDate","leftdate","minIndex","item","maxIndex","_findLastIndex","leftStyle","rightStyle","cornerStyle","date","targetDate","up","down","func","propsToUse","today","showSixWeeksByDefault","Date","getFullYear","todaysDate","getDay","setDate","getDate","isAllDaysOfWeekOutOfMonth","selectedDateRangeType","selectedDates","shouldGetWeeks","dayInfo","toString","push","restrictedDates","restrictedDate","rd","boundedDateRange","items","predicate","i","Component"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\office-ui-fabric-react\\lib\\components\\src\\components\\Calendar\\CalendarDay.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  KeyCodes,\n  css,\n  getId,\n  getRTL,\n  getRTLSafeKeyCode,\n  format,\n  IRefObject,\n  findIndex,\n  find,\n  initializeComponentRef,\n} from '../../Utilities';\nimport { ICalendarStrings, ICalendarIconStrings, ICalendarFormatDateCallbacks } from './Calendar.types';\nimport { DayOfWeek, FirstWeekOfYear, DateRangeType } from '../../utilities/dateValues/DateValues';\nimport { FocusZone } from '../../FocusZone';\nimport { Icon } from '../../Icon';\nimport {\n  addDays,\n  addWeeks,\n  addMonths,\n  compareDates,\n  compareDatePart,\n  getDateRangeArray,\n  isInDateRangeArray,\n  getWeekNumber,\n  getWeekNumbersInMonth,\n  getMonthStart,\n  getMonthEnd,\n} from '../../utilities/dateMath/DateMath';\n\nimport * as stylesImport from './Calendar.scss';\n\nconst styles: any = stylesImport;\n\nconst DAYS_IN_WEEK = 7;\n\nexport interface IDayInfo {\n  key: string;\n  date: string;\n  originalDate: Date;\n  isInMonth: boolean;\n  isToday: boolean;\n  isSelected: boolean;\n  isInBounds: boolean;\n  onSelected: (ev: React.SyntheticEvent<HTMLElement>) => void;\n}\n\nexport interface ICalendarDay {\n  focus(): void;\n}\n\nexport interface ICalendarDayProps extends React.ClassAttributes<CalendarDay> {\n  componentRef?: IRefObject<ICalendarDay>;\n  strings: ICalendarStrings;\n  selectedDate: Date;\n  navigatedDate: Date;\n  onSelectDate: (date: Date, selectedDateRangeArray?: Date[]) => void;\n  onNavigateDate: (date: Date, focusOnNavigatedDay: boolean) => void;\n  onDismiss?: () => void;\n  firstDayOfWeek: DayOfWeek;\n  dateRangeType: DateRangeType;\n  autoNavigateOnSelection: boolean;\n  navigationIcons: ICalendarIconStrings;\n  today?: Date;\n  onHeaderSelect?: (focus: boolean) => void;\n  showWeekNumbers?: boolean;\n  firstWeekOfYear: FirstWeekOfYear;\n  dateTimeFormatter: ICalendarFormatDateCallbacks;\n  showSixWeeksByDefault?: boolean;\n  minDate?: Date;\n  maxDate?: Date;\n  restrictedDates?: Date[];\n  workWeekDays?: DayOfWeek[];\n  showCloseButton?: boolean;\n  allFocusable?: boolean;\n}\n\nexport interface ICalendarDayState {\n  activeDescendantId?: string;\n  weeks?: IDayInfo[][];\n}\n\ninterface IWeekCorners {\n  [key: string]: string;\n}\n\nexport class CalendarDay extends React.Component<ICalendarDayProps, ICalendarDayState> {\n  private navigatedDay: HTMLElement | null;\n  private days: { [key: string]: HTMLElement | null } = {};\n\n  public constructor(props: ICalendarDayProps) {\n    super(props);\n\n    initializeComponentRef(this);\n\n    this.state = {\n      activeDescendantId: getId('DatePickerDay-active'),\n      weeks: this._getWeeks(props),\n    };\n\n    this._onSelectNextMonth = this._onSelectNextMonth.bind(this);\n    this._onSelectPrevMonth = this._onSelectPrevMonth.bind(this);\n    this._onClose = this._onClose.bind(this);\n  }\n\n  public UNSAFE_componentWillReceiveProps(nextProps: ICalendarDayProps): void {\n    this.setState({\n      weeks: this._getWeeks(nextProps),\n    });\n  }\n\n  public render(): JSX.Element {\n    const { activeDescendantId, weeks } = this.state;\n    const {\n      firstDayOfWeek,\n      strings,\n      navigatedDate,\n      selectedDate,\n      dateRangeType,\n      navigationIcons,\n      showWeekNumbers,\n      firstWeekOfYear,\n      dateTimeFormatter,\n      minDate,\n      maxDate,\n      showCloseButton,\n      allFocusable,\n    } = this.props;\n    const dayPickerId = getId('DatePickerDay-dayPicker');\n    const monthAndYearId = getId('DatePickerDay-monthAndYear');\n    const leftNavigationIcon = navigationIcons.leftNavigation;\n    const rightNavigationIcon = navigationIcons.rightNavigation;\n    const closeNavigationIcon = navigationIcons.closeIcon;\n    const weekNumbers = showWeekNumbers\n      ? getWeekNumbersInMonth(weeks!.length, firstDayOfWeek, firstWeekOfYear, navigatedDate)\n      : null;\n    const selectedDateWeekNumber = showWeekNumbers\n      ? getWeekNumber(selectedDate, firstDayOfWeek, firstWeekOfYear)\n      : undefined;\n\n    // When the month is highlighted get the corner dates so that styles can be added to them\n    const weekCorners: IWeekCorners = this._getWeekCornerStyles(weeks!, dateRangeType);\n\n    // determine if previous/next months are in bounds\n    const prevMonthInBounds = minDate ? compareDatePart(minDate, getMonthStart(navigatedDate)) < 0 : true;\n    const nextMonthInBounds = maxDate ? compareDatePart(getMonthEnd(navigatedDate), maxDate) < 0 : true;\n\n    return (\n      <div\n        className={css(\n          'ms-DatePicker-dayPicker',\n          styles.dayPicker,\n          showWeekNumbers &&\n            'ms-DatePicker-showWeekNumbers' &&\n            (getRTL() ? styles.showWeekNumbersRTL : styles.showWeekNumbers),\n        )}\n        id={dayPickerId}\n      >\n        <div className={css('ms-DatePicker-header', styles.header)}>\n          <div\n            aria-live=\"polite\"\n            aria-relevant=\"text\"\n            aria-atomic=\"true\"\n            id={monthAndYearId}\n            className={styles.monthAndYear}\n          >\n            {this.props.onHeaderSelect ? (\n              <div\n                className={css('ms-DatePicker-monthAndYear js-showMonthPicker', styles.headerToggleView)}\n                onClick={this._onHeaderSelect}\n                onKeyDown={this._onHeaderKeyDown}\n                aria-label={dateTimeFormatter.formatMonthYear(navigatedDate, strings)}\n                role=\"button\"\n                tabIndex={0}\n              >\n                {dateTimeFormatter.formatMonthYear(navigatedDate, strings)}\n              </div>\n            ) : (\n              <div className={css('ms-DatePicker-monthAndYear', styles.monthAndYear)}>\n                {dateTimeFormatter.formatMonthYear(navigatedDate, strings)}\n              </div>\n            )}\n          </div>\n          <div className={css('ms-DatePicker-monthComponents', styles.monthComponents)}>\n            <div className={css('ms-DatePicker-navContainer', styles.navContainer)}>\n              <button\n                className={css('ms-DatePicker-prevMonth js-prevMonth', styles.prevMonth, {\n                  ['ms-DatePicker-prevMonth--disabled ' + styles.prevMonthIsDisabled]: !prevMonthInBounds,\n                })}\n                disabled={!allFocusable && !prevMonthInBounds}\n                aria-disabled={!prevMonthInBounds}\n                onClick={prevMonthInBounds ? this._onSelectPrevMonth : undefined}\n                onKeyDown={prevMonthInBounds ? this._onPrevMonthKeyDown : undefined}\n                aria-controls={dayPickerId}\n                title={\n                  strings.prevMonthAriaLabel\n                    ? strings.prevMonthAriaLabel + ' ' + strings.months[addMonths(navigatedDate, -1).getMonth()]\n                    : undefined\n                }\n                role=\"button\"\n                type=\"button\"\n              >\n                <Icon iconName={leftNavigationIcon} />\n              </button>\n              <button\n                className={css('ms-DatePicker-nextMonth js-nextMonth', styles.nextMonth, {\n                  ['ms-DatePicker-nextMonth--disabled ' + styles.nextMonthIsDisabled]: !nextMonthInBounds,\n                })}\n                disabled={!allFocusable && !nextMonthInBounds}\n                aria-disabled={!nextMonthInBounds}\n                onClick={nextMonthInBounds ? this._onSelectNextMonth : undefined}\n                onKeyDown={nextMonthInBounds ? this._onNextMonthKeyDown : undefined}\n                aria-controls={dayPickerId}\n                title={\n                  strings.nextMonthAriaLabel\n                    ? strings.nextMonthAriaLabel + ' ' + strings.months[addMonths(navigatedDate, 1).getMonth()]\n                    : undefined\n                }\n                role=\"button\"\n                type=\"button\"\n              >\n                <Icon iconName={rightNavigationIcon} />\n              </button>\n              {showCloseButton && (\n                <button\n                  className={css('ms-DatePicker-closeButton js-closeButton', styles.closeButton)}\n                  onClick={this._onClose}\n                  onKeyDown={this._onCloseButtonKeyDown}\n                  title={strings.closeButtonAriaLabel}\n                  role=\"button\"\n                  type=\"button\"\n                >\n                  <Icon iconName={closeNavigationIcon} />\n                </button>\n              )}\n            </div>\n          </div>\n        </div>\n        <FocusZone>\n          <table\n            className={css('ms-DatePicker-table', styles.table)}\n            aria-readonly=\"true\"\n            aria-multiselectable=\"false\"\n            aria-labelledby={monthAndYearId}\n            aria-activedescendant={activeDescendantId}\n            role=\"grid\"\n          >\n            <thead>\n              <tr>\n                {showWeekNumbers && <th className={css('ms-DatePicker-weekday', styles.weekday)} />}\n                {strings.shortDays.map((val, index) => (\n                  <th\n                    className={css('ms-DatePicker-weekday', styles.weekday)}\n                    role=\"columnheader\"\n                    scope=\"col\"\n                    key={index}\n                    title={strings.days[(index + firstDayOfWeek) % DAYS_IN_WEEK]}\n                    aria-label={strings.days[(index + firstDayOfWeek) % DAYS_IN_WEEK]}\n                    data-is-focusable={allFocusable ? true : undefined}\n                  >\n                    {strings.shortDays[(index + firstDayOfWeek) % DAYS_IN_WEEK]}\n                  </th>\n                ))}\n              </tr>\n            </thead>\n            <tbody\n              onMouseLeave={dateRangeType !== DateRangeType.Day ? this._onTableMouseLeave : undefined}\n              onMouseUp={dateRangeType !== DateRangeType.Day ? this._onTableMouseUp : undefined}\n            >\n              {weeks!.map((week, weekIndex) => (\n                <tr key={weekNumbers ? weekNumbers[weekIndex] : weekIndex}>\n                  {showWeekNumbers && weekNumbers && (\n                    <th\n                      className={css(\n                        'ms-DatePicker-weekNumbers',\n                        'ms-DatePicker-weekday',\n                        styles.weekday,\n                        styles.weekNumbers,\n                      )}\n                      key={weekIndex}\n                      title={\n                        weekNumbers &&\n                        strings.weekNumberFormatString &&\n                        format(strings.weekNumberFormatString, weekNumbers[weekIndex])\n                      }\n                      aria-label={\n                        weekNumbers &&\n                        strings.weekNumberFormatString &&\n                        format(strings.weekNumberFormatString, weekNumbers[weekIndex])\n                      }\n                      scope=\"row\"\n                    >\n                      <div\n                        className={css('ms-DatePicker-day', styles.day, {\n                          ['ms-DatePicker-week--highlighted ' + styles.weekIsHighlighted]:\n                            selectedDateWeekNumber === weekNumbers[weekIndex],\n                        })}\n                      >\n                        <span>{weekNumbers[weekIndex]}</span>\n                      </div>\n                    </th>\n                  )}\n                  {week.map((day, dayIndex) => {\n                    const isNavigatedDate = compareDates(navigatedDate, day.originalDate);\n                    return (\n                      <td\n                        key={day.key}\n                        onClick={day.isInBounds ? day.onSelected : undefined}\n                        className={css(\n                          styles.dayWrapper,\n                          'ms-DatePicker-day',\n                          this._getHighlightedCornerStyle(weekCorners, dayIndex, weekIndex),\n                          {\n                            ['ms-DatePicker-weekBackground ' + styles.weekBackground]:\n                              day.isSelected &&\n                              (dateRangeType === DateRangeType.Week || dateRangeType === DateRangeType.WorkWeek),\n                            ['ms-DatePicker-dayBackground ' + styles.dayBackground]:\n                              dateRangeType === DateRangeType.Day,\n                            ['ms-DatePicker-day--highlighted ' + styles.dayIsHighlighted]:\n                              day.isSelected && dateRangeType === DateRangeType.Day,\n                            ['ms-DatePicker-day--infocus ' + styles.dayIsFocused]: day.isInBounds && day.isInMonth,\n                            ['ms-DatePicker-day--outfocus ' + styles.dayIsUnfocused]: day.isInBounds && !day.isInMonth,\n                            [styles.daySelection]: dateRangeType === DateRangeType.Day,\n                            [styles.weekSelection]:\n                              dateRangeType === DateRangeType.Week || dateRangeType === DateRangeType.WorkWeek,\n                            [styles.monthSelection]: dateRangeType === DateRangeType.Month,\n                          },\n                        )}\n                        ref={element => this._setDayCellRef(element, day, isNavigatedDate)}\n                        onMouseOver={\n                          dateRangeType !== DateRangeType.Day && day.isInBounds\n                            ? this._onDayMouseOver(day.originalDate, weekIndex, dayIndex, dateRangeType)\n                            : undefined\n                        }\n                        onMouseLeave={\n                          dateRangeType !== DateRangeType.Day && day.isInBounds\n                            ? this._onDayMouseLeave(day.originalDate, weekIndex, dayIndex, dateRangeType)\n                            : undefined\n                        }\n                        onMouseDown={\n                          dateRangeType !== DateRangeType.Day && day.isInBounds\n                            ? this._onDayMouseDown(day.originalDate, weekIndex, dayIndex, dateRangeType)\n                            : undefined\n                        }\n                        onMouseUp={\n                          dateRangeType !== DateRangeType.Day && day.isInBounds\n                            ? this._onDayMouseUp(day.originalDate, weekIndex, dayIndex, dateRangeType)\n                            : undefined\n                        }\n                        role={'gridcell'}\n                      >\n                        <button\n                          key={day.key + 'button'}\n                          onClick={day.isInBounds ? day.onSelected : undefined}\n                          className={css(styles.day, 'ms-DatePicker-day-button', {\n                            ['ms-DatePicker-day--disabled ' + styles.dayIsDisabled]: !day.isInBounds,\n                            ['ms-DatePicker-day--today ' + styles.dayIsToday]: day.isToday,\n                          })}\n                          onKeyDown={this._onDayKeyDown(day.originalDate, weekIndex, dayIndex)}\n                          aria-label={dateTimeFormatter.formatMonthDayYear(day.originalDate, strings)}\n                          id={isNavigatedDate ? activeDescendantId : undefined}\n                          aria-readonly={true}\n                          aria-current={day.isToday ? 'date' : undefined}\n                          aria-selected={day.isInBounds ? day.isSelected : undefined}\n                          data-is-focusable={allFocusable || (day.isInBounds ? true : undefined)}\n                          ref={element => this._setDayRef(element, day, isNavigatedDate)}\n                          disabled={!allFocusable && !day.isInBounds}\n                          aria-disabled={!day.isInBounds}\n                          type=\"button\"\n                        >\n                          <span aria-hidden=\"true\">{dateTimeFormatter.formatDay(day.originalDate)}</span>\n                        </button>\n                      </td>\n                    );\n                  })}\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </FocusZone>\n      </div>\n    );\n  }\n\n  public focus() {\n    if (this.navigatedDay) {\n      this.navigatedDay.tabIndex = 0;\n      this.navigatedDay.focus();\n    }\n  }\n\n  private _setDayRef(element: HTMLElement | null, day: IDayInfo, isNavigatedDate: boolean): void {\n    if (isNavigatedDate) {\n      this.navigatedDay = element;\n    }\n  }\n\n  private _setDayCellRef(element: HTMLElement | null, day: IDayInfo, isNavigatedDate: boolean): void {\n    this.days[day.key] = element;\n  }\n\n  private _getWeekCornerStyles(weeks: IDayInfo[][], dateRangeType: DateRangeType): IWeekCorners {\n    const weekCornersStyled: any = {};\n\n    switch (dateRangeType) {\n      case DateRangeType.Month:\n        /* need to handle setting all of the corners on arbitrarily shaped blobs\n              __\n           __|A |\n          |B |C |__\n          |D |E |F |\n\n          in this case, A needs top left rounded, top right rounded\n          B needs top left rounded\n          C doesn't need any rounding\n          D needs bottom left rounded\n          E doesn't need any rounding\n          F needs top right rounding\n        */\n\n        // if there's an item above, lose both top corners. Item below, lose both bottom corners, etc.\n        weeks.forEach((week: IDayInfo[], weekIndex: number) => {\n          week.forEach((day: IDayInfo, dayIndex: number) => {\n            const above =\n              weeks[weekIndex - 1] &&\n              weeks[weekIndex - 1][dayIndex] &&\n              weeks[weekIndex - 1][dayIndex].originalDate.getMonth() ===\n                weeks[weekIndex][dayIndex].originalDate.getMonth();\n            const below =\n              weeks[weekIndex + 1] &&\n              weeks[weekIndex + 1][dayIndex] &&\n              weeks[weekIndex + 1][dayIndex].originalDate.getMonth() ===\n                weeks[weekIndex][dayIndex].originalDate.getMonth();\n            const left =\n              weeks[weekIndex][dayIndex - 1] &&\n              weeks[weekIndex][dayIndex - 1].originalDate.getMonth() ===\n                weeks[weekIndex][dayIndex].originalDate.getMonth();\n            const right =\n              weeks[weekIndex][dayIndex + 1] &&\n              weeks[weekIndex][dayIndex + 1].originalDate.getMonth() ===\n                weeks[weekIndex][dayIndex].originalDate.getMonth();\n\n            const roundedTopLeft = !above && !left;\n            const roundedTopRight = !above && !right;\n            const roundedBottomLeft = !below && !left;\n            const roundedBottomRight = !below && !right;\n\n            let style = '';\n            if (roundedTopLeft) {\n              style = getRTL()\n                ? style.concat(styles.topRightCornerDate + ' ')\n                : style.concat(styles.topLeftCornerDate + ' ');\n            }\n            if (roundedTopRight) {\n              style = getRTL()\n                ? style.concat(styles.topLeftCornerDate + ' ')\n                : style.concat(styles.topRightCornerDate + ' ');\n            }\n            if (roundedBottomLeft) {\n              style = getRTL()\n                ? style.concat(styles.bottomRightCornerDate + ' ')\n                : style.concat(styles.bottomLeftCornerDate + ' ');\n            }\n            if (roundedBottomRight) {\n              style = getRTL()\n                ? style.concat(styles.bottomLeftCornerDate + ' ')\n                : style.concat(styles.bottomRightCornerDate + ' ');\n            }\n\n            if (!above) {\n              style = style.concat(styles.topDate + ' ');\n            }\n\n            if (!below) {\n              style = style.concat(styles.bottomDate + ' ');\n            }\n\n            if (!right) {\n              style = style.concat(styles.rightDate + ' ');\n            }\n\n            if (!left) {\n              style = style.concat(styles.leftdate + ' ');\n            }\n\n            weekCornersStyled[weekIndex + '_' + dayIndex] = style;\n          });\n        });\n        break;\n      case DateRangeType.Week:\n      case DateRangeType.WorkWeek:\n        weeks.forEach((week: IDayInfo[], weekIndex: number) => {\n          const minIndex = findIndex(week, (item: IDayInfo) => {\n            return item.isInBounds;\n          });\n          const maxIndex = this._findLastIndex(week, (item: IDayInfo) => {\n            return item.isInBounds;\n          });\n\n          const leftStyle = styles.topLeftCornerDate + ' ' + styles.bottomLeftCornerDate;\n          const rightStyle = styles.topRightCornerDate + ' ' + styles.bottomRightCornerDate;\n          weekCornersStyled[weekIndex + '_' + minIndex] = getRTL() ? rightStyle : leftStyle;\n          weekCornersStyled[weekIndex + '_' + maxIndex] = getRTL() ? leftStyle : rightStyle;\n        });\n        break;\n    }\n\n    return weekCornersStyled;\n  }\n\n  private _getHighlightedCornerStyle(weekCorners: IWeekCorners, dayIndex: number, weekIndex: number): string {\n    const cornerStyle = weekCorners[weekIndex + '_' + dayIndex] ? weekCorners[weekIndex + '_' + dayIndex] : '';\n    return cornerStyle;\n  }\n\n  private _navigateMonthEdge(\n    ev: React.KeyboardEvent<HTMLElement>,\n    date: Date,\n    weekIndex: number,\n    dayIndex: number,\n  ): void {\n    const { minDate, maxDate } = this.props;\n    let targetDate: Date | undefined = undefined;\n\n    if (weekIndex === 0 && ev.which === KeyCodes.up) {\n      targetDate = addWeeks(date, -1);\n    } else if (weekIndex === this.state.weeks!.length - 1 && ev.which === KeyCodes.down) {\n      targetDate = addWeeks(date, 1);\n    } else if (dayIndex === 0 && ev.which === getRTLSafeKeyCode(KeyCodes.left)) {\n      targetDate = addDays(date, -1);\n    } else if (dayIndex === DAYS_IN_WEEK - 1 && ev.which === getRTLSafeKeyCode(KeyCodes.right)) {\n      targetDate = addDays(date, 1);\n    }\n\n    // Don't navigate to out-of-bounds date\n    if (\n      targetDate &&\n      (minDate ? compareDatePart(minDate, targetDate) < 1 : true) &&\n      (maxDate ? compareDatePart(targetDate, maxDate) < 1 : true)\n    ) {\n      this.props.onNavigateDate(targetDate, true);\n      ev.preventDefault();\n    }\n  }\n\n  private _onKeyDown = (callback: () => void, ev: React.KeyboardEvent<HTMLElement>): void => {\n    if (ev.which === KeyCodes.enter || ev.which === KeyCodes.space) {\n      callback();\n    }\n  };\n\n  private _onDayKeyDown = (\n    originalDate: Date,\n    weekIndex: number,\n    dayIndex: number,\n  ): ((ev: React.KeyboardEvent<HTMLElement>) => void) => {\n    return (ev: React.KeyboardEvent<HTMLElement>): void => {\n      if (ev.which === KeyCodes.enter) {\n        this._onSelectDate(originalDate, ev);\n        ev.preventDefault();\n      } else {\n        this._navigateMonthEdge(ev, originalDate, weekIndex, dayIndex);\n      }\n    };\n  };\n\n  private _onDayMouseDown = (\n    originalDate: Date,\n    weekIndex: number,\n    dayIndex: number,\n    dateRangeType: DateRangeType,\n  ): ((ev: React.MouseEvent<HTMLElement>) => void) => {\n    return (ev: React.MouseEvent<HTMLElement>): void => {\n      // set the press styling\n      if (dateRangeType === DateRangeType.Month) {\n        this._applyFunctionToDayRefs((ref, day) => {\n          if (ref && day.originalDate.getMonth() === originalDate.getMonth() && day.isInBounds) {\n            ref.classList.add(styles.dayPress);\n          }\n        });\n      } else {\n        // week or work week view\n        this._applyFunctionToDayRefs((ref, day, dayWeekIndex) => {\n          if (ref && dayWeekIndex === weekIndex && day.isInBounds) {\n            ref.classList.add(styles.dayPress);\n            ref.classList.add(styles.dayIsHighlighted);\n          } else if (ref) {\n            ref.classList.remove(styles.dayIsHighlighted);\n          }\n        });\n      }\n    };\n  };\n\n  private _onDayMouseUp = (\n    originalDate: Date,\n    weekIndex: number,\n    dayIndex: number,\n    dateRangeType: DateRangeType,\n  ): ((ev: React.MouseEvent<HTMLElement>) => void) => {\n    return (ev: React.MouseEvent<HTMLElement>): void => {\n      // remove press styling\n      if (dateRangeType === DateRangeType.Month) {\n        this._applyFunctionToDayRefs((ref, day) => {\n          if (ref && day.originalDate.getMonth() === originalDate.getMonth() && day.isInBounds) {\n            ref.classList.remove(styles.dayPress);\n          }\n        });\n      } else {\n        // week or work week view\n        this._applyFunctionToDayRefs((ref, day, dayWeekIndex) => {\n          if (ref && dayWeekIndex === weekIndex && day.isInBounds) {\n            ref.classList.remove(styles.dayPress);\n          }\n        });\n      }\n    };\n  };\n\n  private _onDayMouseOver = (\n    originalDate: Date,\n    weekIndex: number,\n    dayIndex: number,\n    dateRangeType: DateRangeType,\n  ): ((ev: React.MouseEvent<HTMLElement>) => void) => {\n    return (ev: React.MouseEvent<HTMLElement>): void => {\n      // set the hover styling on every day in the same month\n      if (dateRangeType === DateRangeType.Month) {\n        this._applyFunctionToDayRefs((ref, day) => {\n          if (ref && day.originalDate.getMonth() === originalDate.getMonth() && day.isInBounds) {\n            ref.classList.add(styles.dayHover);\n          }\n        });\n      } else {\n        // week or work week view\n        this._applyFunctionToDayRefs((ref, day, dayWeekIndex) => {\n          if (ref && dayWeekIndex === weekIndex && day.isInBounds) {\n            ref.classList.add(styles.dayHover);\n          }\n        });\n      }\n    };\n  };\n\n  private _onDayMouseLeave = (\n    originalDate: Date,\n    weekIndex: number,\n    dayIndex: number,\n    dateRangeType: DateRangeType,\n  ): ((ev: React.MouseEvent<HTMLElement>) => void) => {\n    return (ev: React.MouseEvent<HTMLElement>): void => {\n      // remove the hover and pressed styling\n      if (dateRangeType === DateRangeType.Month) {\n        this._applyFunctionToDayRefs((ref, day) => {\n          if (ref && day.originalDate.getMonth() === originalDate.getMonth() && day.isInBounds) {\n            ref.classList.remove(styles.dayHover);\n          }\n        });\n      } else {\n        // week or work week view\n        this._applyFunctionToDayRefs((ref, day, dayWeekIndex) => {\n          if (ref && dayWeekIndex === weekIndex && day.isInBounds) {\n            ref.classList.remove(styles.dayHover);\n          }\n        });\n      }\n    };\n  };\n\n  private _onTableMouseLeave = (ev: React.MouseEvent<HTMLElement>): void => {\n    if (\n      (ev.target as HTMLElement).contains &&\n      ev.relatedTarget &&\n      (ev.relatedTarget as HTMLElement).contains &&\n      (ev.target as HTMLElement).contains(ev.relatedTarget as HTMLElement)\n    ) {\n      return;\n    }\n\n    this._applyFunctionToDayRefs((ref, day) => {\n      if (ref) {\n        ref.classList.remove(styles.dayHover);\n        ref.classList.remove(styles.dayPress);\n      }\n    });\n  };\n\n  private _onTableMouseUp = (ev: React.MouseEvent<HTMLElement>): void => {\n    if (\n      (ev.target as HTMLElement).contains &&\n      ev.relatedTarget &&\n      (ev.relatedTarget as HTMLElement).contains &&\n      (ev.target as HTMLElement).contains(ev.relatedTarget as HTMLElement)\n    ) {\n      return;\n    }\n\n    this._applyFunctionToDayRefs((ref, day) => {\n      if (ref) {\n        ref.classList.remove(styles.dayPress);\n      }\n    });\n  };\n\n  private _applyFunctionToDayRefs(func: (ref: HTMLElement | null, day: IDayInfo, weekIndex?: number) => void) {\n    if (this.state.weeks) {\n      this.state.weeks.forEach((week: IDayInfo[], weekIndex: number) => {\n        week.forEach(day => {\n          const ref = this.days[day.key];\n          func(ref, day, weekIndex);\n        });\n      });\n    }\n  }\n\n  private _onSelectDate = (selectedDate: Date, ev: React.SyntheticEvent<HTMLElement>): void => {\n    const {\n      onSelectDate,\n      dateRangeType,\n      firstDayOfWeek,\n      navigatedDate,\n      autoNavigateOnSelection,\n      minDate,\n      maxDate,\n      workWeekDays,\n    } = this.props;\n\n    if (ev) {\n      ev.stopPropagation();\n    }\n\n    let dateRange = getDateRangeArray(selectedDate, dateRangeType, firstDayOfWeek, workWeekDays);\n    if (dateRangeType !== DateRangeType.Day) {\n      dateRange = this._getBoundedDateRange(dateRange, minDate, maxDate);\n    }\n    dateRange = dateRange.filter(d => {\n      return !this._getIsRestrictedDate(d);\n    });\n\n    if (onSelectDate) {\n      onSelectDate(selectedDate, dateRange);\n    }\n\n    // Navigate to next or previous month if needed\n    if (autoNavigateOnSelection && selectedDate.getMonth() !== navigatedDate.getMonth()) {\n      const compareResult = compareDatePart(selectedDate, navigatedDate);\n      if (compareResult < 0) {\n        this._onSelectPrevMonth();\n      } else if (compareResult > 0) {\n        this._onSelectNextMonth();\n      }\n    }\n  };\n\n  private _onSelectNextMonth = (): void => {\n    this.props.onNavigateDate(addMonths(this.props.navigatedDate, 1), false);\n  };\n\n  private _onSelectPrevMonth = (): void => {\n    this.props.onNavigateDate(addMonths(this.props.navigatedDate, -1), false);\n  };\n\n  private _onClose = (): void => {\n    if (this.props.onDismiss) {\n      this.props.onDismiss();\n    }\n  };\n\n  private _onHeaderSelect = (): void => {\n    const { onHeaderSelect } = this.props;\n    if (onHeaderSelect) {\n      onHeaderSelect(true);\n    }\n  };\n\n  private _onHeaderKeyDown = (ev: React.KeyboardEvent<HTMLElement>): void => {\n    const { onHeaderSelect } = this.props;\n    if (onHeaderSelect && (ev.which === KeyCodes.enter || ev.which === KeyCodes.space)) {\n      onHeaderSelect(true);\n    }\n  };\n\n  private _onPrevMonthKeyDown = (ev: React.KeyboardEvent<HTMLElement>): void => {\n    if (ev.which === KeyCodes.enter) {\n      this._onKeyDown(this._onSelectPrevMonth, ev);\n    }\n  };\n\n  private _onNextMonthKeyDown = (ev: React.KeyboardEvent<HTMLElement>): void => {\n    if (ev.which === KeyCodes.enter) {\n      this._onKeyDown(this._onSelectNextMonth, ev);\n    }\n  };\n\n  private _onCloseButtonKeyDown = (ev: React.KeyboardEvent<HTMLElement>): void => {\n    if (ev.which === KeyCodes.enter) {\n      this._onKeyDown(this._onClose, ev);\n    }\n  };\n\n  private _getWeeks(propsToUse: ICalendarDayProps): IDayInfo[][] {\n    const {\n      navigatedDate,\n      selectedDate,\n      dateRangeType,\n      firstDayOfWeek,\n      today,\n      minDate,\n      maxDate,\n      showSixWeeksByDefault,\n      workWeekDays,\n    } = propsToUse;\n    const date = new Date(navigatedDate.getFullYear(), navigatedDate.getMonth(), 1);\n    const todaysDate = today || new Date();\n    const weeks: IDayInfo[][] = [];\n\n    // Cycle the date backwards to get to the first day of the week.\n    while (date.getDay() !== firstDayOfWeek) {\n      date.setDate(date.getDate() - 1);\n    }\n\n    // a flag to indicate whether all days of the week are in the month\n    let isAllDaysOfWeekOutOfMonth = false;\n\n    // in work week view we want to select the whole week\n    const selectedDateRangeType = dateRangeType === DateRangeType.WorkWeek ? DateRangeType.Week : dateRangeType;\n    let selectedDates = getDateRangeArray(selectedDate, selectedDateRangeType, firstDayOfWeek, workWeekDays);\n    if (dateRangeType !== DateRangeType.Day) {\n      selectedDates = this._getBoundedDateRange(selectedDates, minDate, maxDate);\n    }\n\n    let shouldGetWeeks = true;\n\n    for (let weekIndex = 0; shouldGetWeeks; weekIndex++) {\n      const week: IDayInfo[] = [];\n\n      isAllDaysOfWeekOutOfMonth = true;\n\n      for (let dayIndex = 0; dayIndex < DAYS_IN_WEEK; dayIndex++) {\n        // Casting date parameter as an any to avoid [ object Object ] error.\n        const originalDate = new Date(date as any);\n        const dayInfo: IDayInfo = {\n          key: date.toString(),\n          date: date.getDate().toString(),\n          originalDate: originalDate,\n          isInMonth: date.getMonth() === navigatedDate.getMonth(),\n          isToday: compareDates(todaysDate, date),\n          isSelected: isInDateRangeArray(date, selectedDates),\n          onSelected: this._onSelectDate.bind(this, originalDate),\n          isInBounds:\n            (minDate ? compareDatePart(minDate, date) < 1 : true) &&\n            (maxDate ? compareDatePart(date, maxDate) < 1 : true) &&\n            !this._getIsRestrictedDate(date),\n        };\n\n        week.push(dayInfo);\n\n        if (dayInfo.isInMonth) {\n          isAllDaysOfWeekOutOfMonth = false;\n        }\n\n        date.setDate(date.getDate() + 1);\n      }\n\n      // We append the condition of the loop depending upon the showSixWeeksByDefault prop.\n      shouldGetWeeks = showSixWeeksByDefault\n        ? !isAllDaysOfWeekOutOfMonth || weekIndex <= 5\n        : !isAllDaysOfWeekOutOfMonth;\n      if (shouldGetWeeks) {\n        weeks.push(week);\n      }\n    }\n\n    return weeks;\n  }\n\n  private _getIsRestrictedDate(date: Date): boolean {\n    const { restrictedDates } = this.props;\n    if (!restrictedDates) {\n      return false;\n    }\n    const restrictedDate = find(restrictedDates, rd => {\n      return compareDates(rd, date);\n    });\n    return restrictedDate ? true : false;\n  }\n\n  private _getBoundedDateRange(dateRange: Date[], minDate?: Date, maxDate?: Date): Date[] {\n    let boundedDateRange = [...dateRange];\n    if (minDate) {\n      boundedDateRange = boundedDateRange.filter(date => compareDatePart(date, minDate as Date) >= 0);\n    }\n    if (maxDate) {\n      boundedDateRange = boundedDateRange.filter(date => compareDatePart(date, maxDate as Date) <= 0);\n    }\n    return boundedDateRange;\n  }\n\n  /**\n   * Returns the index of the last element in the array where the predicate is true, and -1\n   * otherwise\n   * @param items Array of items to be iterated over using the predicate\n   * @param predicate find calls predicate once for each element of the array, in descending\n   * order, until it finds one where predicate returns true if such an element is found.\n   */\n  private _findLastIndex<T>(items: T[], predicate: (item: T) => boolean): number {\n    for (let i = items.length - 1; i >= 0; i--) {\n      const item = items[i];\n\n      if (predicate(item)) {\n        return i;\n      }\n    }\n\n    return -1;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}