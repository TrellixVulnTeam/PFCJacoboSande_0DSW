{"ast":null,"code":"import { fontFace } from '@uifabric/merge-styles';\nimport { FontWeights, LocalizedFontFamilies, LocalizedFontNames } from './FluentFonts';\nimport { createFontStyles } from './createFontStyles';\nimport { getLanguage, getWindow } from '@uifabric/utilities'; // Default urls.\n\nvar DefaultBaseUrl = 'https://static2.sharepointonline.com/files/fabric/assets'; // Standard font styling.\n\nexport var DefaultFontStyles = createFontStyles(getLanguage('sessionStorage'));\n\nfunction _registerFontFace(fontFamily, url, fontWeight, localFontName) {\n  fontFamily = \"'\" + fontFamily + \"'\";\n  var localFontSrc = localFontName !== undefined ? \"local('\" + localFontName + \"'),\" : '';\n  fontFace({\n    fontFamily: fontFamily,\n    src: localFontSrc + (\"url('\" + url + \".woff2') format('woff2'),\") + (\"url('\" + url + \".woff') format('woff')\"),\n    fontWeight: fontWeight,\n    fontStyle: 'normal',\n    fontDisplay: 'swap'\n  });\n}\n\nfunction _registerFontFaceSet(baseUrl, fontFamily, cdnFolder, cdnFontName, localFontName) {\n  if (cdnFontName === void 0) {\n    cdnFontName = 'segoeui';\n  }\n\n  var urlBase = baseUrl + \"/\" + cdnFolder + \"/\" + cdnFontName;\n\n  _registerFontFace(fontFamily, urlBase + '-light', FontWeights.light, localFontName && localFontName + ' Light');\n\n  _registerFontFace(fontFamily, urlBase + '-semilight', FontWeights.semilight, localFontName && localFontName + ' SemiLight');\n\n  _registerFontFace(fontFamily, urlBase + '-regular', FontWeights.regular, localFontName);\n\n  _registerFontFace(fontFamily, urlBase + '-semibold', FontWeights.semibold, localFontName && localFontName + ' SemiBold');\n\n  _registerFontFace(fontFamily, urlBase + '-bold', FontWeights.bold, localFontName && localFontName + ' Bold');\n}\n\nexport function registerDefaultFontFaces(baseUrl) {\n  if (baseUrl) {\n    var fontUrl = baseUrl + \"/fonts\"; // Produce @font-face definitions for all supported web fonts.\n\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.Thai, 'leelawadeeui-thai', 'leelawadeeui');\n\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.Arabic, 'segoeui-arabic');\n\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.Cyrillic, 'segoeui-cyrillic');\n\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.EastEuropean, 'segoeui-easteuropean');\n\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.Greek, 'segoeui-greek');\n\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.Hebrew, 'segoeui-hebrew');\n\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.Vietnamese, 'segoeui-vietnamese');\n\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.WestEuropean, 'segoeui-westeuropean', 'segoeui', 'Segoe UI');\n\n    _registerFontFaceSet(fontUrl, LocalizedFontFamilies.Selawik, 'selawik', 'selawik');\n\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.Armenian, 'segoeui-armenian');\n\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.Georgian, 'segoeui-georgian'); // Leelawadee UI (Thai) does not have a 'light' weight, so we override\n    // the font-face generated above to use the 'semilight' weight instead.\n\n\n    _registerFontFace('Leelawadee UI Web', fontUrl + \"/leelawadeeui-thai/leelawadeeui-semilight\", FontWeights.light); // Leelawadee UI (Thai) does not have a 'semibold' weight, so we override\n    // the font-face generated above to use the 'bold' weight instead.\n\n\n    _registerFontFace('Leelawadee UI Web', fontUrl + \"/leelawadeeui-thai/leelawadeeui-bold\", FontWeights.semibold);\n  }\n}\n/**\n * Reads the fontBaseUrl from window.FabricConfig.fontBaseUrl or falls back to a default.\n */\n\nfunction _getFontBaseUrl() {\n  var _a, _b, _c; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n  var fabricConfig = (_a = getWindow()) === null || _a === void 0 ? void 0 : _a.FabricConfig;\n  return _c = (_b = fabricConfig) === null || _b === void 0 ? void 0 : _b.fontBaseUrl, _c !== null && _c !== void 0 ? _c : DefaultBaseUrl;\n}\n/**\n * Register the font faces.\n */\n\n\nregisterDefaultFontFaces(_getFontBaseUrl());","map":{"version":3,"mappings":"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","names":["fontFace","FontWeights","LocalizedFontFamilies","LocalizedFontNames","createFontStyles","getLanguage","getWindow","DefaultBaseUrl","DefaultFontStyles","_registerFontFace","fontFamily","url","fontWeight","localFontName","localFontSrc","undefined","src","fontStyle","fontDisplay","_registerFontFaceSet","baseUrl","cdnFolder","cdnFontName","urlBase","light","semilight","regular","semibold","bold","registerDefaultFontFaces","fontUrl","Thai","Arabic","Cyrillic","EastEuropean","Greek","Hebrew","Vietnamese","WestEuropean","Selawik","Armenian","Georgian","_getFontBaseUrl","fabricConfig","_a","FabricConfig","_b","fontBaseUrl","_c"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\office-ui-fabric-react\\node_modules\\@fluentui\\theme\\lib\\src\\fonts\\DefaultFontStyles.ts"],"sourcesContent":["import { fontFace, IFontWeight } from '@uifabric/merge-styles';\nimport { FontWeights, LocalizedFontFamilies, LocalizedFontNames } from './FluentFonts';\nimport { createFontStyles } from './createFontStyles';\nimport { getLanguage, getWindow } from '@uifabric/utilities';\nimport { IFontStyles } from '../types/IFontStyles';\nimport { IFabricConfig } from '../types/IFabricConfig';\n\n// Default urls.\nconst DefaultBaseUrl = 'https://static2.sharepointonline.com/files/fabric/assets';\n\n// Standard font styling.\nexport const DefaultFontStyles: IFontStyles = createFontStyles(getLanguage('sessionStorage'));\n\nfunction _registerFontFace(fontFamily: string, url: string, fontWeight?: IFontWeight, localFontName?: string): void {\n  fontFamily = `'${fontFamily}'`;\n\n  const localFontSrc = localFontName !== undefined ? `local('${localFontName}'),` : '';\n\n  fontFace({\n    fontFamily,\n    src: localFontSrc + `url('${url}.woff2') format('woff2'),` + `url('${url}.woff') format('woff')`,\n    fontWeight,\n    fontStyle: 'normal',\n    fontDisplay: 'swap',\n  });\n}\n\nfunction _registerFontFaceSet(\n  baseUrl: string,\n  fontFamily: string,\n  cdnFolder: string,\n  cdnFontName: string = 'segoeui',\n  localFontName?: string,\n): void {\n  const urlBase = `${baseUrl}/${cdnFolder}/${cdnFontName}`;\n\n  _registerFontFace(fontFamily, urlBase + '-light', FontWeights.light, localFontName && localFontName + ' Light');\n  _registerFontFace(\n    fontFamily,\n    urlBase + '-semilight',\n    FontWeights.semilight,\n    localFontName && localFontName + ' SemiLight',\n  );\n  _registerFontFace(fontFamily, urlBase + '-regular', FontWeights.regular, localFontName);\n  _registerFontFace(\n    fontFamily,\n    urlBase + '-semibold',\n    FontWeights.semibold,\n    localFontName && localFontName + ' SemiBold',\n  );\n  _registerFontFace(fontFamily, urlBase + '-bold', FontWeights.bold, localFontName && localFontName + ' Bold');\n}\n\nexport function registerDefaultFontFaces(baseUrl: string): void {\n  if (baseUrl) {\n    const fontUrl = `${baseUrl}/fonts`;\n\n    // Produce @font-face definitions for all supported web fonts.\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.Thai, 'leelawadeeui-thai', 'leelawadeeui');\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.Arabic, 'segoeui-arabic');\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.Cyrillic, 'segoeui-cyrillic');\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.EastEuropean, 'segoeui-easteuropean');\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.Greek, 'segoeui-greek');\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.Hebrew, 'segoeui-hebrew');\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.Vietnamese, 'segoeui-vietnamese');\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.WestEuropean, 'segoeui-westeuropean', 'segoeui', 'Segoe UI');\n    _registerFontFaceSet(fontUrl, LocalizedFontFamilies.Selawik, 'selawik', 'selawik');\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.Armenian, 'segoeui-armenian');\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.Georgian, 'segoeui-georgian');\n\n    // Leelawadee UI (Thai) does not have a 'light' weight, so we override\n    // the font-face generated above to use the 'semilight' weight instead.\n    _registerFontFace('Leelawadee UI Web', `${fontUrl}/leelawadeeui-thai/leelawadeeui-semilight`, FontWeights.light);\n\n    // Leelawadee UI (Thai) does not have a 'semibold' weight, so we override\n    // the font-face generated above to use the 'bold' weight instead.\n    _registerFontFace('Leelawadee UI Web', `${fontUrl}/leelawadeeui-thai/leelawadeeui-bold`, FontWeights.semibold);\n  }\n}\n\n/**\n * Reads the fontBaseUrl from window.FabricConfig.fontBaseUrl or falls back to a default.\n */\nfunction _getFontBaseUrl(): string {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const fabricConfig: IFabricConfig | undefined = (getWindow() as any)?.FabricConfig;\n\n  return fabricConfig?.fontBaseUrl ?? DefaultBaseUrl;\n}\n\n/**\n * Register the font faces.\n */\nregisterDefaultFontFaces(_getFontBaseUrl());\n"]},"metadata":{},"sourceType":"module"}