{"ast":null,"code":"import { memoizeFunction } from '../../Utilities';\nimport { mergeStyles } from '../../Styling';\nexport var getClassNames = memoizeFunction(function (styles, className, isOpen, disabled, required, focused, allowFreeForm, hasErrorMessage) {\n  return {\n    container: mergeStyles('ms-ComboBox-container', className, styles.container),\n    label: mergeStyles(styles.label, disabled && styles.labelDisabled),\n    root: mergeStyles('ms-ComboBox', hasErrorMessage ? styles.rootError : isOpen && 'is-open', required && 'is-required', styles.root, !allowFreeForm && styles.rootDisallowFreeForm, hasErrorMessage && !focused ? styles.rootError : !disabled && focused && styles.rootFocused, !disabled && {\n      selectors: {\n        ':hover': hasErrorMessage ? styles.rootError : !isOpen && !focused && styles.rootHovered,\n        ':active': hasErrorMessage ? styles.rootError : styles.rootPressed,\n        ':focus': hasErrorMessage ? styles.rootError : styles.rootFocused\n      }\n    }, disabled && ['is-disabled', styles.rootDisabled]),\n    input: mergeStyles('ms-ComboBox-Input', styles.input, disabled && styles.inputDisabled),\n    errorMessage: mergeStyles(styles.errorMessage),\n    callout: mergeStyles('ms-ComboBox-callout', styles.callout),\n    optionsContainerWrapper: mergeStyles('ms-ComboBox-optionsContainerWrapper', styles.optionsContainerWrapper),\n    optionsContainer: mergeStyles('ms-ComboBox-optionsContainer', styles.optionsContainer),\n    header: mergeStyles('ms-ComboBox-header', styles.header),\n    divider: mergeStyles('ms-ComboBox-divider', styles.divider),\n    screenReaderText: mergeStyles(styles.screenReaderText)\n  };\n});\nexport var getComboBoxOptionClassNames = memoizeFunction(function (styles) {\n  return {\n    optionText: mergeStyles('ms-ComboBox-optionText', styles.optionText),\n    root: mergeStyles('ms-ComboBox-option', styles.root, {\n      selectors: {\n        ':hover': styles.rootHovered,\n        ':focus': styles.rootFocused,\n        ':active': styles.rootPressed\n      }\n    }),\n    optionTextWrapper: mergeStyles(styles.optionTextWrapper)\n  };\n});","map":{"version":3,"mappings":"AAMA,SAASA,eAAT,QAAgC,iBAAhC;AACA,SAASC,WAAT,QAA4B,eAA5B;AAEA,OAAO,IAAMC,aAAa,GAAGF,eAAe,CAC1C,UACEG,MADF,EAEEC,SAFF,EAGEC,MAHF,EAIEC,QAJF,EAKEC,QALF,EAMEC,OANF,EAOEC,aAPF,EAQEC,eARF,EAQ0B;EAExB,OAAO;IACLC,SAAS,EAAEV,WAAW,CAAC,uBAAD,EAA0BG,SAA1B,EAAqCD,MAAM,CAACQ,SAA5C,CADjB;IAELC,KAAK,EAAEX,WAAW,CAACE,MAAM,CAACS,KAAR,EAAeN,QAAQ,IAAIH,MAAM,CAACU,aAAlC,CAFb;IAGLC,IAAI,EAAEb,WAAW,CACf,aADe,EAEfS,eAAe,GAAGP,MAAM,CAACY,SAAV,GAAsBV,MAAM,IAAI,SAFhC,EAGfE,QAAQ,IAAI,aAHG,EAIfJ,MAAM,CAACW,IAJQ,EAKf,CAACL,aAAD,IAAkBN,MAAM,CAACa,oBALV,EAMfN,eAAe,IAAI,CAACF,OAApB,GAA8BL,MAAM,CAACY,SAArC,GAAiD,CAACT,QAAD,IAAaE,OAAb,IAAwBL,MAAM,CAACc,WANjE,EAOf,CAACX,QAAD,IAAa;MACXY,SAAS,EAAE;QACT,UAAUR,eAAe,GAAGP,MAAM,CAACY,SAAV,GAAsB,CAACV,MAAD,IAAW,CAACG,OAAZ,IAAuBL,MAAM,CAACgB,WADpE;QAET,WAAWT,eAAe,GAAGP,MAAM,CAACY,SAAV,GAAsBZ,MAAM,CAACiB,WAF9C;QAGT,UAAUV,eAAe,GAAGP,MAAM,CAACY,SAAV,GAAsBZ,MAAM,CAACc;MAH7C;IADA,CAPE,EAcfX,QAAQ,IAAI,CAAC,aAAD,EAAgBH,MAAM,CAACkB,YAAvB,CAdG,CAHZ;IAmBLC,KAAK,EAAErB,WAAW,CAAC,mBAAD,EAAsBE,MAAM,CAACmB,KAA7B,EAAoChB,QAAQ,IAAIH,MAAM,CAACoB,aAAvD,CAnBb;IAoBLC,YAAY,EAAEvB,WAAW,CAACE,MAAM,CAACqB,YAAR,CApBpB;IAqBLC,OAAO,EAAExB,WAAW,CAAC,qBAAD,EAAwBE,MAAM,CAACsB,OAA/B,CArBf;IAsBLC,uBAAuB,EAAEzB,WAAW,CAAC,qCAAD,EAAwCE,MAAM,CAACuB,uBAA/C,CAtB/B;IAuBLC,gBAAgB,EAAE1B,WAAW,CAAC,8BAAD,EAAiCE,MAAM,CAACwB,gBAAxC,CAvBxB;IAwBLC,MAAM,EAAE3B,WAAW,CAAC,oBAAD,EAAuBE,MAAM,CAACyB,MAA9B,CAxBd;IAyBLC,OAAO,EAAE5B,WAAW,CAAC,qBAAD,EAAwBE,MAAM,CAAC0B,OAA/B,CAzBf;IA0BLC,gBAAgB,EAAE7B,WAAW,CAACE,MAAM,CAAC2B,gBAAR;EA1BxB,CAAP;AA4BD,CAvCyC,CAArC;AA0CP,OAAO,IAAMC,2BAA2B,GAAG/B,eAAe,CACxD,UAACG,MAAD,EAAuC;EACrC,OAAO;IACL6B,UAAU,EAAE/B,WAAW,CAAC,wBAAD,EAA2BE,MAAM,CAAC6B,UAAlC,CADlB;IAELlB,IAAI,EAAEb,WAAW,CAAC,oBAAD,EAAuBE,MAAM,CAACW,IAA9B,EAAoC;MACnDI,SAAS,EAAE;QACT,UAAUf,MAAM,CAACgB,WADR;QAET,UAAUhB,MAAM,CAACc,WAFR;QAGT,WAAWd,MAAM,CAACiB;MAHT;IADwC,CAApC,CAFZ;IASLa,iBAAiB,EAAEhC,WAAW,CAACE,MAAM,CAAC8B,iBAAR;EATzB,CAAP;AAWD,CAbuD,CAAnD","names":["memoizeFunction","mergeStyles","getClassNames","styles","className","isOpen","disabled","required","focused","allowFreeForm","hasErrorMessage","container","label","labelDisabled","root","rootError","rootDisallowFreeForm","rootFocused","selectors","rootHovered","rootPressed","rootDisabled","input","inputDisabled","errorMessage","callout","optionsContainerWrapper","optionsContainer","header","divider","screenReaderText","getComboBoxOptionClassNames","optionText","optionTextWrapper"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\office-ui-fabric-react\\lib\\components\\src\\components\\ComboBox\\ComboBox.classNames.ts"],"sourcesContent":["import {\r\n  IComboBoxStyles,\r\n  IComboBoxOptionStyles,\r\n  IComboBoxClassNames,\r\n  IComboBoxOptionClassNames,\r\n} from './ComboBox.types';\r\nimport { memoizeFunction } from '../../Utilities';\r\nimport { mergeStyles } from '../../Styling';\r\n\r\nexport const getClassNames = memoizeFunction(\r\n  (\r\n    styles: Partial<IComboBoxStyles>,\r\n    className: string,\r\n    isOpen: boolean,\r\n    disabled: boolean,\r\n    required: boolean,\r\n    focused: boolean,\r\n    allowFreeForm: boolean,\r\n    hasErrorMessage: boolean,\r\n  ): IComboBoxClassNames => {\r\n    return {\r\n      container: mergeStyles('ms-ComboBox-container', className, styles.container),\r\n      label: mergeStyles(styles.label, disabled && styles.labelDisabled),\r\n      root: mergeStyles(\r\n        'ms-ComboBox',\r\n        hasErrorMessage ? styles.rootError : isOpen && 'is-open',\r\n        required && 'is-required',\r\n        styles.root,\r\n        !allowFreeForm && styles.rootDisallowFreeForm,\r\n        hasErrorMessage && !focused ? styles.rootError : !disabled && focused && styles.rootFocused,\r\n        !disabled && {\r\n          selectors: {\r\n            ':hover': hasErrorMessage ? styles.rootError : !isOpen && !focused && styles.rootHovered,\r\n            ':active': hasErrorMessage ? styles.rootError : styles.rootPressed,\r\n            ':focus': hasErrorMessage ? styles.rootError : styles.rootFocused,\r\n          },\r\n        },\r\n        disabled && ['is-disabled', styles.rootDisabled],\r\n      ),\r\n      input: mergeStyles('ms-ComboBox-Input', styles.input, disabled && styles.inputDisabled),\r\n      errorMessage: mergeStyles(styles.errorMessage),\r\n      callout: mergeStyles('ms-ComboBox-callout', styles.callout),\r\n      optionsContainerWrapper: mergeStyles('ms-ComboBox-optionsContainerWrapper', styles.optionsContainerWrapper),\r\n      optionsContainer: mergeStyles('ms-ComboBox-optionsContainer', styles.optionsContainer),\r\n      header: mergeStyles('ms-ComboBox-header', styles.header),\r\n      divider: mergeStyles('ms-ComboBox-divider', styles.divider),\r\n      screenReaderText: mergeStyles(styles.screenReaderText),\r\n    };\r\n  },\r\n);\r\n\r\nexport const getComboBoxOptionClassNames = memoizeFunction(\r\n  (styles: Partial<IComboBoxOptionStyles>): IComboBoxOptionClassNames => {\r\n    return {\r\n      optionText: mergeStyles('ms-ComboBox-optionText', styles.optionText),\r\n      root: mergeStyles('ms-ComboBox-option', styles.root, {\r\n        selectors: {\r\n          ':hover': styles.rootHovered,\r\n          ':focus': styles.rootFocused,\r\n          ':active': styles.rootPressed,\r\n        },\r\n      }),\r\n      optionTextWrapper: mergeStyles(styles.optionTextWrapper),\r\n    };\r\n  },\r\n);\r\n"]},"metadata":{},"sourceType":"module"}