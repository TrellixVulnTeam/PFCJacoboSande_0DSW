{"ast":null,"code":"import { __extends } from \"tslib\";\nimport * as React from 'react';\nimport { initializeComponentRef } from '../../../../Utilities';\nimport { ContextualMenu, DirectionalHint } from '../../../../ContextualMenu';\n\nvar SelectedItemWithContextMenu =\n/** @class */\nfunction (_super) {\n  __extends(SelectedItemWithContextMenu, _super);\n\n  function SelectedItemWithContextMenu(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.itemElement = React.createRef();\n\n    _this._onClick = function (ev) {\n      ev.preventDefault();\n\n      if (_this.props.beginEditing && !_this.props.item.isValid) {\n        _this.props.beginEditing(_this.props.item);\n      } else {\n        _this.setState({\n          contextualMenuVisible: true\n        });\n      }\n    };\n\n    _this._onCloseContextualMenu = function (ev) {\n      _this.setState({\n        contextualMenuVisible: false\n      });\n    };\n\n    initializeComponentRef(_this);\n    _this.state = {\n      contextualMenuVisible: false\n    };\n    return _this;\n  }\n\n  SelectedItemWithContextMenu.prototype.render = function () {\n    return React.createElement(\"div\", {\n      ref: this.itemElement,\n      onContextMenu: this._onClick\n    }, this.props.renderedItem, this.state.contextualMenuVisible ? React.createElement(ContextualMenu, {\n      items: this.props.menuItems,\n      shouldFocusOnMount: true,\n      target: this.itemElement.current,\n      onDismiss: this._onCloseContextualMenu,\n      directionalHint: DirectionalHint.bottomLeftEdge\n    }) : null);\n  };\n\n  return SelectedItemWithContextMenu;\n}(React.Component);\n\nexport { SelectedItemWithContextMenu };","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,sBAAT,QAAmD,uBAAnD;AAEA,SAASC,cAAT,EAAyBC,eAAzB,QAAqE,4BAArE;;AAaA;AAAA;AAAA;EAAiDC;;EAM/C,qCAAYC,KAAZ,EAAoD;IAApD,YACEC,kBAAMD,KAAN,KAAY,IADd;;IAFUE,oBAA+CP,KAAK,CAACQ,SAAN,EAA/C;;IA0BFD,iBAAW,UAACE,EAAD,EAAkC;MACnDA,EAAE,CAACC,cAAH;;MACA,IAAIH,KAAI,CAACF,KAAL,CAAWM,YAAX,IAA2B,CAACJ,KAAI,CAACF,KAAL,CAAWO,IAAX,CAAgBC,OAAhD,EAAyD;QACvDN,KAAI,CAACF,KAAL,CAAWM,YAAX,CAAwBJ,KAAI,CAACF,KAAL,CAAWO,IAAnC;MACD,CAFD,MAEO;QACLL,KAAI,CAACO,QAAL,CAAc;UAAEC,qBAAqB,EAAE;QAAzB,CAAd;MACD;IACF,CAPO;;IASAR,+BAAyB,UAACE,EAAD,EAA2C;MAC1EF,KAAI,CAACO,QAAL,CAAc;QAAEC,qBAAqB,EAAE;MAAzB,CAAd;IACD,CAFO;;IA9BNd,sBAAsB,CAACM,KAAD,CAAtB;IACAA,KAAI,CAACS,KAAL,GAAa;MAAED,qBAAqB,EAAE;IAAzB,CAAb;;EACD;;EAEME,+CAAP;IACE,OACEjB;MAAKkB,GAAG,EAAE,KAAKC,WAAf;MAA4BC,aAAa,EAAE,KAAKC;IAAhD,GACG,KAAKhB,KAAL,CAAWiB,YADd,EAEG,KAAKN,KAAL,CAAWD,qBAAX,GACCf,oBAACE,cAAD,EAAe;MACbqB,KAAK,EAAE,KAAKlB,KAAL,CAAWmB,SADL;MAEbC,kBAAkB,EAAE,IAFP;MAGbC,MAAM,EAAE,KAAKP,WAAL,CAAiBQ,OAHZ;MAIbC,SAAS,EAAE,KAAKC,sBAJH;MAKbC,eAAe,EAAE3B,eAAe,CAAC4B;IALpB,CAAf,CADD,GAQG,IAVN,CADF;EAcD,CAfM;;EA6BT;AAAC,CA1CD,CAAiD/B,KAAK,CAACgC,SAAvD","names":["React","initializeComponentRef","ContextualMenu","DirectionalHint","__extends","props","_super","_this","createRef","ev","preventDefault","beginEditing","item","isValid","setState","contextualMenuVisible","state","SelectedItemWithContextMenu","ref","itemElement","onContextMenu","_onClick","renderedItem","items","menuItems","shouldFocusOnMount","target","current","onDismiss","_onCloseContextualMenu","directionalHint","bottomLeftEdge","Component"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\office-ui-fabric-react\\lib\\components\\SelectedItemsList\\SelectedPeopleList\\src\\components\\SelectedItemsList\\SelectedPeopleList\\Items\\SelectedItemWithContextMenu.tsx"],"sourcesContent":["import * as React from 'react';\nimport { initializeComponentRef, IBaseProps } from '../../../../Utilities';\nimport { IExtendedPersonaProps } from '../SelectedPeopleList';\nimport { ContextualMenu, DirectionalHint, IContextualMenuItem } from '../../../../ContextualMenu';\n\nexport interface IPeoplePickerItemState {\n  contextualMenuVisible: boolean;\n}\n\nexport interface ISelectedItemWithContextMenuProps extends IBaseProps {\n  renderedItem: JSX.Element;\n  beginEditing?: (item: IExtendedPersonaProps) => void;\n  menuItems: IContextualMenuItem[];\n  item: IExtendedPersonaProps;\n}\n\nexport class SelectedItemWithContextMenu extends React.Component<\n  ISelectedItemWithContextMenuProps,\n  IPeoplePickerItemState\n> {\n  protected itemElement: React.RefObject<HTMLDivElement> = React.createRef<HTMLDivElement>();\n\n  constructor(props: ISelectedItemWithContextMenuProps) {\n    super(props);\n\n    initializeComponentRef(this);\n    this.state = { contextualMenuVisible: false };\n  }\n\n  public render(): JSX.Element {\n    return (\n      <div ref={this.itemElement} onContextMenu={this._onClick}>\n        {this.props.renderedItem}\n        {this.state.contextualMenuVisible ? (\n          <ContextualMenu\n            items={this.props.menuItems}\n            shouldFocusOnMount={true}\n            target={this.itemElement.current}\n            onDismiss={this._onCloseContextualMenu}\n            directionalHint={DirectionalHint.bottomLeftEdge}\n          />\n        ) : null}\n      </div>\n    );\n  }\n\n  private _onClick = (ev: React.MouseEvent<HTMLElement>): void => {\n    ev.preventDefault();\n    if (this.props.beginEditing && !this.props.item.isValid) {\n      this.props.beginEditing(this.props.item);\n    } else {\n      this.setState({ contextualMenuVisible: true });\n    }\n  };\n\n  private _onCloseContextualMenu = (ev: React.MouseEvent | React.KeyboardEvent): void => {\n    this.setState({ contextualMenuVisible: false });\n  };\n}\n"]},"metadata":{},"sourceType":"module"}