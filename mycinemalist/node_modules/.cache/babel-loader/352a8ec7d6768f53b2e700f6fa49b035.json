{"ast":null,"code":"import { PersonaInitialsColor } from './Persona.types';\n/**\n * Following colors are considered reserved and can only be set with overrides, so they are excluded from this set:\n * - `gray` and `black` can result in offensive persona coins with some initials combinations\n * - `red` often has a special meaning\n * - `transparent` is not intended to be used with typical initials due to accessibility issues;\n *   its primary use is for Facepile overflow buttons.\n */\n\nvar COLOR_SWATCHES_LOOKUP = [PersonaInitialsColor.lightBlue, PersonaInitialsColor.blue, PersonaInitialsColor.darkBlue, PersonaInitialsColor.teal, PersonaInitialsColor.green, PersonaInitialsColor.darkGreen, PersonaInitialsColor.lightPink, PersonaInitialsColor.pink, PersonaInitialsColor.magenta, PersonaInitialsColor.purple, PersonaInitialsColor.orange, PersonaInitialsColor.lightRed, PersonaInitialsColor.darkRed, PersonaInitialsColor.violet, PersonaInitialsColor.gold, PersonaInitialsColor.burgundy, PersonaInitialsColor.warmGray, PersonaInitialsColor.cyan, PersonaInitialsColor.rust, PersonaInitialsColor.coolGray];\nvar COLOR_SWATCHES_NUM_ENTRIES = COLOR_SWATCHES_LOOKUP.length;\n\nfunction getInitialsColorFromName(displayName) {\n  var color = PersonaInitialsColor.blue;\n\n  if (!displayName) {\n    return color;\n  }\n\n  var hashCode = 0;\n\n  for (var iLen = displayName.length - 1; iLen >= 0; iLen--) {\n    var ch = displayName.charCodeAt(iLen);\n    var shift = iLen % 8; // eslint-disable-next-line no-bitwise\n\n    hashCode ^= (ch << shift) + (ch >> 8 - shift);\n  }\n\n  color = COLOR_SWATCHES_LOOKUP[hashCode % COLOR_SWATCHES_NUM_ENTRIES];\n  return color;\n}\n\nfunction personaInitialsColorToHexCode(personaInitialsColor) {\n  switch (personaInitialsColor) {\n    case PersonaInitialsColor.lightBlue:\n      return '#4F6BED';\n\n    case PersonaInitialsColor.blue:\n      return '#0078D4';\n\n    case PersonaInitialsColor.darkBlue:\n      return '#004E8C';\n\n    case PersonaInitialsColor.teal:\n      return '#038387';\n\n    case PersonaInitialsColor.lightGreen:\n    case PersonaInitialsColor.green:\n      return '#498205';\n\n    case PersonaInitialsColor.darkGreen:\n      return '#0B6A0B';\n\n    case PersonaInitialsColor.lightPink:\n      return '#C239B3';\n\n    case PersonaInitialsColor.pink:\n      return '#E3008C';\n\n    case PersonaInitialsColor.magenta:\n      return '#881798';\n\n    case PersonaInitialsColor.purple:\n      return '#5C2E91';\n\n    case PersonaInitialsColor.orange:\n      return '#CA5010';\n    // eslint-disable-next-line deprecation/deprecation\n\n    case PersonaInitialsColor.red:\n      return '#EE1111';\n\n    case PersonaInitialsColor.lightRed:\n      return '#D13438';\n\n    case PersonaInitialsColor.darkRed:\n      return '#A4262C';\n\n    case PersonaInitialsColor.transparent:\n      return 'transparent';\n\n    case PersonaInitialsColor.violet:\n      return '#8764B8';\n\n    case PersonaInitialsColor.gold:\n      return '#986F0B';\n\n    case PersonaInitialsColor.burgundy:\n      return '#750B1C';\n\n    case PersonaInitialsColor.warmGray:\n      return '#7A7574';\n\n    case PersonaInitialsColor.cyan:\n      return '#005B70';\n\n    case PersonaInitialsColor.rust:\n      return '#8E562E';\n\n    case PersonaInitialsColor.coolGray:\n      return '#69797E';\n    // eslint-disable-next-line deprecation/deprecation\n\n    case PersonaInitialsColor.black:\n      return '#1D1D1D';\n\n    case PersonaInitialsColor.gray:\n      return '#393939';\n  }\n}\n/** @deprecated Use `getPersonaInitialsColor` */\n\n\nexport function initialsColorPropToColorCode(props) {\n  return getPersonaInitialsColor(props);\n}\n/**\n * Gets the hex color string (prefixed with #) for the given persona props.\n * This is the logic used internally by the Persona control.\n * @param props - Current persona props\n * @returns Hex color string prefixed with #\n */\n\nexport function getPersonaInitialsColor(props) {\n  // eslint-disable-next-line deprecation/deprecation\n  var primaryText = props.primaryText,\n      text = props.text;\n  var initialsColor = props.initialsColor;\n  var initialsColorCode;\n\n  if (typeof initialsColor === 'string') {\n    initialsColorCode = initialsColor;\n  } else {\n    initialsColor = initialsColor !== undefined ? initialsColor : getInitialsColorFromName(text || primaryText);\n    initialsColorCode = personaInitialsColorToHexCode(initialsColor);\n  }\n\n  return initialsColorCode;\n}","map":{"version":3,"mappings":"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","names":["PersonaInitialsColor","COLOR_SWATCHES_LOOKUP","lightBlue","blue","darkBlue","teal","green","darkGreen","lightPink","pink","magenta","purple","orange","lightRed","darkRed","violet","gold","burgundy","warmGray","cyan","rust","coolGray","COLOR_SWATCHES_NUM_ENTRIES","length","getInitialsColorFromName","displayName","color","hashCode","iLen","ch","charCodeAt","shift","personaInitialsColorToHexCode","personaInitialsColor","lightGreen","red","transparent","black","gray","initialsColorPropToColorCode","props","getPersonaInitialsColor","text","initialsColorCode","initialsColor","undefined","primaryText"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\office-ui-fabric-react\\lib\\components\\src\\components\\Persona\\PersonaInitialsColor.ts"],"sourcesContent":["import { PersonaInitialsColor, IPersonaProps } from './Persona.types';\n\n/**\n * Following colors are considered reserved and can only be set with overrides, so they are excluded from this set:\n * - `gray` and `black` can result in offensive persona coins with some initials combinations\n * - `red` often has a special meaning\n * - `transparent` is not intended to be used with typical initials due to accessibility issues;\n *   its primary use is for Facepile overflow buttons.\n */\nconst COLOR_SWATCHES_LOOKUP: PersonaInitialsColor[] = [\n  PersonaInitialsColor.lightBlue,\n  PersonaInitialsColor.blue,\n  PersonaInitialsColor.darkBlue,\n  PersonaInitialsColor.teal,\n  PersonaInitialsColor.green,\n  PersonaInitialsColor.darkGreen,\n  PersonaInitialsColor.lightPink,\n  PersonaInitialsColor.pink,\n  PersonaInitialsColor.magenta,\n  PersonaInitialsColor.purple,\n  PersonaInitialsColor.orange,\n  PersonaInitialsColor.lightRed,\n  PersonaInitialsColor.darkRed,\n  PersonaInitialsColor.violet,\n  PersonaInitialsColor.gold,\n  PersonaInitialsColor.burgundy,\n  PersonaInitialsColor.warmGray,\n  PersonaInitialsColor.cyan,\n  PersonaInitialsColor.rust,\n  PersonaInitialsColor.coolGray,\n];\n\nconst COLOR_SWATCHES_NUM_ENTRIES = COLOR_SWATCHES_LOOKUP.length;\n\nfunction getInitialsColorFromName(displayName: string | undefined): PersonaInitialsColor {\n  let color = PersonaInitialsColor.blue;\n  if (!displayName) {\n    return color;\n  }\n\n  let hashCode = 0;\n  for (let iLen: number = displayName.length - 1; iLen >= 0; iLen--) {\n    const ch: number = displayName.charCodeAt(iLen);\n    const shift: number = iLen % 8;\n    // eslint-disable-next-line no-bitwise\n    hashCode ^= (ch << shift) + (ch >> (8 - shift));\n  }\n\n  color = COLOR_SWATCHES_LOOKUP[hashCode % COLOR_SWATCHES_NUM_ENTRIES];\n\n  return color;\n}\n\nfunction personaInitialsColorToHexCode(personaInitialsColor: PersonaInitialsColor): string {\n  switch (personaInitialsColor) {\n    case PersonaInitialsColor.lightBlue:\n      return '#4F6BED';\n    case PersonaInitialsColor.blue:\n      return '#0078D4';\n    case PersonaInitialsColor.darkBlue:\n      return '#004E8C';\n    case PersonaInitialsColor.teal:\n      return '#038387';\n    case PersonaInitialsColor.lightGreen:\n    case PersonaInitialsColor.green:\n      return '#498205';\n    case PersonaInitialsColor.darkGreen:\n      return '#0B6A0B';\n    case PersonaInitialsColor.lightPink:\n      return '#C239B3';\n    case PersonaInitialsColor.pink:\n      return '#E3008C';\n    case PersonaInitialsColor.magenta:\n      return '#881798';\n    case PersonaInitialsColor.purple:\n      return '#5C2E91';\n    case PersonaInitialsColor.orange:\n      return '#CA5010';\n    // eslint-disable-next-line deprecation/deprecation\n    case PersonaInitialsColor.red:\n      return '#EE1111';\n    case PersonaInitialsColor.lightRed:\n      return '#D13438';\n    case PersonaInitialsColor.darkRed:\n      return '#A4262C';\n    case PersonaInitialsColor.transparent:\n      return 'transparent';\n    case PersonaInitialsColor.violet:\n      return '#8764B8';\n    case PersonaInitialsColor.gold:\n      return '#986F0B';\n    case PersonaInitialsColor.burgundy:\n      return '#750B1C';\n    case PersonaInitialsColor.warmGray:\n      return '#7A7574';\n    case PersonaInitialsColor.cyan:\n      return '#005B70';\n    case PersonaInitialsColor.rust:\n      return '#8E562E';\n    case PersonaInitialsColor.coolGray:\n      return '#69797E';\n    // eslint-disable-next-line deprecation/deprecation\n    case PersonaInitialsColor.black:\n      return '#1D1D1D';\n    case PersonaInitialsColor.gray:\n      return '#393939';\n  }\n}\n\n/** @deprecated Use `getPersonaInitialsColor` */\nexport function initialsColorPropToColorCode(props: IPersonaProps): string {\n  return getPersonaInitialsColor(props);\n}\n\n/**\n * Gets the hex color string (prefixed with #) for the given persona props.\n * This is the logic used internally by the Persona control.\n * @param props - Current persona props\n * @returns Hex color string prefixed with #\n */\nexport function getPersonaInitialsColor(props: Pick<IPersonaProps, 'primaryText' | 'text' | 'initialsColor'>): string {\n  // eslint-disable-next-line deprecation/deprecation\n  const { primaryText, text } = props;\n  let { initialsColor } = props;\n  let initialsColorCode: string;\n  if (typeof initialsColor === 'string') {\n    initialsColorCode = initialsColor;\n  } else {\n    initialsColor = initialsColor !== undefined ? initialsColor : getInitialsColorFromName(text || primaryText);\n    initialsColorCode = personaInitialsColorToHexCode(initialsColor);\n  }\n\n  return initialsColorCode;\n}\n"]},"metadata":{},"sourceType":"module"}