{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { KeyCodes, css, getId, getRTL, getRTLSafeKeyCode, warnMutuallyExclusive, initializeComponentRef, Async, on, FocusRects } from '../../Utilities';\nimport { classNamesFunction, getNativeProps, divProperties } from '../../Utilities';\nimport { Label } from '../../Label';\nvar getClassNames = classNamesFunction();\nvar COMPONENT_NAME = 'SliderBase';\nexport var ONKEYDOWN_TIMEOUT_DURATION = 1000;\n\nvar SliderBase =\n/** @class */\nfunction (_super) {\n  __extends(SliderBase, _super);\n\n  function SliderBase(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this._disposables = [];\n    _this._sliderLine = React.createRef();\n    _this._thumb = React.createRef();\n    _this._onKeyDownTimer = -1;\n\n    _this._getAriaValueText = function (value) {\n      var ariaValueText = _this.props.ariaValueText;\n\n      if (value !== undefined) {\n        return ariaValueText ? ariaValueText(value) : value.toString();\n      }\n\n      return undefined;\n    };\n\n    _this._onMouseDownOrTouchStart = function (event) {\n      if (event.type === 'mousedown') {\n        _this._disposables.push(on(window, 'mousemove', _this._onMouseMoveOrTouchMove, true), on(window, 'mouseup', _this._onMouseUpOrTouchEnd, true));\n      } else if (event.type === 'touchstart') {\n        _this._disposables.push(on(window, 'touchmove', _this._onMouseMoveOrTouchMove, true), on(window, 'touchend', _this._onMouseUpOrTouchEnd, true));\n      }\n\n      _this._onMouseMoveOrTouchMove(event, true);\n    };\n\n    _this._onMouseMoveOrTouchMove = function (event, suppressEventCancelation) {\n      if (!_this._sliderLine.current) {\n        return;\n      }\n\n      var _a = _this.props,\n          max = _a.max,\n          min = _a.min,\n          step = _a.step;\n      var steps = (max - min) / step;\n\n      var sliderPositionRect = _this._sliderLine.current.getBoundingClientRect();\n\n      var sliderLength = !_this.props.vertical ? sliderPositionRect.width : sliderPositionRect.height;\n      var stepLength = sliderLength / steps;\n      var currentSteps;\n      var distance;\n\n      if (!_this.props.vertical) {\n        var left = _this._getPosition(event, _this.props.vertical);\n\n        distance = getRTL(_this.props.theme) ? sliderPositionRect.right - left : left - sliderPositionRect.left;\n        currentSteps = distance / stepLength;\n      } else {\n        var bottom = _this._getPosition(event, _this.props.vertical);\n\n        distance = sliderPositionRect.bottom - bottom;\n        currentSteps = distance / stepLength;\n      }\n\n      var currentValue;\n      var renderedValue; // The value shouldn't be bigger than max or be smaller than min.\n\n      if (currentSteps > Math.floor(steps)) {\n        renderedValue = currentValue = max;\n      } else if (currentSteps < 0) {\n        renderedValue = currentValue = min;\n      } else {\n        renderedValue = min + step * currentSteps;\n        currentValue = min + step * Math.round(currentSteps);\n      }\n\n      _this._updateValue(currentValue, renderedValue);\n\n      if (!suppressEventCancelation) {\n        event.preventDefault();\n        event.stopPropagation();\n      }\n    };\n\n    _this._onMouseUpOrTouchEnd = function (event) {\n      // Disable renderedValue override.\n      _this.setState({\n        renderedValue: undefined\n      });\n\n      if (_this.props.onChanged) {\n        _this.props.onChanged(event, _this.state.value);\n      }\n\n      _this._disposeListeners();\n    };\n\n    _this._disposeListeners = function () {\n      _this._disposables.forEach(function (dispose) {\n        return dispose();\n      });\n\n      _this._disposables = [];\n    };\n\n    _this._onKeyDown = function (event) {\n      var value = _this.state.value;\n      var _a = _this.props,\n          max = _a.max,\n          min = _a.min,\n          step = _a.step;\n      var diff = 0; // eslint-disable-next-line deprecation/deprecation\n\n      switch (event.which) {\n        case getRTLSafeKeyCode(KeyCodes.left, _this.props.theme):\n        case KeyCodes.down:\n          diff = -step;\n\n          _this._clearOnKeyDownTimer();\n\n          _this._setOnKeyDownTimer(event);\n\n          break;\n\n        case getRTLSafeKeyCode(KeyCodes.right, _this.props.theme):\n        case KeyCodes.up:\n          diff = step;\n\n          _this._clearOnKeyDownTimer();\n\n          _this._setOnKeyDownTimer(event);\n\n          break;\n\n        case KeyCodes.home:\n          value = min;\n          break;\n\n        case KeyCodes.end:\n          value = max;\n          break;\n\n        default:\n          return;\n      }\n\n      var newValue = Math.min(max, Math.max(min, value + diff));\n\n      _this._updateValue(newValue, newValue);\n\n      event.preventDefault();\n      event.stopPropagation();\n    };\n\n    _this._clearOnKeyDownTimer = function () {\n      _this._async.clearTimeout(_this._onKeyDownTimer);\n    };\n\n    _this._setOnKeyDownTimer = function (event) {\n      _this._onKeyDownTimer = _this._async.setTimeout(function () {\n        if (_this.props.onChanged) {\n          _this.props.onChanged(event, _this.state.value);\n        }\n      }, ONKEYDOWN_TIMEOUT_DURATION);\n    };\n\n    _this._async = new Async(_this);\n    initializeComponentRef(_this);\n    warnMutuallyExclusive(COMPONENT_NAME, _this.props, {\n      value: 'defaultValue'\n    });\n    _this._id = getId('Slider');\n    var value = props.value !== undefined ? props.value : props.defaultValue !== undefined ? props.defaultValue : props.min;\n    _this.state = {\n      value: value,\n      renderedValue: undefined\n    };\n    return _this;\n  }\n\n  SliderBase.prototype.componentWillUnmount = function () {\n    this._async.dispose();\n\n    this._disposeListeners();\n  };\n\n  SliderBase.prototype.render = function () {\n    var _a, _b, _c, _d, _e;\n\n    var _f = this.props,\n        ariaLabel = _f.ariaLabel,\n        className = _f.className,\n        disabled = _f.disabled,\n        label = _f.label,\n        max = _f.max,\n        min = _f.min,\n        showValue = _f.showValue,\n        buttonProps = _f.buttonProps,\n        vertical = _f.vertical,\n        valueFormat = _f.valueFormat,\n        styles = _f.styles,\n        theme = _f.theme,\n        originFromZero = _f.originFromZero;\n    var value = this.value;\n    var renderedValue = this.renderedValue;\n    var thumbOffsetPercent = min === max ? 0 : (renderedValue - min) / (max - min) * 100;\n    var zeroOffsetPercent = min >= 0 ? 0 : -min / (max - min) * 100;\n    var lengthString = vertical ? 'height' : 'width';\n    var onMouseDownProp = disabled ? {} : {\n      onMouseDown: this._onMouseDownOrTouchStart\n    };\n    var onTouchStartProp = disabled ? {} : {\n      onTouchStart: this._onMouseDownOrTouchStart\n    };\n    var onKeyDownProp = disabled ? {} : {\n      onKeyDown: this._onKeyDown\n    };\n    var classNames = getClassNames(styles, {\n      className: className,\n      disabled: disabled,\n      vertical: vertical,\n      showTransitions: renderedValue === value,\n      showValue: showValue,\n      theme: theme\n    });\n    var divButtonProps = buttonProps ? getNativeProps(buttonProps, divProperties) : undefined;\n    return React.createElement(\"div\", {\n      className: classNames.root\n    }, label && React.createElement(Label, __assign({\n      className: classNames.titleLabel\n    }, ariaLabel ? {} : {\n      htmlFor: this._id\n    }, {\n      disabled: disabled\n    }), label), React.createElement(\"div\", {\n      className: classNames.container\n    }, React.createElement(\"div\", __assign({\n      id: this._id,\n      \"aria-valuenow\": value,\n      \"aria-valuemin\": min,\n      \"aria-valuemax\": max,\n      \"aria-valuetext\": this._getAriaValueText(value),\n      \"aria-label\": ariaLabel || label,\n      \"aria-disabled\": disabled\n    }, onMouseDownProp, onTouchStartProp, onKeyDownProp, divButtonProps, {\n      className: css(classNames.slideBox, buttonProps.className),\n      role: \"slider\",\n      tabIndex: disabled ? undefined : 0,\n      \"data-is-focusable\": !disabled\n    }), React.createElement(\"div\", {\n      ref: this._sliderLine,\n      className: classNames.line\n    }, originFromZero && React.createElement(\"span\", {\n      className: css(classNames.zeroTick),\n      style: this._getStyleUsingOffsetPercent(vertical, zeroOffsetPercent)\n    }), React.createElement(\"span\", {\n      ref: this._thumb,\n      className: classNames.thumb,\n      style: this._getStyleUsingOffsetPercent(vertical, thumbOffsetPercent)\n    }), originFromZero ? React.createElement(React.Fragment, null, React.createElement(\"span\", {\n      className: css(classNames.lineContainer, classNames.inactiveSection),\n      style: (_a = {}, _a[lengthString] = Math.min(thumbOffsetPercent, zeroOffsetPercent) + '%', _a)\n    }), React.createElement(\"span\", {\n      className: css(classNames.lineContainer, classNames.activeSection),\n      style: (_b = {}, _b[lengthString] = Math.abs(zeroOffsetPercent - thumbOffsetPercent) + '%', _b)\n    }), React.createElement(\"span\", {\n      className: css(classNames.lineContainer, classNames.inactiveSection),\n      style: (_c = {}, _c[lengthString] = Math.min(100 - thumbOffsetPercent, 100 - zeroOffsetPercent) + '%', _c)\n    })) : React.createElement(React.Fragment, null, React.createElement(\"span\", {\n      className: css(classNames.lineContainer, classNames.activeSection),\n      style: (_d = {}, _d[lengthString] = thumbOffsetPercent + '%', _d)\n    }), React.createElement(\"span\", {\n      className: css(classNames.lineContainer, classNames.inactiveSection),\n      style: (_e = {}, _e[lengthString] = 100 - thumbOffsetPercent + '%', _e)\n    })))), showValue && React.createElement(Label, {\n      className: classNames.valueLabel,\n      disabled: disabled\n    }, valueFormat ? valueFormat(value) : value)), React.createElement(FocusRects, null));\n  };\n\n  SliderBase.prototype.focus = function () {\n    if (this._thumb.current) {\n      this._thumb.current.focus();\n    }\n  };\n\n  Object.defineProperty(SliderBase.prototype, \"value\", {\n    get: function () {\n      var _a = this.props.value,\n          value = _a === void 0 ? this.state.value : _a;\n\n      if (this.props.min === undefined || this.props.max === undefined || value === undefined) {\n        return undefined;\n      } else {\n        return Math.max(this.props.min, Math.min(this.props.max, value));\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(SliderBase.prototype, \"renderedValue\", {\n    get: function () {\n      // renderedValue is expected to be defined while user is interacting with control, otherwise `undefined`.\n      // Fall back to `value`.\n      var _a = this.state.renderedValue,\n          renderedValue = _a === void 0 ? this.value : _a;\n      return renderedValue;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  SliderBase.prototype._getStyleUsingOffsetPercent = function (vertical, thumbOffsetPercent) {\n    var _a;\n\n    var direction = vertical ? 'bottom' : getRTL(this.props.theme) ? 'right' : 'left';\n    return _a = {}, _a[direction] = thumbOffsetPercent + '%', _a;\n  };\n\n  SliderBase.prototype._getPosition = function (event, vertical) {\n    var currentPosition;\n\n    switch (event.type) {\n      case 'mousedown':\n      case 'mousemove':\n        currentPosition = !vertical ? event.clientX : event.clientY;\n        break;\n\n      case 'touchstart':\n      case 'touchmove':\n        currentPosition = !vertical ? event.touches[0].clientX : event.touches[0].clientY;\n        break;\n    }\n\n    return currentPosition;\n  };\n\n  SliderBase.prototype._updateValue = function (value, renderedValue) {\n    var _this = this;\n\n    var _a = this.props,\n        step = _a.step,\n        snapToStep = _a.snapToStep;\n    var numDec = 0;\n\n    if (isFinite(step)) {\n      while (Math.round(step * Math.pow(10, numDec)) / Math.pow(10, numDec) !== step) {\n        numDec++;\n      }\n    } // Make sure value has correct number of decimal places based on number of decimals in step\n\n\n    var roundedValue = parseFloat(value.toFixed(numDec));\n    var valueChanged = roundedValue !== this.state.value;\n\n    if (snapToStep) {\n      renderedValue = roundedValue;\n    }\n\n    this.setState({\n      value: roundedValue,\n      renderedValue: renderedValue\n    }, function () {\n      if (valueChanged && _this.props.onChange) {\n        _this.props.onChange(_this.state.value);\n      }\n    });\n  };\n\n  SliderBase.defaultProps = {\n    step: 1,\n    min: 0,\n    max: 10,\n    showValue: true,\n    disabled: false,\n    vertical: false,\n    buttonProps: {},\n    originFromZero: false\n  };\n  return SliderBase;\n}(React.Component);\n\nexport { SliderBase };","map":{"version":3,"mappings":"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","names":["React","KeyCodes","css","getId","getRTL","getRTLSafeKeyCode","warnMutuallyExclusive","initializeComponentRef","Async","on","FocusRects","classNamesFunction","getNativeProps","divProperties","Label","getClassNames","COMPONENT_NAME","ONKEYDOWN_TIMEOUT_DURATION","__extends","props","_super","_this","createRef","value","undefined","ariaValueText","toString","event","type","_disposables","push","window","_onMouseMoveOrTouchMove","_onMouseUpOrTouchEnd","suppressEventCancelation","_sliderLine","current","max","min","step","steps","sliderPositionRect","getBoundingClientRect","sliderLength","vertical","width","height","stepLength","currentSteps","distance","left","_getPosition","theme","right","bottom","currentValue","renderedValue","Math","floor","round","_updateValue","preventDefault","stopPropagation","setState","onChanged","state","_disposeListeners","forEach","diff","which","down","_clearOnKeyDownTimer","_setOnKeyDownTimer","up","home","end","newValue","_async","clearTimeout","_onKeyDownTimer","setTimeout","_id","defaultValue","SliderBase","dispose","ariaLabel","className","disabled","label","showValue","buttonProps","valueFormat","styles","originFromZero","thumbOffsetPercent","zeroOffsetPercent","lengthString","onMouseDownProp","onMouseDown","_onMouseDownOrTouchStart","onTouchStartProp","onTouchStart","onKeyDownProp","onKeyDown","_onKeyDown","classNames","showTransitions","divButtonProps","root","__assign","titleLabel","htmlFor","container","id","_getAriaValueText","slideBox","role","tabIndex","ref","line","zeroTick","style","_getStyleUsingOffsetPercent","_thumb","thumb","lineContainer","inactiveSection","_a","activeSection","_b","abs","_c","_d","_e","valueLabel","focus","Object","direction","currentPosition","clientX","clientY","touches","snapToStep","numDec","isFinite","pow","roundedValue","parseFloat","toFixed","valueChanged","onChange","Component"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\office-ui-fabric-react\\lib\\components\\src\\components\\Slider\\Slider.base.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  KeyCodes,\n  css,\n  getId,\n  getRTL,\n  getRTLSafeKeyCode,\n  warnMutuallyExclusive,\n  initializeComponentRef,\n  Async,\n  on,\n  FocusRects,\n} from '../../Utilities';\nimport { ISliderProps, ISlider, ISliderStyleProps, ISliderStyles } from './Slider.types';\nimport { classNamesFunction, getNativeProps, divProperties } from '../../Utilities';\nimport { Label } from '../../Label';\n\nexport interface ISliderState {\n  value?: number;\n  renderedValue?: number;\n}\n\nconst getClassNames = classNamesFunction<ISliderStyleProps, ISliderStyles>();\nconst COMPONENT_NAME = 'SliderBase';\nexport const ONKEYDOWN_TIMEOUT_DURATION = 1000;\n\nexport class SliderBase extends React.Component<ISliderProps, ISliderState> implements ISlider {\n  public static defaultProps: ISliderProps = {\n    step: 1,\n    min: 0,\n    max: 10,\n    showValue: true,\n    disabled: false,\n    vertical: false,\n    buttonProps: {},\n    originFromZero: false,\n  };\n\n  private _async: Async;\n  private _disposables: (() => void)[] = [];\n  private _sliderLine = React.createRef<HTMLDivElement>();\n  private _thumb = React.createRef<HTMLSpanElement>();\n  private _id: string;\n  private _onKeyDownTimer = -1;\n\n  constructor(props: ISliderProps) {\n    super(props);\n\n    this._async = new Async(this);\n    initializeComponentRef(this);\n\n    warnMutuallyExclusive(COMPONENT_NAME, this.props, {\n      value: 'defaultValue',\n    });\n\n    this._id = getId('Slider');\n\n    const value =\n      props.value !== undefined ? props.value : props.defaultValue !== undefined ? props.defaultValue : props.min;\n\n    this.state = {\n      value: value,\n      renderedValue: undefined,\n    };\n  }\n\n  public componentWillUnmount() {\n    this._async.dispose();\n    this._disposeListeners();\n  }\n\n  public render(): React.ReactElement<{}> {\n    const {\n      ariaLabel,\n      className,\n      disabled,\n      label,\n      max,\n      min,\n      showValue,\n      buttonProps,\n      vertical,\n      valueFormat,\n      styles,\n      theme,\n      originFromZero,\n    } = this.props;\n    const value = this.value;\n    const renderedValue = this.renderedValue;\n    const thumbOffsetPercent: number = min === max ? 0 : ((renderedValue! - min!) / (max! - min!)) * 100;\n    const zeroOffsetPercent: number = min! >= 0 ? 0 : (-min! / (max! - min!)) * 100;\n    const lengthString = vertical ? 'height' : 'width';\n    const onMouseDownProp: {} = disabled ? {} : { onMouseDown: this._onMouseDownOrTouchStart };\n    const onTouchStartProp: {} = disabled ? {} : { onTouchStart: this._onMouseDownOrTouchStart };\n    const onKeyDownProp: {} = disabled ? {} : { onKeyDown: this._onKeyDown };\n    const classNames = getClassNames(styles, {\n      className,\n      disabled,\n      vertical,\n      showTransitions: renderedValue === value,\n      showValue,\n      theme: theme!,\n    });\n    const divButtonProps = buttonProps\n      ? getNativeProps<React.HTMLAttributes<HTMLDivElement>>(buttonProps, divProperties)\n      : undefined;\n\n    return (\n      <div className={classNames.root}>\n        {label && (\n          <Label className={classNames.titleLabel} {...(ariaLabel ? {} : { htmlFor: this._id })} disabled={disabled}>\n            {label}\n          </Label>\n        )}\n        <div className={classNames.container}>\n          <div\n            id={this._id}\n            aria-valuenow={value}\n            aria-valuemin={min}\n            aria-valuemax={max}\n            aria-valuetext={this._getAriaValueText(value)}\n            aria-label={ariaLabel || label}\n            aria-disabled={disabled}\n            {...onMouseDownProp}\n            {...onTouchStartProp}\n            {...onKeyDownProp}\n            {...divButtonProps}\n            className={css(classNames.slideBox, buttonProps!.className)}\n            role=\"slider\"\n            tabIndex={disabled ? undefined : 0}\n            data-is-focusable={!disabled}\n          >\n            <div ref={this._sliderLine} className={classNames.line}>\n              {originFromZero && (\n                <span\n                  className={css(classNames.zeroTick)}\n                  style={this._getStyleUsingOffsetPercent(vertical, zeroOffsetPercent)}\n                />\n              )}\n              <span\n                ref={this._thumb}\n                className={classNames.thumb}\n                style={this._getStyleUsingOffsetPercent(vertical, thumbOffsetPercent)}\n              />\n              {originFromZero ? (\n                <>\n                  <span\n                    className={css(classNames.lineContainer, classNames.inactiveSection)}\n                    style={{ [lengthString]: Math.min(thumbOffsetPercent, zeroOffsetPercent) + '%' }}\n                  />\n                  <span\n                    className={css(classNames.lineContainer, classNames.activeSection)}\n                    style={{ [lengthString]: Math.abs(zeroOffsetPercent - thumbOffsetPercent) + '%' }}\n                  />\n                  <span\n                    className={css(classNames.lineContainer, classNames.inactiveSection)}\n                    style={{ [lengthString]: Math.min(100 - thumbOffsetPercent, 100 - zeroOffsetPercent) + '%' }}\n                  />\n                </>\n              ) : (\n                <>\n                  <span\n                    className={css(classNames.lineContainer, classNames.activeSection)}\n                    style={{ [lengthString]: thumbOffsetPercent + '%' }}\n                  />\n                  <span\n                    className={css(classNames.lineContainer, classNames.inactiveSection)}\n                    style={{ [lengthString]: 100 - thumbOffsetPercent + '%' }}\n                  />\n                </>\n              )}\n            </div>\n          </div>\n          {showValue && (\n            <Label className={classNames.valueLabel} disabled={disabled}>\n              {valueFormat ? valueFormat(value!) : value}\n            </Label>\n          )}\n        </div>\n        <FocusRects />\n      </div>\n    ) as React.ReactElement<{}>;\n  }\n\n  public focus(): void {\n    if (this._thumb.current) {\n      this._thumb.current.focus();\n    }\n  }\n\n  public get value(): number | undefined {\n    const { value = this.state.value } = this.props;\n    if (this.props.min === undefined || this.props.max === undefined || value === undefined) {\n      return undefined;\n    } else {\n      return Math.max(this.props.min, Math.min(this.props.max, value));\n    }\n  }\n\n  private get renderedValue(): number | undefined {\n    // renderedValue is expected to be defined while user is interacting with control, otherwise `undefined`.\n    // Fall back to `value`.\n    const { renderedValue = this.value } = this.state;\n    return renderedValue;\n  }\n\n  private _getAriaValueText = (value: number | undefined): string | undefined => {\n    const { ariaValueText } = this.props;\n    if (value !== undefined) {\n      return ariaValueText ? ariaValueText(value) : value.toString();\n    }\n    return undefined;\n  };\n\n  private _getStyleUsingOffsetPercent(vertical: boolean | undefined, thumbOffsetPercent: number): any {\n    const direction: string = vertical ? 'bottom' : getRTL(this.props.theme) ? 'right' : 'left';\n    return {\n      [direction]: thumbOffsetPercent + '%',\n    };\n  }\n\n  private _onMouseDownOrTouchStart = (event: MouseEvent | TouchEvent): void => {\n    if (event.type === 'mousedown') {\n      this._disposables.push(\n        on(window, 'mousemove', this._onMouseMoveOrTouchMove, true),\n        on(window, 'mouseup', this._onMouseUpOrTouchEnd, true),\n      );\n    } else if (event.type === 'touchstart') {\n      this._disposables.push(\n        on(window, 'touchmove', this._onMouseMoveOrTouchMove, true),\n        on(window, 'touchend', this._onMouseUpOrTouchEnd, true),\n      );\n    }\n    this._onMouseMoveOrTouchMove(event, true);\n  };\n\n  private _onMouseMoveOrTouchMove = (event: MouseEvent | TouchEvent, suppressEventCancelation?: boolean): void => {\n    if (!this._sliderLine.current) {\n      return;\n    }\n\n    const { max, min, step } = this.props;\n    const steps: number = (max! - min!) / step!;\n    const sliderPositionRect: ClientRect = this._sliderLine.current.getBoundingClientRect();\n    const sliderLength: number = !this.props.vertical ? sliderPositionRect.width : sliderPositionRect.height;\n    const stepLength: number = sliderLength / steps;\n    let currentSteps: number | undefined;\n    let distance: number | undefined;\n\n    if (!this.props.vertical) {\n      const left: number | undefined = this._getPosition(event, this.props.vertical);\n      distance = getRTL(this.props.theme) ? sliderPositionRect.right - left! : left! - sliderPositionRect.left;\n      currentSteps = distance / stepLength;\n    } else {\n      const bottom: number | undefined = this._getPosition(event, this.props.vertical);\n      distance = sliderPositionRect.bottom - bottom!;\n      currentSteps = distance / stepLength;\n    }\n\n    let currentValue: number | undefined;\n    let renderedValue: number | undefined;\n\n    // The value shouldn't be bigger than max or be smaller than min.\n    if (currentSteps! > Math.floor(steps)) {\n      renderedValue = currentValue = max as number;\n    } else if (currentSteps! < 0) {\n      renderedValue = currentValue = min as number;\n    } else {\n      renderedValue = min! + step! * currentSteps!;\n      currentValue = min! + step! * Math.round(currentSteps!);\n    }\n\n    this._updateValue(currentValue, renderedValue);\n\n    if (!suppressEventCancelation) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  };\n\n  private _getPosition(event: MouseEvent | TouchEvent, vertical: boolean | undefined): number | undefined {\n    let currentPosition: number | undefined;\n    switch (event.type) {\n      case 'mousedown':\n      case 'mousemove':\n        currentPosition = !vertical ? (event as MouseEvent).clientX : (event as MouseEvent).clientY;\n        break;\n      case 'touchstart':\n      case 'touchmove':\n        currentPosition = !vertical\n          ? (event as TouchEvent).touches[0].clientX\n          : (event as TouchEvent).touches[0].clientY;\n        break;\n    }\n    return currentPosition;\n  }\n  private _updateValue(value: number, renderedValue: number): void {\n    const { step, snapToStep } = this.props;\n    let numDec = 0;\n    if (isFinite(step!)) {\n      while (Math.round(step! * Math.pow(10, numDec)) / Math.pow(10, numDec) !== step!) {\n        numDec++;\n      }\n    }\n\n    // Make sure value has correct number of decimal places based on number of decimals in step\n    const roundedValue = parseFloat(value.toFixed(numDec));\n    const valueChanged = roundedValue !== this.state.value;\n\n    if (snapToStep) {\n      renderedValue = roundedValue;\n    }\n\n    this.setState(\n      {\n        value: roundedValue,\n        renderedValue,\n      },\n      () => {\n        if (valueChanged && this.props.onChange) {\n          this.props.onChange(this.state.value as number);\n        }\n      },\n    );\n  }\n\n  private _onMouseUpOrTouchEnd = (event: MouseEvent | TouchEvent): void => {\n    // Disable renderedValue override.\n    this.setState({\n      renderedValue: undefined,\n    });\n\n    if (this.props.onChanged) {\n      this.props.onChanged(event, this.state.value as number);\n    }\n\n    this._disposeListeners();\n  };\n\n  private _disposeListeners = (): void => {\n    this._disposables.forEach(dispose => dispose());\n    this._disposables = [];\n  };\n\n  private _onKeyDown = (event: KeyboardEvent): void => {\n    let value: number | undefined = this.state.value;\n    const { max, min, step } = this.props;\n\n    let diff: number | undefined = 0;\n\n    // eslint-disable-next-line deprecation/deprecation\n    switch (event.which) {\n      case getRTLSafeKeyCode(KeyCodes.left, this.props.theme):\n      case KeyCodes.down:\n        diff = -(step as number);\n\n        this._clearOnKeyDownTimer();\n        this._setOnKeyDownTimer(event);\n\n        break;\n      case getRTLSafeKeyCode(KeyCodes.right, this.props.theme):\n      case KeyCodes.up:\n        diff = step;\n\n        this._clearOnKeyDownTimer();\n        this._setOnKeyDownTimer(event);\n\n        break;\n\n      case KeyCodes.home:\n        value = min;\n        break;\n\n      case KeyCodes.end:\n        value = max;\n        break;\n\n      default:\n        return;\n    }\n\n    const newValue: number = Math.min(max as number, Math.max(min as number, value! + diff!));\n\n    this._updateValue(newValue, newValue);\n\n    event.preventDefault();\n    event.stopPropagation();\n  };\n\n  private _clearOnKeyDownTimer = (): void => {\n    this._async.clearTimeout(this._onKeyDownTimer);\n  };\n\n  private _setOnKeyDownTimer = (event: KeyboardEvent): void => {\n    this._onKeyDownTimer = this._async.setTimeout(() => {\n      if (this.props.onChanged) {\n        this.props.onChanged(event, this.state.value as number);\n      }\n    }, ONKEYDOWN_TIMEOUT_DURATION);\n  };\n}\n"]},"metadata":{},"sourceType":"module"}