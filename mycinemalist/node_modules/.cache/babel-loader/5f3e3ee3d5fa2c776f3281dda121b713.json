{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css, styled, classNamesFunction } from '../../Utilities';\nimport { Check } from '../../Check';\nimport { getStyles } from './DetailsRowCheck.styles';\nimport { composeRenderFunction } from '@uifabric/utilities';\nvar getClassNames = classNamesFunction();\n\nvar DetailsRowCheckBase = function DetailsRowCheckBase(props) {\n  var _a = props.isVisible,\n      isVisible = _a === void 0 ? false : _a,\n      _b = props.canSelect,\n      canSelect = _b === void 0 ? false : _b,\n      _c = props.anySelected,\n      anySelected = _c === void 0 ? false : _c,\n      _d = props.selected,\n      selected = _d === void 0 ? false : _d,\n      _e = props.isHeader,\n      isHeader = _e === void 0 ? false : _e,\n      className = props.className,\n      checkClassName = props.checkClassName,\n      styles = props.styles,\n      theme = props.theme,\n      compact = props.compact,\n      onRenderDetailsCheckbox = props.onRenderDetailsCheckbox,\n      _f = props.useFastIcons,\n      useFastIcons = _f === void 0 ? true : _f,\n      // must be removed from buttonProps\n  buttonProps = __rest(props, [\"isVisible\", \"canSelect\", \"anySelected\", \"selected\", \"isHeader\", \"className\", \"checkClassName\", \"styles\", \"theme\", \"compact\", \"onRenderDetailsCheckbox\", \"useFastIcons\"]);\n\n  var defaultCheckboxRender = useFastIcons ? _fastDefaultCheckboxRender : _defaultCheckboxRender;\n  var onRenderCheckbox = onRenderDetailsCheckbox ? composeRenderFunction(onRenderDetailsCheckbox, defaultCheckboxRender) : defaultCheckboxRender;\n  var classNames = getClassNames(styles, {\n    theme: theme,\n    canSelect: canSelect,\n    selected: selected,\n    anySelected: anySelected,\n    className: className,\n    isHeader: isHeader,\n    isVisible: isVisible,\n    compact: compact\n  });\n  var detailsCheckboxProps = {\n    checked: selected,\n    theme: theme\n  };\n  return canSelect ? React.createElement(\"div\", __assign({}, buttonProps, {\n    role: \"checkbox\",\n    // eslint-disable-next-line deprecation/deprecation\n    className: css(classNames.root, classNames.check),\n    \"aria-checked\": selected,\n    \"data-selection-toggle\": true,\n    \"data-automationid\": \"DetailsRowCheck\"\n  }), onRenderCheckbox(detailsCheckboxProps)) : // eslint-disable-next-line deprecation/deprecation\n  React.createElement(\"div\", __assign({}, buttonProps, {\n    className: css(classNames.root, classNames.check)\n  }));\n};\n\nvar FastCheck = React.memo(function (props) {\n  return React.createElement(Check, {\n    theme: props.theme,\n    checked: props.checked,\n    className: props.className,\n    useFastIcons: true\n  });\n});\n\nfunction _defaultCheckboxRender(checkboxProps) {\n  return React.createElement(Check, {\n    checked: checkboxProps.checked\n  });\n}\n\nfunction _fastDefaultCheckboxRender(checkboxProps) {\n  return React.createElement(FastCheck, {\n    theme: checkboxProps.theme,\n    checked: checkboxProps.checked\n  });\n}\n\nexport var DetailsRowCheck = styled(DetailsRowCheckBase, getStyles, undefined, {\n  scope: 'DetailsRowCheck'\n}, true);","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAOA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,kBAAtB,QAAgD,iBAAhD;AACA,SAASC,KAAT,QAAsB,aAAtB;AACA,SAASC,SAAT,QAA0B,0BAA1B;AACA,SAASC,qBAAT,QAAsC,qBAAtC;AAGA,IAAMC,aAAa,GAAGJ,kBAAkB,EAAxC;;AAEA,IAAMK,mBAAmB,GAAmD,SAAtEA,mBAAsE,QAAK;EAE7E;EAAA;EAAA,IACAC,oBADA;EAAA,IACAC,sCADA;EAAA,IAEAC,sBAFA;EAAA,IAEAC,wCAFA;EAAA,IAGAC,mBAHA;EAAA,IAGAC,qCAHA;EAAA,IAIAC,mBAJA;EAAA,IAIAC,qCAJA;EAAA,IAKAC,2BALA;EAAA,IAMAC,qCANA;EAAA,IAOAC,qBAPA;EAAA,IAQAC,mBARA;EAAA,IASAC,uBATA;EAAA,IAUAC,uDAVA;EAAA,IAWAC,uBAXA;EAAA,IAWAC,wCAXA;EAAA,IAWqB;EACrBC,sMAZA;;EAcF,IAAMC,qBAAqB,GAAGF,YAAY,GAAGG,0BAAH,GAAgCC,sBAA1E;EAEA,IAAMC,gBAAgB,GAAGP,uBAAuB,GAC5ChB,qBAAqB,CAACgB,uBAAD,EAA0BI,qBAA1B,CADuB,GAE5CA,qBAFJ;EAIA,IAAMI,UAAU,GAAGvB,aAAa,CAACY,MAAD,EAAS;IACvCC,KAAK,EAAEA,KADgC;IAEvCV,SAAS,WAF8B;IAGvCI,QAAQ,UAH+B;IAIvCF,WAAW,aAJ4B;IAKvCK,SAAS,WAL8B;IAMvCD,QAAQ,UAN+B;IAOvCe,SAAS,WAP8B;IAQvCV,OAAO;EARgC,CAAT,CAAhC;EAWA,IAAMW,oBAAoB,GAA0B;IAClDC,OAAO,EAAEnB,QADyC;IAElDM,KAAK;EAF6C,CAApD;EAKA,OAAOV,SAAS,GACdV,wCACMyB,WADN,EACiB;IACfS,IAAI,EAAC,UADU;IAEf;IACAjB,SAAS,EAAEhB,GAAG,CAAC6B,UAAU,CAACK,IAAZ,EAAkBL,UAAU,CAACM,KAA7B,CAHC;IAGkC,gBACnCtB,QAJC;IAIO,yBACC,IALR;IAKY,qBACT;EANH,CADjB,GASGe,gBAAgB,CAACG,oBAAD,CATnB,CADc,GAad;EACAhC,wCAASyB,WAAT,EAAoB;IAAER,SAAS,EAAEhB,GAAG,CAAC6B,UAAU,CAACK,IAAZ,EAAkBL,UAAU,CAACM,KAA7B;EAAhB,CAApB,EAdF;AAgBD,CAtDD;;AAwDA,IAAMC,SAAS,GAAGrC,KAAK,CAACsC,IAAN,CAAW,UAACC,KAAD,EAAiE;EAC5F,OAAOvC,oBAACI,KAAD,EAAM;IAACgB,KAAK,EAAEmB,KAAK,CAACnB,KAAd;IAAqBa,OAAO,EAAEM,KAAK,CAACN,OAApC;IAA6ChB,SAAS,EAAEsB,KAAK,CAACtB,SAA9D;IAAyEO,YAAY;EAArF,CAAN,CAAP;AACD,CAFiB,CAAlB;;AAIA,SAASI,sBAAT,CAAgCY,aAAhC,EAAoE;EAClE,OAAOxC,oBAACI,KAAD,EAAM;IAAC6B,OAAO,EAAEO,aAAa,CAACP;EAAxB,CAAN,CAAP;AACD;;AAED,SAASN,0BAAT,CAAoCa,aAApC,EAAwE;EACtE,OAAOxC,oBAACqC,SAAD,EAAU;IAACjB,KAAK,EAAEoB,aAAa,CAACpB,KAAtB;IAA6Ba,OAAO,EAAEO,aAAa,CAACP;EAApD,CAAV,CAAP;AACD;;AAED,OAAO,IAAMQ,eAAe,GAAGvC,MAAM,CACnCM,mBADmC,EAEnCH,SAFmC,EAGnCqC,SAHmC,EAInC;EAAEC,KAAK,EAAE;AAAT,CAJmC,EAKnC,IALmC,CAA9B","names":["React","css","styled","classNamesFunction","Check","getStyles","composeRenderFunction","getClassNames","DetailsRowCheckBase","_b","canSelect","_c","anySelected","_d","selected","_e","isHeader","className","checkClassName","styles","theme","compact","onRenderDetailsCheckbox","_f","useFastIcons","buttonProps","defaultCheckboxRender","_fastDefaultCheckboxRender","_defaultCheckboxRender","onRenderCheckbox","classNames","isVisible","detailsCheckboxProps","checked","role","root","check","FastCheck","memo","props","checkboxProps","DetailsRowCheck","undefined","scope"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\office-ui-fabric-react\\lib\\components\\src\\components\\DetailsList\\DetailsRowCheck.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  IDetailsRowCheckProps,\n  IDetailsCheckboxProps,\n  IDetailsRowCheckStyleProps,\n  IDetailsRowCheckStyles,\n} from './DetailsRowCheck.types';\nimport { css, styled, classNamesFunction } from '../../Utilities';\nimport { Check } from '../../Check';\nimport { getStyles } from './DetailsRowCheck.styles';\nimport { composeRenderFunction } from '@uifabric/utilities';\nimport { ITheme } from '../../Styling';\n\nconst getClassNames = classNamesFunction<IDetailsRowCheckStyleProps, IDetailsRowCheckStyles>();\n\nconst DetailsRowCheckBase: React.FunctionComponent<IDetailsRowCheckProps> = props => {\n  const {\n    isVisible = false,\n    canSelect = false,\n    anySelected = false,\n    selected = false,\n    isHeader = false,\n    className,\n    checkClassName,\n    styles,\n    theme,\n    compact,\n    onRenderDetailsCheckbox,\n    useFastIcons = true, // must be removed from buttonProps\n    ...buttonProps\n  } = props;\n  const defaultCheckboxRender = useFastIcons ? _fastDefaultCheckboxRender : _defaultCheckboxRender;\n\n  const onRenderCheckbox = onRenderDetailsCheckbox\n    ? composeRenderFunction(onRenderDetailsCheckbox, defaultCheckboxRender)\n    : defaultCheckboxRender;\n\n  const classNames = getClassNames(styles, {\n    theme: theme!,\n    canSelect,\n    selected,\n    anySelected,\n    className,\n    isHeader,\n    isVisible,\n    compact,\n  });\n\n  const detailsCheckboxProps: IDetailsCheckboxProps = {\n    checked: selected,\n    theme,\n  };\n\n  return canSelect ? (\n    <div\n      {...buttonProps}\n      role=\"checkbox\"\n      // eslint-disable-next-line deprecation/deprecation\n      className={css(classNames.root, classNames.check)}\n      aria-checked={selected}\n      data-selection-toggle={true}\n      data-automationid=\"DetailsRowCheck\"\n    >\n      {onRenderCheckbox(detailsCheckboxProps)}\n    </div>\n  ) : (\n    // eslint-disable-next-line deprecation/deprecation\n    <div {...buttonProps} className={css(classNames.root, classNames.check)} />\n  );\n};\n\nconst FastCheck = React.memo((props: { theme?: ITheme; checked?: boolean; className?: string }) => {\n  return <Check theme={props.theme} checked={props.checked} className={props.className} useFastIcons />;\n});\n\nfunction _defaultCheckboxRender(checkboxProps: IDetailsCheckboxProps) {\n  return <Check checked={checkboxProps.checked} />;\n}\n\nfunction _fastDefaultCheckboxRender(checkboxProps: IDetailsCheckboxProps) {\n  return <FastCheck theme={checkboxProps.theme} checked={checkboxProps.checked} />;\n}\n\nexport const DetailsRowCheck = styled<IDetailsRowCheckProps, IDetailsRowCheckStyleProps, IDetailsRowCheckStyles>(\n  DetailsRowCheckBase,\n  getStyles,\n  undefined,\n  { scope: 'DetailsRowCheck' },\n  true,\n);\n"]},"metadata":{},"sourceType":"module"}