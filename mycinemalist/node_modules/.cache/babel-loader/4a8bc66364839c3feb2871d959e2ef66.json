{"ast":null,"code":"var _jsxFileName = \"D:\\\\PFCJACOBO\\\\PFC\\\\mycinemalist\\\\src\\\\common\\\\Helper.tsx\";\nimport * as React from \"react\";\nimport emptypicture from \"../images/notpicture.png\";\nimport { DefaultButton, PersonaSize, Persona } from \"office-ui-fabric-react\";\nimport \"moment/locale/es\";\nconst filterIcon = {\n  iconName: \"Filter\"\n};\nconst filterSolidIcon = {\n  iconName: \"FilterSolid\"\n};\nconst addIcon = {\n  iconName: \"Add\"\n};\nexport class ContextualCliente extends React.Component {\n  constructor(props, state) {\n    super(props);\n    this.persona = {\n      imageUrl: this.props.user ? this.props.user.profileImage : emptypicture,\n      imageInitials: '',\n      text: this.props.user ? \"\" + this.props.user.name + \" \" + this.props.user.surname : \"Undefined\"\n    };\n    this.state = {};\n  }\n\n  render() {\n    var MenuProps = {\n      items: [{\n        key: \"Configuracion\",\n        text: \"Configuración\",\n        iconProps: {\n          iconName: \"Settings\"\n        },\n        onClick: () => {\n          this.props.goConfig();\n        }\n      }, {\n        key: \"Logout\",\n        text: \"Logout\",\n        iconProps: {\n          iconName: \"UserRemove\"\n        },\n        onClick: () => {\n          this.props.goLogout();\n        }\n      }]\n    };\n    return /*#__PURE__*/React.createElement(DefaultButton // text=\"Nuevo\"\n    // iconProps={addIcon}\n    , {\n      menuProps: MenuProps,\n      style: {\n        height: \"40px\"\n      } // onMenuClick={_onMenuClick}\n      // By default, the ContextualMenu is re-created each time it's shown and destroyed when closed.\n      // Uncomment the next line to hide the ContextualMenu but persist it in the DOM instead.\n      // persistMenu={true}\n      ,\n      allowDisabledFocus: true // disabled={disabled}\n      // checked={checked}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Persona, Object.assign({}, this.persona, {\n      text: \"\" + this.props.user.name + \" \" + this.props.user.surname,\n      size: PersonaSize.size32,\n      hidePersonaDetails: false,\n      imageAlt: this.props.user.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    })));\n  }\n\n}","map":{"version":3,"names":["React","emptypicture","DefaultButton","PersonaSize","Persona","filterIcon","iconName","filterSolidIcon","addIcon","ContextualCliente","Component","constructor","props","state","persona","imageUrl","user","profileImage","imageInitials","text","name","surname","render","MenuProps","items","key","iconProps","onClick","goConfig","goLogout","height","size32"],"sources":["D:/PFCJACOBO/PFC/mycinemalist/src/common/Helper.tsx"],"sourcesContent":["import * as React from \"react\";\r\nimport emptypicture from \"../images/notpicture.png\"\r\nimport {\r\n  PrimaryButton,\r\n  IContextualMenuProps,\r\n  ContextualMenu,\r\n  IconButton,\r\n  IIconProps,\r\n  Label,\r\n  TextField,\r\n  DialogFooter,\r\n  DialogContent,\r\n  Dropdown,\r\n  IDropdownOption,\r\n  Checkbox,\r\n  Toggle,\r\n  Spinner,\r\n  Icon,\r\n  Stack,\r\n  TooltipHost,\r\n  Callout,\r\n  Slider,\r\n  SpinnerSize,\r\n  DatePicker,\r\n  FontIcon,\r\n  DefaultButton,\r\n  IContextualMenuItem,\r\n  IPersonaSharedProps,\r\n  PersonaSize,\r\n  Persona,\r\n} from \"office-ui-fabric-react\";\r\nimport * as ReactDOM from \"react-dom\";\r\nimport * as $ from \"jquery\";\r\nimport { Moment, now } from \"moment\";\r\nimport \"moment/locale/es\";\r\n\r\nimport styles from \"./common.module.scss\";\r\nimport * as moment from \"moment\";\r\nimport { TestImages } from \"@fluentui/example-data\";\r\nimport { User } from \"./User\";\r\n\r\nconst filterIcon: IIconProps = { iconName: \"Filter\" };\r\nconst filterSolidIcon: IIconProps = { iconName: \"FilterSolid\" };\r\n\r\n\r\n\r\nconst addIcon: IIconProps = { iconName: \"Add\" };\r\ninterface IContextualClienteProps {\r\n  disabled?: boolean;\r\n  user:User;\r\n  checked?: boolean;\r\n  goConfig: ()=>void;\r\n  goLogout:()=>void;\r\n}\r\n\r\ninterface IContextualClienteState {}\r\n\r\nexport class ContextualCliente extends React.Component<\r\n  IContextualClienteProps,\r\n  IContextualClienteState\r\n> {\r\n  constructor(props: IContextualClienteProps, state: IContextualClienteState) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n   persona: IPersonaSharedProps = {\r\n    imageUrl: this.props.user?this.props.user.profileImage:emptypicture,\r\n    imageInitials: '',\r\n    text: this.props.user?\"\"+this.props.user.name+\" \"+this.props.user.surname:\"Undefined\" ,\r\n  \r\n  };\r\n  \r\n  public render(): JSX.Element {\r\n    var MenuProps: IContextualMenuProps = {\r\n      items: [\r\n        {\r\n          key: \"Configuracion\",\r\n          text: \"Configuración\",\r\n          iconProps: { iconName: \"Settings\" },\r\n          onClick: () => {\r\n            this.props.goConfig()\r\n          }\r\n        },\r\n        {\r\n          key: \"Logout\",\r\n          text: \"Logout\",\r\n          iconProps: { iconName: \"UserRemove\" },\r\n          onClick: () => {\r\n            this.props.goLogout()\r\n          }\r\n        },\r\n      ],\r\n    };\r\n\r\n    return (\r\n      <DefaultButton\r\n        // text=\"Nuevo\"\r\n        // iconProps={addIcon}\r\n        menuProps={MenuProps}\r\n        style={{height:\"40px\"}}\r\n        // onMenuClick={_onMenuClick}\r\n        // By default, the ContextualMenu is re-created each time it's shown and destroyed when closed.\r\n        // Uncomment the next line to hide the ContextualMenu but persist it in the DOM instead.\r\n        // persistMenu={true}\r\n        allowDisabledFocus\r\n        // disabled={disabled}\r\n        // checked={checked}\r\n      >\r\n        <Persona\r\n        {...this.persona}\r\n        text={\"\"+this.props.user.name+\" \"+this.props.user.surname }\r\n        size={PersonaSize.size32}\r\n        hidePersonaDetails={false}\r\n        imageAlt={this.props.user.name}\r\n      />\r\n      </DefaultButton>\r\n    );\r\n  }\r\n}"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,SAuBEC,aAvBF,EA0BEC,WA1BF,EA2BEC,OA3BF,QA4BO,wBA5BP;AAgCA,OAAO,kBAAP;AAOA,MAAMC,UAAsB,GAAG;EAAEC,QAAQ,EAAE;AAAZ,CAA/B;AACA,MAAMC,eAA2B,GAAG;EAAED,QAAQ,EAAE;AAAZ,CAApC;AAIA,MAAME,OAAmB,GAAG;EAAEF,QAAQ,EAAE;AAAZ,CAA5B;AAWA,OAAO,MAAMG,iBAAN,SAAgCT,KAAK,CAACU,SAAtC,CAGL;EACAC,WAAW,CAACC,KAAD,EAAiCC,KAAjC,EAAiE;IAC1E,MAAMD,KAAN;IAD0E,KAI3EE,OAJ2E,GAI5C;MAC9BC,QAAQ,EAAE,KAAKH,KAAL,CAAWI,IAAX,GAAgB,KAAKJ,KAAL,CAAWI,IAAX,CAAgBC,YAAhC,GAA6ChB,YADzB;MAE9BiB,aAAa,EAAE,EAFe;MAG9BC,IAAI,EAAE,KAAKP,KAAL,CAAWI,IAAX,GAAgB,KAAG,KAAKJ,KAAL,CAAWI,IAAX,CAAgBI,IAAnB,GAAwB,GAAxB,GAA4B,KAAKR,KAAL,CAAWI,IAAX,CAAgBK,OAA5D,GAAoE;IAH5C,CAJ4C;IAE1E,KAAKR,KAAL,GAAa,EAAb;EACD;;EAQMS,MAAM,GAAgB;IAC3B,IAAIC,SAA+B,GAAG;MACpCC,KAAK,EAAE,CACL;QACEC,GAAG,EAAE,eADP;QAEEN,IAAI,EAAE,eAFR;QAGEO,SAAS,EAAE;UAAEpB,QAAQ,EAAE;QAAZ,CAHb;QAIEqB,OAAO,EAAE,MAAM;UACb,KAAKf,KAAL,CAAWgB,QAAX;QACD;MANH,CADK,EASL;QACEH,GAAG,EAAE,QADP;QAEEN,IAAI,EAAE,QAFR;QAGEO,SAAS,EAAE;UAAEpB,QAAQ,EAAE;QAAZ,CAHb;QAIEqB,OAAO,EAAE,MAAM;UACb,KAAKf,KAAL,CAAWiB,QAAX;QACD;MANH,CATK;IAD6B,CAAtC;IAqBA,oBACE,oBAAC,aAAD,CACE;IACA;IAFF;MAGE,SAAS,EAAEN,SAHb;MAIE,KAAK,EAAE;QAACO,MAAM,EAAC;MAAR,CAJT,CAKE;MACA;MACA;MACA;MARF;MASE,kBAAkB,MATpB,CAUE;MACA;MAXF;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBAaE,oBAAC,OAAD,oBACI,KAAKhB,OADT;MAEA,IAAI,EAAE,KAAG,KAAKF,KAAL,CAAWI,IAAX,CAAgBI,IAAnB,GAAwB,GAAxB,GAA4B,KAAKR,KAAL,CAAWI,IAAX,CAAgBK,OAFlD;MAGA,IAAI,EAAElB,WAAW,CAAC4B,MAHlB;MAIA,kBAAkB,EAAE,KAJpB;MAKA,QAAQ,EAAE,KAAKnB,KAAL,CAAWI,IAAX,CAAgBI,IAL1B;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAbF,CADF;EAuBD;;AAzDD"},"metadata":{},"sourceType":"module"}