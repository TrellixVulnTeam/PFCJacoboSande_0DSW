{"ast":null,"code":"import { __assign, __extends, __rest } from \"tslib\";\nimport * as React from 'react';\nimport { Image } from '../../../Image';\nimport { Icon } from '../../../Icon';\nimport { classNamesFunction, getNativeProps, inputProperties, css, initializeComponentRef } from '../../../Utilities';\nimport { composeRenderFunction } from '@uifabric/utilities';\nvar getClassNames = classNamesFunction();\nvar LARGE_IMAGE_SIZE = 71;\n/**\n * {@docCategory ChoiceGroup}\n */\n\nvar ChoiceGroupOptionBase =\n/** @class */\nfunction (_super) {\n  __extends(ChoiceGroupOptionBase, _super);\n\n  function ChoiceGroupOptionBase(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this._onChange = function (evt) {\n      var onChange = _this.props.onChange;\n\n      if (onChange) {\n        onChange(evt, _this.props);\n      }\n    };\n\n    _this._onBlur = function (evt) {\n      var onBlur = _this.props.onBlur;\n\n      if (onBlur) {\n        onBlur(evt, _this.props);\n      }\n    };\n\n    _this._onFocus = function (evt) {\n      var onFocus = _this.props.onFocus;\n\n      if (onFocus) {\n        onFocus(evt, _this.props);\n      }\n    };\n\n    _this._onRenderField = function (props) {\n      var id = props.id,\n          imageSrc = props.imageSrc,\n          _a = props.imageAlt,\n          imageAlt = _a === void 0 ? '' : _a,\n          selectedImageSrc = props.selectedImageSrc,\n          iconProps = props.iconProps;\n      var imageSize = props.imageSize ? props.imageSize : {\n        width: 32,\n        height: 32\n      };\n      var onRenderLabel = props.onRenderLabel ? composeRenderFunction(props.onRenderLabel, _this._onRenderLabel) : _this._onRenderLabel;\n      var label = onRenderLabel(props);\n      return React.createElement(\"label\", {\n        htmlFor: id,\n        className: _this._classNames.field\n      }, imageSrc && React.createElement(\"div\", {\n        className: _this._classNames.innerField\n      }, React.createElement(\"div\", {\n        className: _this._classNames.imageWrapper\n      }, React.createElement(Image, {\n        src: imageSrc,\n        alt: imageAlt,\n        width: imageSize.width,\n        height: imageSize.height\n      })), React.createElement(\"div\", {\n        className: _this._classNames.selectedImageWrapper\n      }, React.createElement(Image, {\n        src: selectedImageSrc,\n        alt: imageAlt,\n        width: imageSize.width,\n        height: imageSize.height\n      }))), iconProps && React.createElement(\"div\", {\n        className: _this._classNames.innerField\n      }, React.createElement(\"div\", {\n        className: _this._classNames.iconWrapper\n      }, React.createElement(Icon, __assign({}, iconProps)))), imageSrc || iconProps ? React.createElement(\"div\", {\n        className: _this._classNames.labelWrapper\n      }, label) : label);\n    };\n\n    _this._onRenderLabel = function (props) {\n      return React.createElement(\"span\", {\n        id: props.labelId,\n        className: \"ms-ChoiceFieldLabel\"\n      }, props.text);\n    };\n\n    initializeComponentRef(_this);\n    return _this;\n  }\n\n  ChoiceGroupOptionBase.prototype.render = function () {\n    var _a = this.props,\n        ariaLabel = _a.ariaLabel,\n        focused = _a.focused,\n        required = _a.required,\n        theme = _a.theme,\n        iconProps = _a.iconProps,\n        imageSrc = _a.imageSrc,\n        imageSize = _a.imageSize,\n        disabled = _a.disabled,\n        // eslint-disable-next-line deprecation/deprecation\n    checked = _a.checked,\n        id = _a.id,\n        styles = _a.styles,\n        name = _a.name,\n        _b = _a.onRenderField,\n        onRenderField = _b === void 0 ? this._onRenderField : _b,\n        rest = __rest(_a, [\"ariaLabel\", \"focused\", \"required\", \"theme\", \"iconProps\", \"imageSrc\", \"imageSize\", \"disabled\", \"checked\", \"id\", \"styles\", \"name\", \"onRenderField\"]);\n\n    this._classNames = getClassNames(styles, {\n      theme: theme,\n      hasIcon: !!iconProps,\n      hasImage: !!imageSrc,\n      checked: checked,\n      disabled: disabled,\n      imageIsLarge: !!imageSrc && (imageSize.width > LARGE_IMAGE_SIZE || imageSize.height > LARGE_IMAGE_SIZE),\n      imageSize: imageSize,\n      focused: focused\n    });\n\n    var _c = getNativeProps(rest, inputProperties),\n        className = _c.className,\n        nativeProps = __rest(_c, [\"className\"]);\n\n    return React.createElement(\"div\", {\n      className: this._classNames.root\n    }, React.createElement(\"div\", {\n      className: this._classNames.choiceFieldWrapper\n    }, React.createElement(\"input\", __assign({\n      \"aria-label\": ariaLabel,\n      id: id,\n      className: css(this._classNames.input, className),\n      type: \"radio\",\n      name: name,\n      disabled: disabled,\n      checked: checked,\n      required: required\n    }, nativeProps, {\n      onChange: this._onChange,\n      onFocus: this._onFocus,\n      onBlur: this._onBlur\n    })), onRenderField(this.props, this._onRenderField)));\n  };\n\n  ChoiceGroupOptionBase.defaultProps = {\n    // This ensures default imageSize value doesn't mutate. Mutation can cause style re-calcuation.\n    imageSize: {\n      width: 32,\n      height: 32\n    }\n  };\n  return ChoiceGroupOptionBase;\n}(React.Component);\n\nexport { ChoiceGroupOptionBase };","map":{"version":3,"mappings":"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","names":["React","Image","Icon","classNamesFunction","getNativeProps","inputProperties","css","initializeComponentRef","composeRenderFunction","getClassNames","LARGE_IMAGE_SIZE","__extends","props","_super","_this","evt","onChange","onBlur","onFocus","imageSrc","_a","imageAlt","selectedImageSrc","iconProps","imageSize","width","height","onRenderLabel","_onRenderLabel","label","htmlFor","id","className","_classNames","field","innerField","imageWrapper","src","alt","selectedImageWrapper","iconWrapper","__assign","labelWrapper","labelId","text","ChoiceGroupOptionBase","ariaLabel","focused","required","theme","disabled","checked","styles","name","_b","onRenderField","rest","hasIcon","hasImage","imageIsLarge","_c","nativeProps","root","choiceFieldWrapper","input","type","_onChange","_onFocus","_onBlur","_onRenderField","Component"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\office-ui-fabric-react\\lib\\components\\ChoiceGroup\\src\\components\\ChoiceGroup\\ChoiceGroupOption\\ChoiceGroupOption.base.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Image } from '../../../Image';\nimport { Icon } from '../../../Icon';\nimport {\n  IChoiceGroupOptionProps,\n  IChoiceGroupOptionStyleProps,\n  IChoiceGroupOptionStyles,\n} from './ChoiceGroupOption.types';\nimport { classNamesFunction, getNativeProps, inputProperties, css, initializeComponentRef } from '../../../Utilities';\nimport { IProcessedStyleSet } from '../../../Styling';\nimport { composeRenderFunction } from '@uifabric/utilities';\n\nconst getClassNames = classNamesFunction<IChoiceGroupOptionStyleProps, IChoiceGroupOptionStyles>();\n\nconst LARGE_IMAGE_SIZE = 71;\n\n/**\n * {@docCategory ChoiceGroup}\n */\nexport class ChoiceGroupOptionBase extends React.Component<IChoiceGroupOptionProps, {}> {\n  public static defaultProps: Partial<IChoiceGroupOptionProps> = {\n    // This ensures default imageSize value doesn't mutate. Mutation can cause style re-calcuation.\n    imageSize: { width: 32, height: 32 },\n  };\n\n  private _classNames: IProcessedStyleSet<IChoiceGroupOptionStyles>;\n\n  constructor(props: IChoiceGroupOptionProps) {\n    super(props);\n    initializeComponentRef(this);\n  }\n\n  public render(): JSX.Element {\n    const {\n      ariaLabel,\n      focused,\n      required,\n      theme,\n      iconProps,\n      imageSrc,\n      imageSize,\n      disabled,\n      // eslint-disable-next-line deprecation/deprecation\n      checked,\n      id,\n      styles,\n      name,\n      onRenderField = this._onRenderField,\n      ...rest\n    } = this.props;\n\n    this._classNames = getClassNames(styles!, {\n      theme: theme!,\n      hasIcon: !!iconProps,\n      hasImage: !!imageSrc,\n      checked,\n      disabled,\n      imageIsLarge: !!imageSrc && (imageSize!.width > LARGE_IMAGE_SIZE || imageSize!.height > LARGE_IMAGE_SIZE),\n      imageSize,\n      focused,\n    });\n\n    const { className, ...nativeProps } = getNativeProps<{ className: string }>(rest, inputProperties);\n\n    return (\n      <div className={this._classNames.root}>\n        <div className={this._classNames.choiceFieldWrapper}>\n          <input\n            aria-label={ariaLabel}\n            id={id}\n            className={css(this._classNames.input, className)}\n            type=\"radio\"\n            name={name}\n            disabled={disabled}\n            checked={checked}\n            required={required}\n            {...nativeProps}\n            onChange={this._onChange}\n            onFocus={this._onFocus}\n            onBlur={this._onBlur}\n          />\n          {onRenderField(this.props, this._onRenderField)}\n        </div>\n      </div>\n    );\n  }\n\n  private _onChange = (evt: React.FormEvent<HTMLInputElement>): void => {\n    const { onChange } = this.props;\n    if (onChange) {\n      onChange(evt, this.props);\n    }\n  };\n\n  private _onBlur = (evt: React.FocusEvent<HTMLElement>) => {\n    const { onBlur } = this.props;\n    if (onBlur) {\n      onBlur(evt, this.props);\n    }\n  };\n\n  private _onFocus = (evt: React.FocusEvent<HTMLElement>) => {\n    const { onFocus } = this.props;\n    if (onFocus) {\n      onFocus(evt, this.props);\n    }\n  };\n\n  private _onRenderField = (props: IChoiceGroupOptionProps): JSX.Element => {\n    const { id, imageSrc, imageAlt = '', selectedImageSrc, iconProps } = props;\n\n    const imageSize = props.imageSize ? props.imageSize : { width: 32, height: 32 };\n\n    const onRenderLabel = props.onRenderLabel\n      ? composeRenderFunction(props.onRenderLabel, this._onRenderLabel)\n      : this._onRenderLabel;\n\n    const label = onRenderLabel(props);\n\n    return (\n      <label htmlFor={id} className={this._classNames.field}>\n        {imageSrc && (\n          <div className={this._classNames.innerField}>\n            <div className={this._classNames.imageWrapper}>\n              <Image src={imageSrc} alt={imageAlt} width={imageSize.width} height={imageSize.height} />\n            </div>\n            <div className={this._classNames.selectedImageWrapper}>\n              <Image src={selectedImageSrc} alt={imageAlt} width={imageSize.width} height={imageSize.height} />\n            </div>\n          </div>\n        )}\n        {iconProps && (\n          <div className={this._classNames.innerField}>\n            <div className={this._classNames.iconWrapper}>\n              <Icon {...iconProps} />\n            </div>\n          </div>\n        )}\n        {imageSrc || iconProps ? <div className={this._classNames.labelWrapper}>{label}</div> : label}\n      </label>\n    );\n  };\n\n  private _onRenderLabel = (props: IChoiceGroupOptionProps): JSX.Element => {\n    return (\n      <span id={props.labelId} className=\"ms-ChoiceFieldLabel\">\n        {props.text}\n      </span>\n    );\n  };\n}\n"]},"metadata":{},"sourceType":"module"}