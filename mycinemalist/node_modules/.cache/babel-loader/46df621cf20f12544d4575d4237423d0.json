{"ast":null,"code":"import { AnimationClassNames, getFocusStyle, ZIndexes, getGlobalClassNames, HighContrastSelector, FontWeights } from '../../Styling';\nvar GlobalClassNames = {\n  root: 'ms-Nav',\n  linkText: 'ms-Nav-linkText',\n  compositeLink: 'ms-Nav-compositeLink',\n  link: 'ms-Nav-link',\n  chevronButton: 'ms-Nav-chevronButton',\n  chevronIcon: 'ms-Nav-chevron',\n  navItem: 'ms-Nav-navItem',\n  navItems: 'ms-Nav-navItems',\n  group: 'ms-Nav-group',\n  groupContent: 'ms-Nav-groupContent'\n};\nexport var buttonStyles = {\n  textContainer: {\n    overflow: 'hidden'\n  },\n  label: {\n    whiteSpace: 'nowrap',\n    textOverflow: 'ellipsis',\n    overflow: 'hidden'\n  }\n};\nexport var getStyles = function (props) {\n  var _a;\n\n  var className = props.className,\n      theme = props.theme,\n      isOnTop = props.isOnTop,\n      isExpanded = props.isExpanded,\n      isGroup = props.isGroup,\n      isLink = props.isLink,\n      isSelected = props.isSelected,\n      isDisabled = props.isDisabled,\n      isButtonEntry = props.isButtonEntry,\n      _b = props.navHeight,\n      navHeight = _b === void 0 ? 44 : _b,\n      position = props.position,\n      _c = props.leftPadding,\n      leftPadding = _c === void 0 ? 20 : _c,\n      _d = props.leftPaddingExpanded,\n      leftPaddingExpanded = _d === void 0 ? 28 : _d,\n      _e = props.rightPadding,\n      rightPadding = _e === void 0 ? 20 : _e;\n  var palette = theme.palette,\n      semanticColors = theme.semanticColors,\n      fonts = theme.fonts;\n  var classNames = getGlobalClassNames(GlobalClassNames, theme);\n  return {\n    root: [classNames.root, className, fonts.medium, {\n      overflowY: 'auto',\n      userSelect: 'none',\n      WebkitOverflowScrolling: 'touch'\n    }, isOnTop && [{\n      position: 'absolute'\n    }, AnimationClassNames.slideRightIn40]],\n    linkText: [classNames.linkText, {\n      margin: '0 4px',\n      overflow: 'hidden',\n      verticalAlign: 'middle',\n      textAlign: 'left',\n      textOverflow: 'ellipsis'\n    }],\n    compositeLink: [classNames.compositeLink, {\n      display: 'block',\n      position: 'relative',\n      color: semanticColors.bodyText\n    }, isExpanded && 'is-expanded', isSelected && 'is-selected', isDisabled && 'is-disabled', isDisabled && {\n      color: semanticColors.disabledText\n    }],\n    link: [classNames.link, getFocusStyle(theme), {\n      display: 'block',\n      position: 'relative',\n      height: navHeight,\n      width: '100%',\n      lineHeight: navHeight + \"px\",\n      textDecoration: 'none',\n      cursor: 'pointer',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      paddingLeft: leftPadding,\n      paddingRight: rightPadding,\n      color: semanticColors.bodyText,\n      selectors: (_a = {}, _a[HighContrastSelector] = {\n        border: 0,\n        selectors: {\n          ':focus': {\n            border: '1px solid WindowText'\n          }\n        }\n      }, _a)\n    }, !isDisabled && {\n      selectors: {\n        '.ms-Nav-compositeLink:hover &': {\n          backgroundColor: semanticColors.bodyBackgroundHovered\n        }\n      }\n    }, isSelected && {\n      color: semanticColors.bodyTextChecked,\n      fontWeight: FontWeights.semibold,\n      backgroundColor: semanticColors.bodyBackgroundChecked,\n      selectors: {\n        '&:after': {\n          borderLeft: \"2px solid \" + palette.themePrimary,\n          content: '\"\"',\n          position: 'absolute',\n          top: 0,\n          right: 0,\n          bottom: 0,\n          left: 0,\n          pointerEvents: 'none'\n        }\n      }\n    }, isDisabled && {\n      color: semanticColors.disabledText\n    }, isButtonEntry && {\n      color: palette.themePrimary\n    }],\n    chevronButton: [classNames.chevronButton, getFocusStyle(theme), fonts.small, {\n      display: 'block',\n      textAlign: 'left',\n      lineHeight: navHeight + \"px\",\n      margin: '5px 0',\n      padding: \"0px, \" + rightPadding + \"px, 0px, \" + leftPaddingExpanded + \"px\",\n      border: 'none',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      cursor: 'pointer',\n      color: semanticColors.bodyText,\n      backgroundColor: 'transparent',\n      selectors: {\n        '&:visited': {\n          color: semanticColors.bodyText\n        }\n      }\n    }, isGroup && {\n      fontSize: fonts.large.fontSize,\n      width: '100%',\n      height: navHeight,\n      borderBottom: \"1px solid \" + semanticColors.bodyDivider\n    }, isLink && {\n      display: 'block',\n      width: leftPaddingExpanded - 2,\n      height: navHeight - 2,\n      position: 'absolute',\n      top: '1px',\n      left: position + \"px\",\n      zIndex: ZIndexes.Nav,\n      padding: 0,\n      margin: 0\n    }, isSelected && {\n      color: palette.themePrimary,\n      backgroundColor: palette.neutralLighterAlt,\n      selectors: {\n        '&:after': {\n          borderLeft: \"2px solid \" + palette.themePrimary,\n          content: '\"\"',\n          position: 'absolute',\n          top: 0,\n          right: 0,\n          bottom: 0,\n          left: 0,\n          pointerEvents: 'none'\n        }\n      }\n    }],\n    chevronIcon: [classNames.chevronIcon, {\n      position: 'absolute',\n      left: '8px',\n      height: navHeight,\n      lineHeight: navHeight + \"px\",\n      fontSize: fonts.small.fontSize,\n      transition: 'transform .1s linear'\n    }, isExpanded && {\n      transform: 'rotate(-180deg)'\n    }, isLink && {\n      top: 0\n    }],\n    navItem: [classNames.navItem, {\n      padding: 0\n    }],\n    navItems: [classNames.navItems, {\n      listStyleType: 'none',\n      padding: 0,\n      margin: 0\n    }],\n    group: [classNames.group, isExpanded && 'is-expanded'],\n    groupContent: [classNames.groupContent, {\n      display: 'none',\n      marginBottom: '40px'\n    }, AnimationClassNames.slideDownIn20, isExpanded && {\n      display: 'block'\n    }]\n  };\n};","map":{"version":3,"mappings":"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","names":["AnimationClassNames","getFocusStyle","ZIndexes","getGlobalClassNames","HighContrastSelector","FontWeights","GlobalClassNames","root","linkText","compositeLink","link","chevronButton","chevronIcon","navItem","navItems","group","groupContent","buttonStyles","textContainer","overflow","label","whiteSpace","textOverflow","getStyles","props","theme","isOnTop","isExpanded","isGroup","isLink","isSelected","isDisabled","isButtonEntry","_b","navHeight","position","_c","leftPadding","_d","leftPaddingExpanded","_e","rightPadding","semanticColors","fonts","classNames","className","medium","overflowY","userSelect","WebkitOverflowScrolling","slideRightIn40","margin","verticalAlign","textAlign","display","color","bodyText","disabledText","height","width","lineHeight","textDecoration","cursor","paddingLeft","paddingRight","selectors","_a","border","backgroundColor","bodyBackgroundHovered","bodyTextChecked","fontWeight","semibold","bodyBackgroundChecked","borderLeft","palette","themePrimary","content","top","right","bottom","left","pointerEvents","small","padding","fontSize","large","borderBottom","bodyDivider","zIndex","Nav","neutralLighterAlt","transition","transform","listStyleType","marginBottom","slideDownIn20"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\office-ui-fabric-react\\lib\\components\\src\\components\\Nav\\Nav.styles.ts"],"sourcesContent":["import { INavStyleProps, INavStyles } from './Nav.types';\nimport { IButtonStyles } from '../../Button';\nimport {\n  AnimationClassNames,\n  getFocusStyle,\n  ZIndexes,\n  getGlobalClassNames,\n  HighContrastSelector,\n  FontWeights,\n} from '../../Styling';\n\nconst GlobalClassNames = {\n  root: 'ms-Nav',\n  linkText: 'ms-Nav-linkText',\n  compositeLink: 'ms-Nav-compositeLink',\n  link: 'ms-Nav-link',\n  chevronButton: 'ms-Nav-chevronButton',\n  chevronIcon: 'ms-Nav-chevron',\n  navItem: 'ms-Nav-navItem',\n  navItems: 'ms-Nav-navItems',\n  group: 'ms-Nav-group',\n  groupContent: 'ms-Nav-groupContent',\n};\n\nexport const buttonStyles: IButtonStyles = {\n  textContainer: {\n    overflow: 'hidden',\n  },\n  label: {\n    whiteSpace: 'nowrap',\n    textOverflow: 'ellipsis',\n    overflow: 'hidden',\n  },\n};\n\nexport const getStyles = (props: INavStyleProps): INavStyles => {\n  const {\n    className,\n    theme,\n    isOnTop,\n    isExpanded,\n    isGroup,\n    isLink,\n    isSelected,\n    isDisabled,\n    isButtonEntry,\n    navHeight = 44,\n    position,\n    leftPadding = 20,\n    leftPaddingExpanded = 28,\n    rightPadding = 20,\n  } = props;\n\n  const { palette, semanticColors, fonts } = theme;\n\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  return {\n    root: [\n      classNames.root,\n      className,\n      fonts.medium,\n      {\n        overflowY: 'auto',\n        userSelect: 'none',\n        WebkitOverflowScrolling: 'touch',\n      },\n      isOnTop && [\n        {\n          position: 'absolute',\n        },\n        AnimationClassNames.slideRightIn40,\n      ],\n    ],\n    linkText: [\n      classNames.linkText,\n      {\n        margin: '0 4px',\n        overflow: 'hidden',\n        verticalAlign: 'middle',\n        textAlign: 'left',\n        textOverflow: 'ellipsis',\n      },\n    ],\n    compositeLink: [\n      classNames.compositeLink,\n      {\n        display: 'block',\n        position: 'relative',\n        color: semanticColors.bodyText,\n      },\n      isExpanded && 'is-expanded',\n      isSelected && 'is-selected',\n      isDisabled && 'is-disabled',\n      isDisabled && {\n        color: semanticColors.disabledText,\n      },\n    ],\n    link: [\n      classNames.link,\n      getFocusStyle(theme),\n      {\n        display: 'block',\n        position: 'relative',\n        height: navHeight,\n        width: '100%',\n        lineHeight: `${navHeight}px`,\n        textDecoration: 'none',\n        cursor: 'pointer',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        paddingLeft: leftPadding,\n        paddingRight: rightPadding,\n        color: semanticColors.bodyText,\n        selectors: {\n          [HighContrastSelector]: {\n            border: 0,\n            selectors: {\n              ':focus': {\n                border: '1px solid WindowText',\n              },\n            },\n          },\n        },\n      },\n      !isDisabled && {\n        selectors: {\n          '.ms-Nav-compositeLink:hover &': {\n            backgroundColor: semanticColors.bodyBackgroundHovered,\n          },\n        },\n      },\n      isSelected && {\n        color: semanticColors.bodyTextChecked,\n        fontWeight: FontWeights.semibold, // todo: get from theme\n        backgroundColor: semanticColors.bodyBackgroundChecked,\n        selectors: {\n          '&:after': {\n            borderLeft: `2px solid ${palette.themePrimary}`,\n            content: '\"\"',\n            position: 'absolute',\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0,\n            pointerEvents: 'none',\n          },\n        },\n      },\n      isDisabled && {\n        color: semanticColors.disabledText,\n      },\n      isButtonEntry && {\n        color: palette.themePrimary,\n      },\n    ],\n    chevronButton: [\n      classNames.chevronButton,\n      getFocusStyle(theme),\n      fonts.small,\n      {\n        display: 'block',\n        textAlign: 'left',\n        lineHeight: `${navHeight}px`,\n        margin: '5px 0',\n        padding: `0px, ${rightPadding}px, 0px, ${leftPaddingExpanded}px`,\n        border: 'none',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        cursor: 'pointer',\n        color: semanticColors.bodyText,\n        backgroundColor: 'transparent',\n        selectors: {\n          '&:visited': {\n            color: semanticColors.bodyText,\n          },\n        },\n      },\n      isGroup && {\n        fontSize: fonts.large.fontSize,\n        width: '100%',\n        height: navHeight,\n        borderBottom: `1px solid ${semanticColors.bodyDivider}`,\n      },\n      isLink && {\n        display: 'block',\n        width: leftPaddingExpanded - 2,\n        height: navHeight - 2,\n        position: 'absolute',\n        top: '1px',\n        left: `${position}px`,\n        zIndex: ZIndexes.Nav,\n        padding: 0,\n        margin: 0,\n      },\n      isSelected && {\n        color: palette.themePrimary,\n        backgroundColor: palette.neutralLighterAlt,\n        selectors: {\n          '&:after': {\n            borderLeft: `2px solid ${palette.themePrimary}`,\n            content: '\"\"',\n            position: 'absolute',\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0,\n            pointerEvents: 'none',\n          },\n        },\n      },\n    ],\n    chevronIcon: [\n      classNames.chevronIcon,\n      {\n        position: 'absolute',\n        left: '8px',\n        height: navHeight,\n        lineHeight: `${navHeight}px`,\n        fontSize: fonts.small.fontSize,\n        transition: 'transform .1s linear',\n      },\n      isExpanded && {\n        transform: 'rotate(-180deg)',\n      },\n      isLink && {\n        top: 0,\n      },\n    ],\n    navItem: [\n      classNames.navItem,\n      {\n        padding: 0,\n      },\n    ],\n    navItems: [\n      classNames.navItems,\n      {\n        listStyleType: 'none',\n        padding: 0,\n        margin: 0, // remove default <UL> styles\n      },\n    ],\n    group: [classNames.group, isExpanded && 'is-expanded'],\n    groupContent: [\n      classNames.groupContent,\n      {\n        display: 'none',\n        marginBottom: '40px',\n      },\n      AnimationClassNames.slideDownIn20,\n      isExpanded && {\n        display: 'block',\n      },\n    ],\n  };\n};\n"]},"metadata":{},"sourceType":"module"}