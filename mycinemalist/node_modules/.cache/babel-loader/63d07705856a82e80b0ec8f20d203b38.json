{"ast":null,"code":"import { findElementRecursive } from './findElementRecursive';\n/**\n * Determines if an element, or any of its ancestors, contain the given attribute\n * @param element - element to start searching at\n * @param attribute - the attribute to search for\n * @returns the value of the first instance found\n */\n\nexport function elementContainsAttribute(element, attribute) {\n  var elementMatch = findElementRecursive(element, function (testElement) {\n    return testElement.hasAttribute(attribute);\n  });\n  return elementMatch && elementMatch.getAttribute(attribute);\n}","map":{"version":3,"mappings":"AAAA,SAASA,oBAAT,QAAqC,wBAArC;AAEA;;;;;;;AAMA,OAAM,SAAUC,wBAAV,CAAmCC,OAAnC,EAAyDC,SAAzD,EAA0E;AAC9E,MAAMC,YAAY,GAAGJ,oBAAoB,CAACE,OAAD,EAAU,UAACG,WAAD,EAAyB;AAAK,sBAAW,CAACC,YAAZ,CAAyBH,SAAzB;AAAmC,GAA3E,CAAzC;AAEA,SAAOC,YAAY,IAAIA,YAAY,CAACG,YAAb,CAA0BJ,SAA1B,CAAvB;AACD","names":["findElementRecursive","elementContainsAttribute","element","attribute","elementMatch","testElement","hasAttribute","getAttribute"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\@fluentui\\dom-utilities\\src\\elementContainsAttribute.ts"],"sourcesContent":["import { findElementRecursive } from './findElementRecursive';\n\n/**\n * Determines if an element, or any of its ancestors, contain the given attribute\n * @param element - element to start searching at\n * @param attribute - the attribute to search for\n * @returns the value of the first instance found\n */\nexport function elementContainsAttribute(element: HTMLElement, attribute: string): string | null {\n  const elementMatch = findElementRecursive(element, (testElement: HTMLElement) => testElement.hasAttribute(attribute));\n\n  return elementMatch && elementMatch.getAttribute(attribute);\n}\n"]},"metadata":{},"sourceType":"module"}