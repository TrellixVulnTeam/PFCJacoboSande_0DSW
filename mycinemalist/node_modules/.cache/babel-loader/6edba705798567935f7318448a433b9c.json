{"ast":null,"code":"import { getParent } from './getParent';\n/**\n * Determines whether or not a parent element contains a given child element.\n * If `allowVirtualParents` is true, this method may return `true` if the child\n * has the parent in its virtual element hierarchy.\n *\n * @public\n */\n\nexport function elementContains(parent, child, allowVirtualParents) {\n  if (allowVirtualParents === void 0) {\n    allowVirtualParents = true;\n  }\n\n  var isContained = false;\n\n  if (parent && child) {\n    if (allowVirtualParents) {\n      if (parent === child) {\n        isContained = true;\n      } else {\n        isContained = false;\n\n        while (child) {\n          var nextParent = getParent(child);\n\n          if (nextParent === parent) {\n            isContained = true;\n            break;\n          }\n\n          child = nextParent;\n        }\n      }\n    } else if (parent.contains) {\n      isContained = parent.contains(child);\n    }\n  }\n\n  return isContained;\n}","map":{"version":3,"mappings":"AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA;;;;;;;;AAOA,OAAM,SAAUC,eAAV,CACJC,MADI,EAEJC,KAFI,EAGJC,mBAHI,EAG+B;EAAnC;IAAAA;EAAmC;;EAEnC,IAAIC,WAAW,GAAG,KAAlB;;EAEA,IAAIH,MAAM,IAAIC,KAAd,EAAqB;IACnB,IAAIC,mBAAJ,EAAyB;MACvB,IAAIF,MAAM,KAAKC,KAAf,EAAsB;QACpBE,WAAW,GAAG,IAAd;MACD,CAFD,MAEO;QACLA,WAAW,GAAG,KAAd;;QAEA,OAAOF,KAAP,EAAc;UACZ,IAAMG,UAAU,GAAuBN,SAAS,CAACG,KAAD,CAAhD;;UAEA,IAAIG,UAAU,KAAKJ,MAAnB,EAA2B;YACzBG,WAAW,GAAG,IAAd;YACA;UACD;;UAEDF,KAAK,GAAGG,UAAR;QACD;MACF;IACF,CAjBD,MAiBO,IAAIJ,MAAM,CAACK,QAAX,EAAqB;MAC1BF,WAAW,GAAGH,MAAM,CAACK,QAAP,CAAgBJ,KAAhB,CAAd;IACD;EACF;;EAED,OAAOE,WAAP;AACD","names":["getParent","elementContains","parent","child","allowVirtualParents","isContained","nextParent","contains"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\office-ui-fabric-react\\node_modules\\@fluentui\\dom-utilities\\src\\elementContains.ts"],"sourcesContent":["import { getParent } from './getParent';\n/**\n * Determines whether or not a parent element contains a given child element.\n * If `allowVirtualParents` is true, this method may return `true` if the child\n * has the parent in its virtual element hierarchy.\n *\n * @public\n */\nexport function elementContains(\n  parent: HTMLElement | null,\n  child: HTMLElement | null,\n  allowVirtualParents: boolean = true,\n): boolean {\n  let isContained = false;\n\n  if (parent && child) {\n    if (allowVirtualParents) {\n      if (parent === child) {\n        isContained = true;\n      } else {\n        isContained = false;\n\n        while (child) {\n          const nextParent: HTMLElement | null = getParent(child);\n\n          if (nextParent === parent) {\n            isContained = true;\n            break;\n          }\n\n          child = nextParent;\n        }\n      }\n    } else if (parent.contains) {\n      isContained = parent.contains(child);\n    }\n  }\n\n  return isContained;\n}\n"]},"metadata":{},"sourceType":"module"}