{"ast":null,"code":"import { __spreadArrays } from \"tslib\";\nimport { AnimationVariables, FontWeights, getGlobalClassNames, keyframes } from '../../Styling';\nimport { memoizeFunction } from '../../Utilities';\nvar globalClassNames = {\n  root: 'ms-TeachingBubble',\n  body: 'ms-TeachingBubble-body',\n  bodyContent: 'ms-TeachingBubble-bodycontent',\n  closeButton: 'ms-TeachingBubble-closebutton',\n  content: 'ms-TeachingBubble-content',\n  footer: 'ms-TeachingBubble-footer',\n  header: 'ms-TeachingBubble-header',\n  headerIsCondensed: 'ms-TeachingBubble-header--condensed',\n  headerIsSmall: 'ms-TeachingBubble-header--small',\n  headerIsLarge: 'ms-TeachingBubble-header--large',\n  headline: 'ms-TeachingBubble-headline',\n  image: 'ms-TeachingBubble-image',\n  primaryButton: 'ms-TeachingBubble-primaryButton',\n  secondaryButton: 'ms-TeachingBubble-secondaryButton',\n  subText: 'ms-TeachingBubble-subText',\n  // TODO: Button global class name usage should be converted to a styles function once\n  //        Button supports JS styling, which means these button names can be removed.\n  button: 'ms-Button',\n  buttonLabel: 'ms-Button-label'\n};\nvar opacityFadeIn = memoizeFunction(function () {\n  return keyframes({\n    '0%': {\n      opacity: 0,\n      animationTimingFunction: AnimationVariables.easeFunction1,\n      transform: 'scale3d(.90,.90,.90)'\n    },\n    '100%': {\n      opacity: 1,\n      transform: 'scale3d(1,1,1)'\n    }\n  });\n});\n\nvar rootStyle = function rootStyle(isWide, calloutProps) {\n  var _a = calloutProps || {},\n      calloutWidth = _a.calloutWidth,\n      calloutMaxWidth = _a.calloutMaxWidth;\n\n  return [{\n    display: 'block',\n    maxWidth: 364,\n    border: 0,\n    outline: 'transparent',\n    width: calloutWidth || 'calc(100% + 1px)',\n    animationName: \"\" + opacityFadeIn(),\n    animationDuration: '300ms',\n    animationTimingFunction: 'linear',\n    animationFillMode: 'both'\n  }, isWide && {\n    maxWidth: calloutMaxWidth || 456\n  }];\n};\n\nvar headerStyle = function headerStyle(classNames, hasCondensedHeadline, hasSmallHeadline) {\n  if (hasCondensedHeadline) {\n    return [classNames.headerIsCondensed, {\n      marginBottom: 14\n    }];\n  }\n\n  return [hasSmallHeadline && classNames.headerIsSmall, !hasSmallHeadline && classNames.headerIsLarge, {\n    selectors: {\n      ':not(:last-child)': {\n        marginBottom: 14\n      }\n    }\n  }];\n};\n\nexport var getStyles = function getStyles(props) {\n  var _a, _b, _c;\n\n  var hasCondensedHeadline = props.hasCondensedHeadline,\n      hasSmallHeadline = props.hasSmallHeadline,\n      hasCloseButton = props.hasCloseButton,\n      hasHeadline = props.hasHeadline,\n      isWide = props.isWide,\n      primaryButtonClassName = props.primaryButtonClassName,\n      secondaryButtonClassName = props.secondaryButtonClassName,\n      theme = props.theme,\n      _d = props.calloutProps,\n      calloutProps = _d === void 0 ? {\n    className: undefined,\n    theme: theme\n  } : _d;\n  var hasLargeHeadline = !hasCondensedHeadline && !hasSmallHeadline;\n  var palette = theme.palette,\n      semanticColors = theme.semanticColors,\n      fonts = theme.fonts;\n  var classNames = getGlobalClassNames(globalClassNames, theme);\n  return {\n    root: [classNames.root, fonts.medium, calloutProps.className],\n    body: [classNames.body, hasCloseButton && !hasHeadline && {\n      marginRight: 24\n    }, {\n      selectors: {\n        ':not(:last-child)': {\n          marginBottom: 20\n        }\n      }\n    }],\n    bodyContent: [classNames.bodyContent, {\n      padding: '20px 24px 20px 24px'\n    }],\n    closeButton: [classNames.closeButton, {\n      position: 'absolute',\n      right: 0,\n      top: 0,\n      margin: '15px 15px 0 0',\n      borderRadius: 0,\n      color: palette.white,\n      fontSize: fonts.small.fontSize,\n      selectors: {\n        ':hover': {\n          background: palette.themeDarkAlt,\n          color: palette.white\n        },\n        ':active': {\n          background: palette.themeDark,\n          color: palette.white\n        },\n        ':focus': {\n          border: \"1px solid \" + semanticColors.variantBorder\n        }\n      }\n    }],\n    content: __spreadArrays([classNames.content], rootStyle(isWide), [isWide && {\n      display: 'flex'\n    }]),\n    footer: [classNames.footer, {\n      display: 'flex',\n      flex: 'auto',\n      alignItems: 'center',\n      color: palette.white,\n      selectors: (_a = {}, // TODO: global class name usage should be converted to a styles function once Button supports JS styling\n      _a[\".\" + classNames.button + \":not(:first-child)\"] = {\n        marginLeft: 10\n      }, _a)\n    }],\n    header: __spreadArrays([classNames.header], headerStyle(classNames, hasCondensedHeadline, hasSmallHeadline), [hasCloseButton && {\n      marginRight: 24\n    }, (hasCondensedHeadline || hasSmallHeadline) && [fonts.medium, {\n      fontWeight: FontWeights.semibold\n    }]]),\n    headline: [classNames.headline, {\n      margin: 0,\n      color: palette.white,\n      fontWeight: FontWeights.semibold\n    }, hasLargeHeadline && [{\n      fontSize: fonts.xLarge.fontSize\n    }]],\n    imageContent: [classNames.header, classNames.image, isWide && {\n      display: 'flex',\n      alignItems: 'center',\n      maxWidth: 154\n    }],\n    primaryButton: [classNames.primaryButton, primaryButtonClassName, {\n      backgroundColor: palette.white,\n      borderColor: palette.white,\n      color: palette.themePrimary,\n      whiteSpace: 'nowrap',\n      selectors: (_b = {}, // TODO: global class name usage should be converted to a styles function once Button supports JS styling\n      _b[\".\" + classNames.buttonLabel] = fonts.medium, _b[':hover'] = {\n        backgroundColor: palette.themeLighter,\n        borderColor: palette.themeLighter,\n        color: palette.themePrimary\n      }, _b[':focus'] = {\n        backgroundColor: palette.themeLighter,\n        borderColor: palette.white\n      }, _b[':active'] = {\n        backgroundColor: palette.white,\n        borderColor: palette.white,\n        color: palette.themePrimary\n      }, _b)\n    }],\n    secondaryButton: [classNames.secondaryButton, secondaryButtonClassName, {\n      backgroundColor: palette.themePrimary,\n      borderColor: palette.white,\n      whiteSpace: 'nowrap',\n      selectors: (_c = {}, // TODO: global class name usage should be converted to a styles function once Button supports JS styling\n      _c[\".\" + classNames.buttonLabel] = [fonts.medium, {\n        color: palette.white\n      }], _c['&:hover, &:focus'] = {\n        backgroundColor: palette.themeDarkAlt,\n        borderColor: palette.white\n      }, _c[':active'] = {\n        backgroundColor: palette.themePrimary,\n        borderColor: palette.white\n      }, _c)\n    }],\n    subText: [classNames.subText, {\n      margin: 0,\n      fontSize: fonts.medium.fontSize,\n      color: palette.white,\n      fontWeight: FontWeights.regular\n    }],\n    subComponentStyles: {\n      callout: {\n        root: __spreadArrays(rootStyle(isWide, calloutProps), [fonts.medium]),\n        beak: [{\n          background: palette.themePrimary\n        }],\n        calloutMain: [{\n          background: palette.themePrimary\n        }]\n      }\n    }\n  };\n};","map":{"version":3,"mappings":"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","names":["AnimationVariables","FontWeights","getGlobalClassNames","keyframes","memoizeFunction","globalClassNames","root","body","bodyContent","closeButton","content","footer","header","headerIsCondensed","headerIsSmall","headerIsLarge","headline","image","primaryButton","secondaryButton","subText","button","buttonLabel","opacityFadeIn","opacity","animationTimingFunction","easeFunction1","transform","rootStyle","isWide","calloutProps","calloutWidth","calloutMaxWidth","display","maxWidth","border","outline","width","animationName","animationDuration","animationFillMode","headerStyle","classNames","hasCondensedHeadline","hasSmallHeadline","marginBottom","selectors","getStyles","props","hasCloseButton","hasHeadline","primaryButtonClassName","secondaryButtonClassName","theme","_d","className","hasLargeHeadline","semanticColors","fonts","medium","marginRight","padding","position","right","top","margin","borderRadius","color","palette","white","fontSize","small","background","themeDarkAlt","themeDark","variantBorder","flex","alignItems","_a","marginLeft","fontWeight","semibold","xLarge","imageContent","backgroundColor","borderColor","themePrimary","whiteSpace","_b","themeLighter","_c","regular","subComponentStyles","callout","beak","calloutMain"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\office-ui-fabric-react\\lib\\components\\src\\components\\TeachingBubble\\TeachingBubble.styles.ts"],"sourcesContent":["import { ITeachingBubbleStyleProps, ITeachingBubbleStyles } from './TeachingBubble.types';\nimport { ICalloutContentStyleProps } from '../../Callout';\nimport {\n  AnimationVariables,\n  FontWeights,\n  getGlobalClassNames,\n  GlobalClassNames,\n  IStyle,\n  keyframes,\n} from '../../Styling';\nimport { memoizeFunction } from '../../Utilities';\n\nconst globalClassNames = {\n  root: 'ms-TeachingBubble',\n  body: 'ms-TeachingBubble-body',\n  bodyContent: 'ms-TeachingBubble-bodycontent',\n  closeButton: 'ms-TeachingBubble-closebutton',\n  content: 'ms-TeachingBubble-content',\n  footer: 'ms-TeachingBubble-footer',\n  header: 'ms-TeachingBubble-header',\n  headerIsCondensed: 'ms-TeachingBubble-header--condensed',\n  headerIsSmall: 'ms-TeachingBubble-header--small',\n  headerIsLarge: 'ms-TeachingBubble-header--large',\n  headline: 'ms-TeachingBubble-headline',\n  image: 'ms-TeachingBubble-image',\n  primaryButton: 'ms-TeachingBubble-primaryButton',\n  secondaryButton: 'ms-TeachingBubble-secondaryButton',\n  subText: 'ms-TeachingBubble-subText',\n\n  // TODO: Button global class name usage should be converted to a styles function once\n  //        Button supports JS styling, which means these button names can be removed.\n  button: 'ms-Button',\n  buttonLabel: 'ms-Button-label',\n};\n\nconst opacityFadeIn = memoizeFunction(() =>\n  keyframes({\n    '0%': {\n      opacity: 0,\n      animationTimingFunction: AnimationVariables.easeFunction1,\n      transform: 'scale3d(.90,.90,.90)',\n    },\n    '100%': {\n      opacity: 1,\n      transform: 'scale3d(1,1,1)',\n    },\n  }),\n);\n\nconst rootStyle = (isWide?: boolean, calloutProps?: ICalloutContentStyleProps): IStyle[] => {\n  const { calloutWidth, calloutMaxWidth } = calloutProps || {};\n\n  return [\n    {\n      display: 'block',\n      maxWidth: 364,\n      border: 0,\n      outline: 'transparent',\n      width: calloutWidth || 'calc(100% + 1px)',\n      animationName: `${opacityFadeIn()}`,\n      animationDuration: '300ms',\n      animationTimingFunction: 'linear',\n      animationFillMode: 'both',\n    },\n    isWide && {\n      maxWidth: calloutMaxWidth || 456,\n    },\n  ];\n};\n\nconst headerStyle = (\n  classNames: Partial<GlobalClassNames<typeof globalClassNames>>,\n  hasCondensedHeadline?: boolean,\n  hasSmallHeadline?: boolean,\n): IStyle[] => {\n  if (hasCondensedHeadline) {\n    return [\n      classNames.headerIsCondensed,\n      {\n        marginBottom: 14,\n      },\n    ];\n  }\n\n  return [\n    hasSmallHeadline && classNames.headerIsSmall,\n    !hasSmallHeadline && classNames.headerIsLarge,\n    {\n      selectors: {\n        ':not(:last-child)': {\n          marginBottom: 14,\n        },\n      },\n    },\n  ];\n};\n\nexport const getStyles = (props: ITeachingBubbleStyleProps): ITeachingBubbleStyles => {\n  const {\n    hasCondensedHeadline,\n    hasSmallHeadline,\n    hasCloseButton,\n    hasHeadline,\n    isWide,\n    primaryButtonClassName,\n    secondaryButtonClassName,\n    theme,\n    calloutProps = { className: undefined, theme },\n  } = props;\n  const hasLargeHeadline: boolean = !hasCondensedHeadline && !hasSmallHeadline;\n  const { palette, semanticColors, fonts } = theme;\n  const classNames = getGlobalClassNames(globalClassNames, theme);\n\n  return {\n    root: [classNames.root, fonts.medium, calloutProps.className],\n    body: [\n      classNames.body,\n      hasCloseButton && !hasHeadline && { marginRight: 24 },\n      {\n        selectors: {\n          ':not(:last-child)': {\n            marginBottom: 20,\n          },\n        },\n      },\n    ],\n    bodyContent: [\n      classNames.bodyContent,\n      {\n        padding: '20px 24px 20px 24px',\n      },\n    ],\n    closeButton: [\n      classNames.closeButton,\n      {\n        position: 'absolute',\n        right: 0,\n        top: 0,\n        margin: '15px 15px 0 0',\n        borderRadius: 0,\n        color: palette.white,\n        fontSize: fonts.small.fontSize,\n        selectors: {\n          ':hover': {\n            background: palette.themeDarkAlt,\n            color: palette.white,\n          },\n          ':active': {\n            background: palette.themeDark,\n            color: palette.white,\n          },\n          ':focus': {\n            border: `1px solid ${semanticColors.variantBorder}`,\n          },\n        },\n      },\n    ],\n    content: [\n      classNames.content,\n      ...rootStyle(isWide),\n      isWide && {\n        display: 'flex',\n      },\n    ],\n    footer: [\n      classNames.footer,\n      {\n        display: 'flex',\n        flex: 'auto',\n        alignItems: 'center',\n        color: palette.white,\n        selectors: {\n          // TODO: global class name usage should be converted to a styles function once Button supports JS styling\n          [`.${classNames.button}:not(:first-child)`]: {\n            marginLeft: 10,\n          },\n        },\n      },\n    ],\n    header: [\n      classNames.header,\n      ...headerStyle(classNames, hasCondensedHeadline, hasSmallHeadline),\n      hasCloseButton && { marginRight: 24 },\n      (hasCondensedHeadline || hasSmallHeadline) && [\n        fonts.medium,\n        {\n          fontWeight: FontWeights.semibold,\n        },\n      ],\n    ],\n    headline: [\n      classNames.headline,\n      {\n        margin: 0,\n        color: palette.white,\n        fontWeight: FontWeights.semibold,\n      },\n      hasLargeHeadline && [\n        {\n          fontSize: fonts.xLarge.fontSize,\n        },\n      ],\n    ],\n    imageContent: [\n      classNames.header,\n      classNames.image,\n      isWide && {\n        display: 'flex',\n        alignItems: 'center',\n        maxWidth: 154,\n      },\n    ],\n    primaryButton: [\n      classNames.primaryButton,\n      primaryButtonClassName,\n      {\n        backgroundColor: palette.white,\n        borderColor: palette.white,\n        color: palette.themePrimary,\n        whiteSpace: 'nowrap',\n        selectors: {\n          // TODO: global class name usage should be converted to a styles function once Button supports JS styling\n          [`.${classNames.buttonLabel}`]: fonts.medium,\n          ':hover': {\n            backgroundColor: palette.themeLighter,\n            borderColor: palette.themeLighter,\n            color: palette.themePrimary,\n          },\n          ':focus': {\n            backgroundColor: palette.themeLighter,\n            borderColor: palette.white,\n          },\n          ':active': {\n            backgroundColor: palette.white,\n            borderColor: palette.white,\n            color: palette.themePrimary,\n          },\n        },\n      },\n    ],\n    secondaryButton: [\n      classNames.secondaryButton,\n      secondaryButtonClassName,\n      {\n        backgroundColor: palette.themePrimary,\n        borderColor: palette.white,\n        whiteSpace: 'nowrap',\n        selectors: {\n          // TODO: global class name usage should be converted to a styles function once Button supports JS styling\n          [`.${classNames.buttonLabel}`]: [\n            fonts.medium,\n            {\n              color: palette.white,\n            },\n          ],\n          '&:hover, &:focus': {\n            backgroundColor: palette.themeDarkAlt,\n            borderColor: palette.white,\n          },\n          ':active': {\n            backgroundColor: palette.themePrimary,\n            borderColor: palette.white,\n          },\n        },\n      },\n    ],\n    subText: [\n      classNames.subText,\n      {\n        margin: 0,\n        fontSize: fonts.medium.fontSize,\n        color: palette.white,\n        fontWeight: FontWeights.regular,\n      },\n    ],\n    subComponentStyles: {\n      callout: {\n        root: [...rootStyle(isWide, calloutProps), fonts.medium],\n        beak: [\n          {\n            background: palette.themePrimary,\n          },\n        ],\n        calloutMain: [\n          {\n            background: palette.themePrimary,\n          },\n        ],\n      },\n    },\n  };\n};\n"]},"metadata":{},"sourceType":"module"}