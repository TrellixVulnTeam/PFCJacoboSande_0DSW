{"ast":null,"code":"var _vendorSettings;\n\nexport function getVendorSettings() {\n  if (!_vendorSettings) {\n    var doc = typeof document !== 'undefined' ? document : undefined;\n    var nav = typeof navigator !== 'undefined' ? navigator : undefined;\n    var userAgent = nav ? nav.userAgent.toLowerCase() : undefined;\n\n    if (!doc) {\n      _vendorSettings = {\n        isWebkit: true,\n        isMoz: true,\n        isOpera: true,\n        isMs: true\n      };\n    } else {\n      _vendorSettings = {\n        isWebkit: !!(doc && 'WebkitAppearance' in doc.documentElement.style),\n        isMoz: !!(userAgent && userAgent.indexOf('firefox') > -1),\n        isOpera: !!(userAgent && userAgent.indexOf('opera') > -1),\n        isMs: !!(nav && (/rv:11.0/i.test(nav.userAgent) || /Edge\\/\\d./i.test(navigator.userAgent)))\n      };\n    }\n  }\n\n  return _vendorSettings;\n}\n/**\n * Sets the vendor settings for prefixing and vendor specific operations.\n */\n\nexport function setVendorSettings(vendorSettings) {\n  _vendorSettings = vendorSettings;\n}","map":{"version":3,"mappings":"AAOA,IAAIA,eAAJ;;AAEA,OAAM,SAAUC,iBAAV,GAA2B;AAC/B,MAAI,CAACD,eAAL,EAAsB;AACpB,QAAME,GAAG,GAAG,OAAOC,QAAP,KAAoB,WAApB,GAAkCA,QAAlC,GAA6CC,SAAzD;AACA,QAAMC,GAAG,GAAG,OAAOC,SAAP,KAAqB,WAArB,GAAmCA,SAAnC,GAA+CF,SAA3D;AACA,QAAMG,SAAS,GAAGF,GAAG,GAAGA,GAAG,CAACE,SAAJ,CAAcC,WAAd,EAAH,GAAiCJ,SAAtD;;AAEA,QAAI,CAACF,GAAL,EAAU;AACRF,qBAAe,GAAG;AAChBS,gBAAQ,EAAE,IADM;AAEhBC,aAAK,EAAE,IAFS;AAGhBC,eAAO,EAAE,IAHO;AAIhBC,YAAI,EAAE;AAJU,OAAlB;AAMD,KAPD,MAOO;AACLZ,qBAAe,GAAG;AAChBS,gBAAQ,EAAE,CAAC,EAAEP,GAAG,IAAI,sBAAsBA,GAAG,CAACW,eAAJ,CAAoBC,KAAnD,CADK;AAEhBJ,aAAK,EAAE,CAAC,EAAEH,SAAS,IAAIA,SAAS,CAACQ,OAAV,CAAkB,SAAlB,IAA+B,CAAC,CAA/C,CAFQ;AAGhBJ,eAAO,EAAE,CAAC,EAAEJ,SAAS,IAAIA,SAAS,CAACQ,OAAV,CAAkB,OAAlB,IAA6B,CAAC,CAA7C,CAHM;AAIhBH,YAAI,EAAE,CAAC,EAAEP,GAAG,KAAK,WAAWW,IAAX,CAAgBX,GAAG,CAACE,SAApB,KAAkC,aAAaS,IAAb,CAAkBV,SAAS,CAACC,SAA5B,CAAvC,CAAL;AAJS,OAAlB;AAMD;AACF;;AAED,SAAOP,eAAP;AACD;AAED;;;;AAGA,OAAM,SAAUiB,iBAAV,CAA4BC,cAA5B,EAA4D;AAChElB,iBAAe,GAAGkB,cAAlB;AACD","names":["_vendorSettings","getVendorSettings","doc","document","undefined","nav","navigator","userAgent","toLowerCase","isWebkit","isMoz","isOpera","isMs","documentElement","style","indexOf","test","setVendorSettings","vendorSettings"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\@uifabric\\merge-styles\\src\\getVendorSettings.ts"],"sourcesContent":["export interface IVendorSettings {\n  isWebkit?: boolean;\n  isMoz?: boolean;\n  isMs?: boolean;\n  isOpera?: boolean;\n}\n\nlet _vendorSettings: IVendorSettings | undefined;\n\nexport function getVendorSettings(): IVendorSettings {\n  if (!_vendorSettings) {\n    const doc = typeof document !== 'undefined' ? document : undefined;\n    const nav = typeof navigator !== 'undefined' ? navigator : undefined;\n    const userAgent = nav ? nav.userAgent.toLowerCase() : undefined;\n\n    if (!doc) {\n      _vendorSettings = {\n        isWebkit: true,\n        isMoz: true,\n        isOpera: true,\n        isMs: true,\n      };\n    } else {\n      _vendorSettings = {\n        isWebkit: !!(doc && 'WebkitAppearance' in doc.documentElement.style),\n        isMoz: !!(userAgent && userAgent.indexOf('firefox') > -1),\n        isOpera: !!(userAgent && userAgent.indexOf('opera') > -1),\n        isMs: !!(nav && (/rv:11.0/i.test(nav.userAgent) || /Edge\\/\\d./i.test(navigator.userAgent))),\n      };\n    }\n  }\n\n  return _vendorSettings;\n}\n\n/**\n * Sets the vendor settings for prefixing and vendor specific operations.\n */\nexport function setVendorSettings(vendorSettings?: IVendorSettings): void {\n  _vendorSettings = vendorSettings;\n}\n"]},"metadata":{},"sourceType":"module"}