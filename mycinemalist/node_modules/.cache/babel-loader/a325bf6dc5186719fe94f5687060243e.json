{"ast":null,"code":"/*! Buttons for DataTables 1.7.1\n * Â©2016-2021 SpryMedia Ltd - datatables.net/license\n */\n(function (factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD\n    define(['jquery', 'datatables.net'], function ($) {\n      return factory($, window, document);\n    });\n  } else if (typeof exports === 'object') {\n    // CommonJS\n    module.exports = function (root, $) {\n      if (!root) {\n        root = window;\n      }\n\n      if (!$ || !$.fn.dataTable) {\n        $ = require('datatables.net')(root, $).$;\n      }\n\n      return factory($, root, root.document);\n    };\n  } else {\n    // Browser\n    factory(jQuery, window, document);\n  }\n})(function ($, window, document, undefined) {\n  'use strict';\n\n  var DataTable = $.fn.dataTable; // Used for namespacing events added to the document by each instance, so they\n  // can be removed on destroy\n\n  var _instCounter = 0; // Button namespacing counter for namespacing events on individual buttons\n\n  var _buttonCounter = 0;\n  var _dtButtons = DataTable.ext.buttons; // Allow for jQuery slim\n\n  function _fadeIn(el, duration, fn) {\n    if ($.fn.animate) {\n      el.stop().fadeIn(duration, fn);\n    } else {\n      el.css('display', 'block');\n\n      if (fn) {\n        fn.call(el);\n      }\n    }\n  }\n\n  function _fadeOut(el, duration, fn) {\n    if ($.fn.animate) {\n      el.stop().fadeOut(duration, fn);\n    } else {\n      el.css('display', 'none');\n\n      if (fn) {\n        fn.call(el);\n      }\n    }\n  }\n  /**\n   * [Buttons description]\n   * @param {[type]}\n   * @param {[type]}\n   */\n\n\n  var Buttons = function Buttons(dt, config) {\n    // If not created with a `new` keyword then we return a wrapper function that\n    // will take the settings object for a DT. This allows easy use of new instances\n    // with the `layout` option - e.g. `topLeft: $.fn.dataTable.Buttons( ... )`.\n    if (!(this instanceof Buttons)) {\n      return function (settings) {\n        return new Buttons(settings, dt).container();\n      };\n    } // If there is no config set it to an empty object\n\n\n    if (typeof config === 'undefined') {\n      config = {};\n    } // Allow a boolean true for defaults\n\n\n    if (config === true) {\n      config = {};\n    } // For easy configuration of buttons an array can be given\n\n\n    if (Array.isArray(config)) {\n      config = {\n        buttons: config\n      };\n    }\n\n    this.c = $.extend(true, {}, Buttons.defaults, config); // Don't want a deep copy for the buttons\n\n    if (config.buttons) {\n      this.c.buttons = config.buttons;\n    }\n\n    this.s = {\n      dt: new DataTable.Api(dt),\n      buttons: [],\n      listenKeys: '',\n      namespace: 'dtb' + _instCounter++\n    };\n    this.dom = {\n      container: $('<' + this.c.dom.container.tag + '/>').addClass(this.c.dom.container.className)\n    };\n\n    this._constructor();\n  };\n\n  $.extend(Buttons.prototype, {\n    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n     * Public methods\n     */\n\n    /**\n     * Get the action of a button\n     * @param  {int|string} Button index\n     * @return {function}\n     */\n\n    /**\n    * Set the action of a button\n    * @param  {node} node Button element\n    * @param  {function} action Function to set\n    * @return {Buttons} Self for chaining\n    */\n    action: function action(node, _action) {\n      var button = this._nodeToButton(node);\n\n      if (_action === undefined) {\n        return button.conf.action;\n      }\n\n      button.conf.action = _action;\n      return this;\n    },\n\n    /**\n     * Add an active class to the button to make to look active or get current\n     * active state.\n     * @param  {node} node Button element\n     * @param  {boolean} [flag] Enable / disable flag\n     * @return {Buttons} Self for chaining or boolean for getter\n     */\n    active: function active(node, flag) {\n      var button = this._nodeToButton(node);\n\n      var klass = this.c.dom.button.active;\n      var jqNode = $(button.node);\n\n      if (flag === undefined) {\n        return jqNode.hasClass(klass);\n      }\n\n      jqNode.toggleClass(klass, flag === undefined ? true : flag);\n      return this;\n    },\n\n    /**\n     * Add a new button\n     * @param {object} config Button configuration object, base string name or function\n     * @param {int|string} [idx] Button index for where to insert the button\n     * @return {Buttons} Self for chaining\n     */\n    add: function add(config, idx) {\n      var buttons = this.s.buttons;\n\n      if (typeof idx === 'string') {\n        var split = idx.split('-');\n        var base = this.s;\n\n        for (var i = 0, ien = split.length - 1; i < ien; i++) {\n          base = base.buttons[split[i] * 1];\n        }\n\n        buttons = base.buttons;\n        idx = split[split.length - 1] * 1;\n      }\n\n      this._expandButton(buttons, config, base !== undefined, idx);\n\n      this._draw();\n\n      return this;\n    },\n\n    /**\n     * Get the container node for the buttons\n     * @return {jQuery} Buttons node\n     */\n    container: function container() {\n      return this.dom.container;\n    },\n\n    /**\n     * Disable a button\n     * @param  {node} node Button node\n     * @return {Buttons} Self for chaining\n     */\n    disable: function disable(node) {\n      var button = this._nodeToButton(node);\n\n      $(button.node).addClass(this.c.dom.button.disabled).attr('disabled', true);\n      return this;\n    },\n\n    /**\n     * Destroy the instance, cleaning up event handlers and removing DOM\n     * elements\n     * @return {Buttons} Self for chaining\n     */\n    destroy: function destroy() {\n      // Key event listener\n      $('body').off('keyup.' + this.s.namespace); // Individual button destroy (so they can remove their own events if\n      // needed). Take a copy as the array is modified by `remove`\n\n      var buttons = this.s.buttons.slice();\n      var i, ien;\n\n      for (i = 0, ien = buttons.length; i < ien; i++) {\n        this.remove(buttons[i].node);\n      } // Container\n\n\n      this.dom.container.remove(); // Remove from the settings object collection\n\n      var buttonInsts = this.s.dt.settings()[0];\n\n      for (i = 0, ien = buttonInsts.length; i < ien; i++) {\n        if (buttonInsts.inst === this) {\n          buttonInsts.splice(i, 1);\n          break;\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Enable / disable a button\n     * @param  {node} node Button node\n     * @param  {boolean} [flag=true] Enable / disable flag\n     * @return {Buttons} Self for chaining\n     */\n    enable: function enable(node, flag) {\n      if (flag === false) {\n        return this.disable(node);\n      }\n\n      var button = this._nodeToButton(node);\n\n      $(button.node).removeClass(this.c.dom.button.disabled).removeAttr('disabled');\n      return this;\n    },\n\n    /**\n     * Get the instance name for the button set selector\n     * @return {string} Instance name\n     */\n    name: function name() {\n      return this.c.name;\n    },\n\n    /**\n     * Get a button's node of the buttons container if no button is given\n     * @param  {node} [node] Button node\n     * @return {jQuery} Button element, or container\n     */\n    node: function node(_node) {\n      if (!_node) {\n        return this.dom.container;\n      }\n\n      var button = this._nodeToButton(_node);\n\n      return $(button.node);\n    },\n\n    /**\n     * Set / get a processing class on the selected button\n     * @param {element} node Triggering button node\n     * @param  {boolean} flag true to add, false to remove, undefined to get\n     * @return {boolean|Buttons} Getter value or this if a setter.\n     */\n    processing: function processing(node, flag) {\n      var dt = this.s.dt;\n\n      var button = this._nodeToButton(node);\n\n      if (flag === undefined) {\n        return $(button.node).hasClass('processing');\n      }\n\n      $(button.node).toggleClass('processing', flag);\n      $(dt.table().node()).triggerHandler('buttons-processing.dt', [flag, dt.button(node), dt, $(node), button.conf]);\n      return this;\n    },\n\n    /**\n     * Remove a button.\n     * @param  {node} node Button node\n     * @return {Buttons} Self for chaining\n     */\n    remove: function remove(node) {\n      var button = this._nodeToButton(node);\n\n      var host = this._nodeToHost(node);\n\n      var dt = this.s.dt; // Remove any child buttons first\n\n      if (button.buttons.length) {\n        for (var i = button.buttons.length - 1; i >= 0; i--) {\n          this.remove(button.buttons[i].node);\n        }\n      } // Allow the button to remove event handlers, etc\n\n\n      if (button.conf.destroy) {\n        button.conf.destroy.call(dt.button(node), dt, $(node), button.conf);\n      }\n\n      this._removeKey(button.conf);\n\n      $(button.node).remove();\n      var idx = $.inArray(button, host);\n      host.splice(idx, 1);\n      return this;\n    },\n\n    /**\n     * Get the text for a button\n     * @param  {int|string} node Button index\n     * @return {string} Button text\n     */\n\n    /**\n    * Set the text for a button\n    * @param  {int|string|function} node Button index\n    * @param  {string} label Text\n    * @return {Buttons} Self for chaining\n    */\n    text: function text(node, label) {\n      var button = this._nodeToButton(node);\n\n      var buttonLiner = this.c.dom.collection.buttonLiner;\n      var linerTag = button.inCollection && buttonLiner && buttonLiner.tag ? buttonLiner.tag : this.c.dom.buttonLiner.tag;\n      var dt = this.s.dt;\n      var jqNode = $(button.node);\n\n      var text = function text(opt) {\n        return typeof opt === 'function' ? opt(dt, jqNode, button.conf) : opt;\n      };\n\n      if (label === undefined) {\n        return text(button.conf.text);\n      }\n\n      button.conf.text = label;\n\n      if (linerTag) {\n        jqNode.children(linerTag).html(text(label));\n      } else {\n        jqNode.html(text(label));\n      }\n\n      return this;\n    },\n\n    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n     * Constructor\n     */\n\n    /**\n     * Buttons constructor\n     * @private\n     */\n    _constructor: function _constructor() {\n      var that = this;\n      var dt = this.s.dt;\n      var dtSettings = dt.settings()[0];\n      var buttons = this.c.buttons;\n\n      if (!dtSettings._buttons) {\n        dtSettings._buttons = [];\n      }\n\n      dtSettings._buttons.push({\n        inst: this,\n        name: this.c.name\n      });\n\n      for (var i = 0, ien = buttons.length; i < ien; i++) {\n        this.add(buttons[i]);\n      }\n\n      dt.on('destroy', function (e, settings) {\n        if (settings === dtSettings) {\n          that.destroy();\n        }\n      }); // Global key event binding to listen for button keys\n\n      $('body').on('keyup.' + this.s.namespace, function (e) {\n        if (!document.activeElement || document.activeElement === document.body) {\n          // SUse a string of characters for fast lookup of if we need to\n          // handle this\n          var character = String.fromCharCode(e.keyCode).toLowerCase();\n\n          if (that.s.listenKeys.toLowerCase().indexOf(character) !== -1) {\n            that._keypress(character, e);\n          }\n        }\n      });\n    },\n\n    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n     * Private methods\n     */\n\n    /**\n     * Add a new button to the key press listener\n     * @param {object} conf Resolved button configuration object\n     * @private\n     */\n    _addKey: function _addKey(conf) {\n      if (conf.key) {\n        this.s.listenKeys += $.isPlainObject(conf.key) ? conf.key.key : conf.key;\n      }\n    },\n\n    /**\n     * Insert the buttons into the container. Call without parameters!\n     * @param  {node} [container] Recursive only - Insert point\n     * @param  {array} [buttons] Recursive only - Buttons array\n     * @private\n     */\n    _draw: function _draw(container, buttons) {\n      if (!container) {\n        container = this.dom.container;\n        buttons = this.s.buttons;\n      }\n\n      container.children().detach();\n\n      for (var i = 0, ien = buttons.length; i < ien; i++) {\n        container.append(buttons[i].inserter);\n        container.append(' ');\n\n        if (buttons[i].buttons && buttons[i].buttons.length) {\n          this._draw(buttons[i].collection, buttons[i].buttons);\n        }\n      }\n    },\n\n    /**\n     * Create buttons from an array of buttons\n     * @param  {array} attachTo Buttons array to attach to\n     * @param  {object} button Button definition\n     * @param  {boolean} inCollection true if the button is in a collection\n     * @private\n     */\n    _expandButton: function _expandButton(attachTo, button, inCollection, attachPoint) {\n      var dt = this.s.dt;\n      var buttonCounter = 0;\n      var buttons = !Array.isArray(button) ? [button] : button;\n\n      for (var i = 0, ien = buttons.length; i < ien; i++) {\n        var conf = this._resolveExtends(buttons[i]);\n\n        if (!conf) {\n          continue;\n        } // If the configuration is an array, then expand the buttons at this\n        // point\n\n\n        if (Array.isArray(conf)) {\n          this._expandButton(attachTo, conf, inCollection, attachPoint);\n\n          continue;\n        }\n\n        var built = this._buildButton(conf, inCollection);\n\n        if (!built) {\n          continue;\n        }\n\n        if (attachPoint !== undefined && attachPoint !== null) {\n          attachTo.splice(attachPoint, 0, built);\n          attachPoint++;\n        } else {\n          attachTo.push(built);\n        }\n\n        if (built.conf.buttons) {\n          built.collection = $('<' + this.c.dom.collection.tag + '/>');\n          built.conf._collection = built.collection;\n\n          this._expandButton(built.buttons, built.conf.buttons, true, attachPoint);\n        } // init call is made here, rather than buildButton as it needs to\n        // be selectable, and for that it needs to be in the buttons array\n\n\n        if (conf.init) {\n          conf.init.call(dt.button(built.node), dt, $(built.node), conf);\n        }\n\n        buttonCounter++;\n      }\n    },\n\n    /**\n     * Create an individual button\n     * @param  {object} config            Resolved button configuration\n     * @param  {boolean} inCollection `true` if a collection button\n     * @return {jQuery} Created button node (jQuery)\n     * @private\n     */\n    _buildButton: function _buildButton(config, inCollection) {\n      var buttonDom = this.c.dom.button;\n      var linerDom = this.c.dom.buttonLiner;\n      var collectionDom = this.c.dom.collection;\n      var dt = this.s.dt;\n\n      var text = function text(opt) {\n        return typeof opt === 'function' ? opt(dt, button, config) : opt;\n      };\n\n      if (inCollection && collectionDom.button) {\n        buttonDom = collectionDom.button;\n      }\n\n      if (inCollection && collectionDom.buttonLiner) {\n        linerDom = collectionDom.buttonLiner;\n      } // Make sure that the button is available based on whatever requirements\n      // it has. For example, PDF button require pdfmake\n\n\n      if (config.available && !config.available(dt, config)) {\n        return false;\n      }\n\n      var action = function action(e, dt, button, config) {\n        config.action.call(dt.button(button), e, dt, button, config);\n        $(dt.table().node()).triggerHandler('buttons-action.dt', [dt.button(button), dt, button, config]);\n      };\n\n      var tag = config.tag || buttonDom.tag;\n      var clickBlurs = config.clickBlurs === undefined ? true : config.clickBlurs;\n      var button = $('<' + tag + '/>').addClass(buttonDom.className).attr('tabindex', this.s.dt.settings()[0].iTabIndex).attr('aria-controls', this.s.dt.table().node().id).on('click.dtb', function (e) {\n        e.preventDefault();\n\n        if (!button.hasClass(buttonDom.disabled) && config.action) {\n          action(e, dt, button, config);\n        }\n\n        if (clickBlurs) {\n          button.trigger('blur');\n        }\n      }).on('keyup.dtb', function (e) {\n        if (e.keyCode === 13) {\n          if (!button.hasClass(buttonDom.disabled) && config.action) {\n            action(e, dt, button, config);\n          }\n        }\n      }); // Make `a` tags act like a link\n\n      if (tag.toLowerCase() === 'a') {\n        button.attr('href', '#');\n      } // Button tags should have `type=button` so they don't have any default behaviour\n\n\n      if (tag.toLowerCase() === 'button') {\n        button.attr('type', 'button');\n      }\n\n      if (linerDom.tag) {\n        var liner = $('<' + linerDom.tag + '/>').html(text(config.text)).addClass(linerDom.className);\n\n        if (linerDom.tag.toLowerCase() === 'a') {\n          liner.attr('href', '#');\n        }\n\n        button.append(liner);\n      } else {\n        button.html(text(config.text));\n      }\n\n      if (config.enabled === false) {\n        button.addClass(buttonDom.disabled);\n      }\n\n      if (config.className) {\n        button.addClass(config.className);\n      }\n\n      if (config.titleAttr) {\n        button.attr('title', text(config.titleAttr));\n      }\n\n      if (config.attr) {\n        button.attr(config.attr);\n      }\n\n      if (!config.namespace) {\n        config.namespace = '.dt-button-' + _buttonCounter++;\n      }\n\n      var buttonContainer = this.c.dom.buttonContainer;\n      var inserter;\n\n      if (buttonContainer && buttonContainer.tag) {\n        inserter = $('<' + buttonContainer.tag + '/>').addClass(buttonContainer.className).append(button);\n      } else {\n        inserter = button;\n      }\n\n      this._addKey(config); // Style integration callback for DOM manipulation\n      // Note that this is _not_ documented. It is currently\n      // for style integration only\n\n\n      if (this.c.buttonCreated) {\n        inserter = this.c.buttonCreated(config, inserter);\n      }\n\n      return {\n        conf: config,\n        node: button.get(0),\n        inserter: inserter,\n        buttons: [],\n        inCollection: inCollection,\n        collection: null\n      };\n    },\n\n    /**\n     * Get the button object from a node (recursive)\n     * @param  {node} node Button node\n     * @param  {array} [buttons] Button array, uses base if not defined\n     * @return {object} Button object\n     * @private\n     */\n    _nodeToButton: function _nodeToButton(node, buttons) {\n      if (!buttons) {\n        buttons = this.s.buttons;\n      }\n\n      for (var i = 0, ien = buttons.length; i < ien; i++) {\n        if (buttons[i].node === node) {\n          return buttons[i];\n        }\n\n        if (buttons[i].buttons.length) {\n          var ret = this._nodeToButton(node, buttons[i].buttons);\n\n          if (ret) {\n            return ret;\n          }\n        }\n      }\n    },\n\n    /**\n     * Get container array for a button from a button node (recursive)\n     * @param  {node} node Button node\n     * @param  {array} [buttons] Button array, uses base if not defined\n     * @return {array} Button's host array\n     * @private\n     */\n    _nodeToHost: function _nodeToHost(node, buttons) {\n      if (!buttons) {\n        buttons = this.s.buttons;\n      }\n\n      for (var i = 0, ien = buttons.length; i < ien; i++) {\n        if (buttons[i].node === node) {\n          return buttons;\n        }\n\n        if (buttons[i].buttons.length) {\n          var ret = this._nodeToHost(node, buttons[i].buttons);\n\n          if (ret) {\n            return ret;\n          }\n        }\n      }\n    },\n\n    /**\n     * Handle a key press - determine if any button's key configured matches\n     * what was typed and trigger the action if so.\n     * @param  {string} character The character pressed\n     * @param  {object} e Key event that triggered this call\n     * @private\n     */\n    _keypress: function _keypress(character, e) {\n      // Check if this button press already activated on another instance of Buttons\n      if (e._buttonsHandled) {\n        return;\n      }\n\n      var run = function run(conf, node) {\n        if (!conf.key) {\n          return;\n        }\n\n        if (conf.key === character) {\n          e._buttonsHandled = true;\n          $(node).click();\n        } else if ($.isPlainObject(conf.key)) {\n          if (conf.key.key !== character) {\n            return;\n          }\n\n          if (conf.key.shiftKey && !e.shiftKey) {\n            return;\n          }\n\n          if (conf.key.altKey && !e.altKey) {\n            return;\n          }\n\n          if (conf.key.ctrlKey && !e.ctrlKey) {\n            return;\n          }\n\n          if (conf.key.metaKey && !e.metaKey) {\n            return;\n          } // Made it this far - it is good\n\n\n          e._buttonsHandled = true;\n          $(node).click();\n        }\n      };\n\n      var recurse = function recurse(a) {\n        for (var i = 0, ien = a.length; i < ien; i++) {\n          run(a[i].conf, a[i].node);\n\n          if (a[i].buttons.length) {\n            recurse(a[i].buttons);\n          }\n        }\n      };\n\n      recurse(this.s.buttons);\n    },\n\n    /**\n     * Remove a key from the key listener for this instance (to be used when a\n     * button is removed)\n     * @param  {object} conf Button configuration\n     * @private\n     */\n    _removeKey: function _removeKey(conf) {\n      if (conf.key) {\n        var character = $.isPlainObject(conf.key) ? conf.key.key : conf.key; // Remove only one character, as multiple buttons could have the\n        // same listening key\n\n        var a = this.s.listenKeys.split('');\n        var idx = $.inArray(character, a);\n        a.splice(idx, 1);\n        this.s.listenKeys = a.join('');\n      }\n    },\n\n    /**\n     * Resolve a button configuration\n     * @param  {string|function|object} conf Button config to resolve\n     * @return {object} Button configuration\n     * @private\n     */\n    _resolveExtends: function _resolveExtends(conf) {\n      var dt = this.s.dt;\n      var i, ien;\n\n      var toConfObject = function toConfObject(base) {\n        var loop = 0; // Loop until we have resolved to a button configuration, or an\n        // array of button configurations (which will be iterated\n        // separately)\n\n        while (!$.isPlainObject(base) && !Array.isArray(base)) {\n          if (base === undefined) {\n            return;\n          }\n\n          if (typeof base === 'function') {\n            base = base(dt, conf);\n\n            if (!base) {\n              return false;\n            }\n          } else if (typeof base === 'string') {\n            if (!_dtButtons[base]) {\n              throw 'Unknown button type: ' + base;\n            }\n\n            base = _dtButtons[base];\n          }\n\n          loop++;\n\n          if (loop > 30) {\n            // Protect against misconfiguration killing the browser\n            throw 'Buttons: Too many iterations';\n          }\n        }\n\n        return Array.isArray(base) ? base : $.extend({}, base);\n      };\n\n      conf = toConfObject(conf);\n\n      while (conf && conf.extend) {\n        // Use `toConfObject` in case the button definition being extended\n        // is itself a string or a function\n        if (!_dtButtons[conf.extend]) {\n          throw 'Cannot extend unknown button type: ' + conf.extend;\n        }\n\n        var objArray = toConfObject(_dtButtons[conf.extend]);\n\n        if (Array.isArray(objArray)) {\n          return objArray;\n        } else if (!objArray) {\n          // This is a little brutal as it might be possible to have a\n          // valid button without the extend, but if there is no extend\n          // then the host button would be acting in an undefined state\n          return false;\n        } // Stash the current class name\n\n\n        var originalClassName = objArray.className;\n        conf = $.extend({}, objArray, conf); // The extend will have overwritten the original class name if the\n        // `conf` object also assigned a class, but we want to concatenate\n        // them so they are list that is combined from all extended buttons\n\n        if (originalClassName && conf.className !== originalClassName) {\n          conf.className = originalClassName + ' ' + conf.className;\n        } // Buttons to be added to a collection  -gives the ability to define\n        // if buttons should be added to the start or end of a collection\n\n\n        var postfixButtons = conf.postfixButtons;\n\n        if (postfixButtons) {\n          if (!conf.buttons) {\n            conf.buttons = [];\n          }\n\n          for (i = 0, ien = postfixButtons.length; i < ien; i++) {\n            conf.buttons.push(postfixButtons[i]);\n          }\n\n          conf.postfixButtons = null;\n        }\n\n        var prefixButtons = conf.prefixButtons;\n\n        if (prefixButtons) {\n          if (!conf.buttons) {\n            conf.buttons = [];\n          }\n\n          for (i = 0, ien = prefixButtons.length; i < ien; i++) {\n            conf.buttons.splice(i, 0, prefixButtons[i]);\n          }\n\n          conf.prefixButtons = null;\n        } // Although we want the `conf` object to overwrite almost all of\n        // the properties of the object being extended, the `extend`\n        // property should come from the object being extended\n\n\n        conf.extend = objArray.extend;\n      }\n\n      return conf;\n    },\n\n    /**\n     * Display (and replace if there is an existing one) a popover attached to a button\n     * @param {string|node} content Content to show\n     * @param {DataTable.Api} hostButton DT API instance of the button\n     * @param {object} inOpts Options (see object below for all options)\n     */\n    _popover: function _popover(content, hostButton, inOpts) {\n      var dt = hostButton;\n      var buttonsSettings = this.c;\n      var options = $.extend({\n        align: 'button-left',\n        // button-right, dt-container\n        autoClose: false,\n        background: true,\n        backgroundClassName: 'dt-button-background',\n        contentClassName: buttonsSettings.dom.collection.className,\n        collectionLayout: '',\n        collectionTitle: '',\n        dropup: false,\n        fade: 400,\n        rightAlignClassName: 'dt-button-right',\n        tag: buttonsSettings.dom.collection.tag\n      }, inOpts);\n      var hostNode = hostButton.node();\n\n      var close = function close() {\n        _fadeOut($('.dt-button-collection'), options.fade, function () {\n          $(this).detach();\n        });\n\n        $(dt.buttons('[aria-haspopup=\"true\"][aria-expanded=\"true\"]').nodes()).attr('aria-expanded', 'false');\n        $('div.dt-button-background').off('click.dtb-collection');\n        Buttons.background(false, options.backgroundClassName, options.fade, hostNode);\n        $('body').off('.dtb-collection');\n        dt.off('buttons-action.b-internal');\n      };\n\n      if (content === false) {\n        close();\n      }\n\n      var existingExpanded = $(dt.buttons('[aria-haspopup=\"true\"][aria-expanded=\"true\"]').nodes());\n\n      if (existingExpanded.length) {\n        hostNode = existingExpanded.eq(0);\n        close();\n      }\n\n      var display = $('<div/>').addClass('dt-button-collection').addClass(options.collectionLayout).css('display', 'none');\n      content = $(content).addClass(options.contentClassName).attr('role', 'menu').appendTo(display);\n      hostNode.attr('aria-expanded', 'true');\n\n      if (hostNode.parents('body')[0] !== document.body) {\n        hostNode = document.body.lastChild;\n      }\n\n      if (options.collectionTitle) {\n        display.prepend('<div class=\"dt-button-collection-title\">' + options.collectionTitle + '</div>');\n      }\n\n      _fadeIn(display.insertAfter(hostNode), options.fade);\n\n      var tableContainer = $(hostButton.table().container());\n      var position = display.css('position');\n\n      if (options.align === 'dt-container') {\n        hostNode = hostNode.parent();\n        display.css('width', tableContainer.width());\n      } // Align the popover relative to the DataTables container\n      // Useful for wide popovers such as SearchPanes\n\n\n      if (position === 'absolute') {\n        // Align relative to the host button\n        var hostPosition = hostNode.position();\n        var buttonPosition = $(hostButton.node()).position();\n        display.css({\n          top: buttonPosition.top + hostNode.outerHeight(),\n          left: hostPosition.left\n        }); // calculate overflow when positioned beneath\n\n        var collectionHeight = display.outerHeight();\n        var tableBottom = tableContainer.offset().top + tableContainer.height();\n        var listBottom = buttonPosition.top + hostNode.outerHeight() + collectionHeight;\n        var bottomOverflow = listBottom - tableBottom; // calculate overflow when positioned above\n\n        var listTop = buttonPosition.top - collectionHeight;\n        var tableTop = tableContainer.offset().top;\n        var topOverflow = tableTop - listTop; // if bottom overflow is larger, move to the top because it fits better, or if dropup is requested\n\n        var moveTop = buttonPosition.top - collectionHeight - 5;\n\n        if ((bottomOverflow > topOverflow || options.dropup) && -moveTop < tableTop) {\n          display.css('top', moveTop);\n        } // Get the size of the container (left and width - and thus also right)\n\n\n        var tableLeft = tableContainer.offset().left;\n        var tableWidth = tableContainer.width();\n        var tableRight = tableLeft + tableWidth; // Get the size of the popover (left and width - and ...)\n\n        var popoverLeft = display.offset().left;\n        var popoverWidth = display.width();\n        var popoverRight = popoverLeft + popoverWidth; // Get the size of the host buttons (left and width - and ...)\n\n        var buttonsLeft = hostNode.offset().left;\n        var buttonsWidth = hostNode.outerWidth();\n        var buttonsRight = buttonsLeft + buttonsWidth;\n\n        if (display.hasClass(options.rightAlignClassName) || display.hasClass(options.leftAlignClassName) || options.align === 'dt-container') {\n          // You've then got all the numbers you need to do some calculations and if statements,\n          //  so we can do some quick JS maths and apply it only once\n          // If it has the right align class OR the buttons are right aligned OR the button container is floated right,\n          //  then calculate left position for the popover to align the popover to the right hand\n          //  side of the button - check to see if the left of the popover is inside the table container.\n          // If not, move the popover so it is, but not more than it means that the popover is to the right of the table container\n          var popoverShuffle = 0;\n\n          if (display.hasClass(options.rightAlignClassName)) {\n            popoverShuffle = buttonsRight - popoverRight;\n\n            if (tableLeft > popoverLeft + popoverShuffle) {\n              var leftGap = tableLeft - (popoverLeft + popoverShuffle);\n              var rightGap = tableRight - (popoverRight + popoverShuffle);\n\n              if (leftGap > rightGap) {\n                popoverShuffle += rightGap;\n              } else {\n                popoverShuffle += leftGap;\n              }\n            }\n          } // else attempt to left align the popover to the button. Similar to above, if the popover's right goes past the table container's right,\n          //  then move it back, but not so much that it goes past the left of the table container\n          else {\n            popoverShuffle = tableLeft - popoverLeft;\n\n            if (tableRight < popoverRight + popoverShuffle) {\n              var leftGap = tableLeft - (popoverLeft + popoverShuffle);\n              var rightGap = tableRight - (popoverRight + popoverShuffle);\n\n              if (leftGap > rightGap) {\n                popoverShuffle += rightGap;\n              } else {\n                popoverShuffle += leftGap;\n              }\n            }\n          }\n\n          display.css('left', display.position().left + popoverShuffle);\n        } else {\n          var top = hostNode.offset().top;\n          var popoverShuffle = 0;\n          popoverShuffle = options.align === 'button-right' ? buttonsRight - popoverRight : buttonsLeft - popoverLeft;\n          display.css('left', display.position().left + popoverShuffle);\n        }\n      } else {\n        // Fix position - centre on screen\n        var top = display.height() / 2;\n\n        if (top > $(window).height() / 2) {\n          top = $(window).height() / 2;\n        }\n\n        display.css('marginTop', top * -1);\n      }\n\n      if (options.background) {\n        Buttons.background(true, options.backgroundClassName, options.fade, hostNode);\n      } // This is bonkers, but if we don't have a click listener on the\n      // background element, iOS Safari will ignore the body click\n      // listener below. An empty function here is all that is\n      // required to make it work...\n\n\n      $('div.dt-button-background').on('click.dtb-collection', function () {});\n      $('body').on('click.dtb-collection', function (e) {\n        // andSelf is deprecated in jQ1.8, but we want 1.7 compat\n        var back = $.fn.addBack ? 'addBack' : 'andSelf';\n        var parent = $(e.target).parent()[0];\n\n        if (!$(e.target).parents()[back]().filter(content).length && !$(parent).hasClass('dt-buttons') || $(e.target).hasClass('dt-button-background')) {\n          close();\n        }\n      }).on('keyup.dtb-collection', function (e) {\n        if (e.keyCode === 27) {\n          close();\n        }\n      });\n\n      if (options.autoClose) {\n        setTimeout(function () {\n          dt.on('buttons-action.b-internal', function (e, btn, dt, node) {\n            if (node[0] === hostNode[0]) {\n              return;\n            }\n\n            close();\n          });\n        }, 0);\n      }\n\n      $(display).trigger('buttons-popover.dt');\n    }\n  });\n  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n   * Statics\n   */\n\n  /**\n   * Show / hide a background layer behind a collection\n   * @param  {boolean} Flag to indicate if the background should be shown or\n   *   hidden \n   * @param  {string} Class to assign to the background\n   * @static\n   */\n\n  Buttons.background = function (show, className, fade, insertPoint) {\n    if (fade === undefined) {\n      fade = 400;\n    }\n\n    if (!insertPoint) {\n      insertPoint = document.body;\n    }\n\n    if (show) {\n      _fadeIn($('<div/>').addClass(className).css('display', 'none').insertAfter(insertPoint), fade);\n    } else {\n      _fadeOut($('div.' + className), fade, function () {\n        $(this).removeClass(className).remove();\n      });\n    }\n  };\n  /**\n   * Instance selector - select Buttons instances based on an instance selector\n   * value from the buttons assigned to a DataTable. This is only useful if\n   * multiple instances are attached to a DataTable.\n   * @param  {string|int|array} Instance selector - see `instance-selector`\n   *   documentation on the DataTables site\n   * @param  {array} Button instance array that was attached to the DataTables\n   *   settings object\n   * @return {array} Buttons instances\n   * @static\n   */\n\n\n  Buttons.instanceSelector = function (group, buttons) {\n    if (group === undefined || group === null) {\n      return $.map(buttons, function (v) {\n        return v.inst;\n      });\n    }\n\n    var ret = [];\n    var names = $.map(buttons, function (v) {\n      return v.name;\n    }); // Flatten the group selector into an array of single options\n\n    var process = function process(input) {\n      if (Array.isArray(input)) {\n        for (var i = 0, ien = input.length; i < ien; i++) {\n          process(input[i]);\n        }\n\n        return;\n      }\n\n      if (typeof input === 'string') {\n        if (input.indexOf(',') !== -1) {\n          // String selector, list of names\n          process(input.split(','));\n        } else {\n          // String selector individual name\n          var idx = $.inArray(input.trim(), names);\n\n          if (idx !== -1) {\n            ret.push(buttons[idx].inst);\n          }\n        }\n      } else if (typeof input === 'number') {\n        // Index selector\n        ret.push(buttons[input].inst);\n      }\n    };\n\n    process(group);\n    return ret;\n  };\n  /**\n   * Button selector - select one or more buttons from a selector input so some\n   * operation can be performed on them.\n   * @param  {array} Button instances array that the selector should operate on\n   * @param  {string|int|node|jQuery|array} Button selector - see\n   *   `button-selector` documentation on the DataTables site\n   * @return {array} Array of objects containing `inst` and `idx` properties of\n   *   the selected buttons so you know which instance each button belongs to.\n   * @static\n   */\n\n\n  Buttons.buttonSelector = function (insts, selector) {\n    var ret = [];\n\n    var nodeBuilder = function nodeBuilder(a, buttons, baseIdx) {\n      var button;\n      var idx;\n\n      for (var i = 0, ien = buttons.length; i < ien; i++) {\n        button = buttons[i];\n\n        if (button) {\n          idx = baseIdx !== undefined ? baseIdx + i : i + '';\n          a.push({\n            node: button.node,\n            name: button.conf.name,\n            idx: idx\n          });\n\n          if (button.buttons) {\n            nodeBuilder(a, button.buttons, idx + '-');\n          }\n        }\n      }\n    };\n\n    var run = function run(selector, inst) {\n      var i, ien;\n      var buttons = [];\n      nodeBuilder(buttons, inst.s.buttons);\n      var nodes = $.map(buttons, function (v) {\n        return v.node;\n      });\n\n      if (Array.isArray(selector) || selector instanceof $) {\n        for (i = 0, ien = selector.length; i < ien; i++) {\n          run(selector[i], inst);\n        }\n\n        return;\n      }\n\n      if (selector === null || selector === undefined || selector === '*') {\n        // Select all\n        for (i = 0, ien = buttons.length; i < ien; i++) {\n          ret.push({\n            inst: inst,\n            node: buttons[i].node\n          });\n        }\n      } else if (typeof selector === 'number') {\n        // Main button index selector\n        ret.push({\n          inst: inst,\n          node: inst.s.buttons[selector].node\n        });\n      } else if (typeof selector === 'string') {\n        if (selector.indexOf(',') !== -1) {\n          // Split\n          var a = selector.split(',');\n\n          for (i = 0, ien = a.length; i < ien; i++) {\n            run(a[i].trim(), inst);\n          }\n        } else if (selector.match(/^\\d+(\\-\\d+)*$/)) {\n          // Sub-button index selector\n          var indexes = $.map(buttons, function (v) {\n            return v.idx;\n          });\n          ret.push({\n            inst: inst,\n            node: buttons[$.inArray(selector, indexes)].node\n          });\n        } else if (selector.indexOf(':name') !== -1) {\n          // Button name selector\n          var name = selector.replace(':name', '');\n\n          for (i = 0, ien = buttons.length; i < ien; i++) {\n            if (buttons[i].name === name) {\n              ret.push({\n                inst: inst,\n                node: buttons[i].node\n              });\n            }\n          }\n        } else {\n          // jQuery selector on the nodes\n          $(nodes).filter(selector).each(function () {\n            ret.push({\n              inst: inst,\n              node: this\n            });\n          });\n        }\n      } else if (typeof selector === 'object' && selector.nodeName) {\n        // Node selector\n        var idx = $.inArray(selector, nodes);\n\n        if (idx !== -1) {\n          ret.push({\n            inst: inst,\n            node: nodes[idx]\n          });\n        }\n      }\n    };\n\n    for (var i = 0, ien = insts.length; i < ien; i++) {\n      var inst = insts[i];\n      run(selector, inst);\n    }\n\n    return ret;\n  };\n  /**\n   * Default function used for formatting output data.\n   * @param {*} str Data to strip\n   */\n\n\n  Buttons.stripData = function (str, config) {\n    if (typeof str !== 'string') {\n      return str;\n    } // Always remove script tags\n\n\n    str = str.replace(/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi, ''); // Always remove comments\n\n    str = str.replace(/<!\\-\\-.*?\\-\\->/g, '');\n\n    if (!config || config.stripHtml) {\n      str = str.replace(/<[^>]*>/g, '');\n    }\n\n    if (!config || config.trim) {\n      str = str.replace(/^\\s+|\\s+$/g, '');\n    }\n\n    if (!config || config.stripNewlines) {\n      str = str.replace(/\\n/g, ' ');\n    }\n\n    if (!config || config.decodeEntities) {\n      _exportTextarea.innerHTML = str;\n      str = _exportTextarea.value;\n    }\n\n    return str;\n  };\n  /**\n   * Buttons defaults. For full documentation, please refer to the docs/option\n   * directory or the DataTables site.\n   * @type {Object}\n   * @static\n   */\n\n\n  Buttons.defaults = {\n    buttons: ['copy', 'excel', 'csv', 'pdf', 'print'],\n    name: 'main',\n    tabIndex: 0,\n    dom: {\n      container: {\n        tag: 'div',\n        className: 'dt-buttons'\n      },\n      collection: {\n        tag: 'div',\n        className: ''\n      },\n      button: {\n        tag: 'button',\n        className: 'dt-button',\n        active: 'active',\n        disabled: 'disabled'\n      },\n      buttonLiner: {\n        tag: 'span',\n        className: ''\n      }\n    }\n  };\n  /**\n   * Version information\n   * @type {string}\n   * @static\n   */\n\n  Buttons.version = '1.7.1';\n  $.extend(_dtButtons, {\n    collection: {\n      text: function text(dt) {\n        return dt.i18n('buttons.collection', 'Collection');\n      },\n      className: 'buttons-collection',\n      init: function init(dt, button, config) {\n        button.attr('aria-expanded', false);\n      },\n      action: function action(e, dt, button, config) {\n        e.stopPropagation();\n\n        if (config._collection.parents('body').length) {\n          this.popover(false, config);\n        } else {\n          this.popover(config._collection, config);\n        }\n      },\n      attr: {\n        'aria-haspopup': true\n      } // Also the popover options, defined in Buttons.popover\n\n    },\n    copy: function copy(dt, conf) {\n      if (_dtButtons.copyHtml5) {\n        return 'copyHtml5';\n      }\n    },\n    csv: function csv(dt, conf) {\n      if (_dtButtons.csvHtml5 && _dtButtons.csvHtml5.available(dt, conf)) {\n        return 'csvHtml5';\n      }\n    },\n    excel: function excel(dt, conf) {\n      if (_dtButtons.excelHtml5 && _dtButtons.excelHtml5.available(dt, conf)) {\n        return 'excelHtml5';\n      }\n    },\n    pdf: function pdf(dt, conf) {\n      if (_dtButtons.pdfHtml5 && _dtButtons.pdfHtml5.available(dt, conf)) {\n        return 'pdfHtml5';\n      }\n    },\n    pageLength: function pageLength(dt) {\n      var lengthMenu = dt.settings()[0].aLengthMenu;\n      var vals = [];\n      var lang = [];\n\n      var text = function text(dt) {\n        return dt.i18n('buttons.pageLength', {\n          \"-1\": 'Show all rows',\n          _: 'Show %d rows'\n        }, dt.page.len());\n      }; // Support for DataTables 1.x 2D array\n\n\n      if (Array.isArray(lengthMenu[0])) {\n        vals = lengthMenu[0];\n        lang = lengthMenu[1];\n      } else {\n        for (var i = 0; i < lengthMenu.length; i++) {\n          var option = lengthMenu[i]; // Support for DataTables 2 object in the array\n\n          if ($.isPlainObject(option)) {\n            vals.push(option.value);\n            lang.push(option.label);\n          } else {\n            vals.push(option);\n            lang.push(option);\n          }\n        }\n      }\n\n      return {\n        extend: 'collection',\n        text: text,\n        className: 'buttons-page-length',\n        autoClose: true,\n        buttons: $.map(vals, function (val, i) {\n          return {\n            text: lang[i],\n            className: 'button-page-length',\n            action: function action(e, dt) {\n              dt.page.len(val).draw();\n            },\n            init: function init(dt, node, conf) {\n              var that = this;\n\n              var fn = function fn() {\n                that.active(dt.page.len() === val);\n              };\n\n              dt.on('length.dt' + conf.namespace, fn);\n              fn();\n            },\n            destroy: function destroy(dt, node, conf) {\n              dt.off('length.dt' + conf.namespace);\n            }\n          };\n        }),\n        init: function init(dt, node, conf) {\n          var that = this;\n          dt.on('length.dt' + conf.namespace, function () {\n            that.text(conf.text);\n          });\n        },\n        destroy: function destroy(dt, node, conf) {\n          dt.off('length.dt' + conf.namespace);\n        }\n      };\n    }\n  });\n  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n   * DataTables API\n   *\n   * For complete documentation, please refer to the docs/api directory or the\n   * DataTables site\n   */\n  // Buttons group and individual button selector\n\n  DataTable.Api.register('buttons()', function (group, selector) {\n    // Argument shifting\n    if (selector === undefined) {\n      selector = group;\n      group = undefined;\n    }\n\n    this.selector.buttonGroup = group;\n    var res = this.iterator(true, 'table', function (ctx) {\n      if (ctx._buttons) {\n        return Buttons.buttonSelector(Buttons.instanceSelector(group, ctx._buttons), selector);\n      }\n    }, true);\n    res._groupSelector = group;\n    return res;\n  }); // Individual button selector\n\n  DataTable.Api.register('button()', function (group, selector) {\n    // just run buttons() and truncate\n    var buttons = this.buttons(group, selector);\n\n    if (buttons.length > 1) {\n      buttons.splice(1, buttons.length);\n    }\n\n    return buttons;\n  }); // Active buttons\n\n  DataTable.Api.registerPlural('buttons().active()', 'button().active()', function (flag) {\n    if (flag === undefined) {\n      return this.map(function (set) {\n        return set.inst.active(set.node);\n      });\n    }\n\n    return this.each(function (set) {\n      set.inst.active(set.node, flag);\n    });\n  }); // Get / set button action\n\n  DataTable.Api.registerPlural('buttons().action()', 'button().action()', function (action) {\n    if (action === undefined) {\n      return this.map(function (set) {\n        return set.inst.action(set.node);\n      });\n    }\n\n    return this.each(function (set) {\n      set.inst.action(set.node, action);\n    });\n  }); // Enable / disable buttons\n\n  DataTable.Api.register(['buttons().enable()', 'button().enable()'], function (flag) {\n    return this.each(function (set) {\n      set.inst.enable(set.node, flag);\n    });\n  }); // Disable buttons\n\n  DataTable.Api.register(['buttons().disable()', 'button().disable()'], function () {\n    return this.each(function (set) {\n      set.inst.disable(set.node);\n    });\n  }); // Get button nodes\n\n  DataTable.Api.registerPlural('buttons().nodes()', 'button().node()', function () {\n    var jq = $(); // jQuery will automatically reduce duplicates to a single entry\n\n    $(this.each(function (set) {\n      jq = jq.add(set.inst.node(set.node));\n    }));\n    return jq;\n  }); // Get / set button processing state\n\n  DataTable.Api.registerPlural('buttons().processing()', 'button().processing()', function (flag) {\n    if (flag === undefined) {\n      return this.map(function (set) {\n        return set.inst.processing(set.node);\n      });\n    }\n\n    return this.each(function (set) {\n      set.inst.processing(set.node, flag);\n    });\n  }); // Get / set button text (i.e. the button labels)\n\n  DataTable.Api.registerPlural('buttons().text()', 'button().text()', function (label) {\n    if (label === undefined) {\n      return this.map(function (set) {\n        return set.inst.text(set.node);\n      });\n    }\n\n    return this.each(function (set) {\n      set.inst.text(set.node, label);\n    });\n  }); // Trigger a button's action\n\n  DataTable.Api.registerPlural('buttons().trigger()', 'button().trigger()', function () {\n    return this.each(function (set) {\n      set.inst.node(set.node).trigger('click');\n    });\n  }); // Button resolver to the popover\n\n  DataTable.Api.register('button().popover()', function (content, options) {\n    return this.map(function (set) {\n      return set.inst._popover(content, this.button(this[0].node), options);\n    });\n  }); // Get the container elements\n\n  DataTable.Api.register('buttons().containers()', function () {\n    var jq = $();\n    var groupSelector = this._groupSelector; // We need to use the group selector directly, since if there are no buttons\n    // the result set will be empty\n\n    this.iterator(true, 'table', function (ctx) {\n      if (ctx._buttons) {\n        var insts = Buttons.instanceSelector(groupSelector, ctx._buttons);\n\n        for (var i = 0, ien = insts.length; i < ien; i++) {\n          jq = jq.add(insts[i].container());\n        }\n      }\n    });\n    return jq;\n  });\n  DataTable.Api.register('buttons().container()', function () {\n    // API level of nesting is `buttons()` so we can zip into the containers method\n    return this.containers().eq(0);\n  }); // Add a new button\n\n  DataTable.Api.register('button().add()', function (idx, conf) {\n    var ctx = this.context; // Don't use `this` as it could be empty - select the instances directly\n\n    if (ctx.length) {\n      var inst = Buttons.instanceSelector(this._groupSelector, ctx[0]._buttons);\n\n      if (inst.length) {\n        inst[0].add(conf, idx);\n      }\n    }\n\n    return this.button(this._groupSelector, idx);\n  }); // Destroy the button sets selected\n\n  DataTable.Api.register('buttons().destroy()', function () {\n    this.pluck('inst').unique().each(function (inst) {\n      inst.destroy();\n    });\n    return this;\n  }); // Remove a button\n\n  DataTable.Api.registerPlural('buttons().remove()', 'buttons().remove()', function () {\n    this.each(function (set) {\n      set.inst.remove(set.node);\n    });\n    return this;\n  }); // Information box that can be used by buttons\n\n  var _infoTimer;\n\n  DataTable.Api.register('buttons.info()', function (title, message, time) {\n    var that = this;\n\n    if (title === false) {\n      this.off('destroy.btn-info');\n\n      _fadeOut($('#datatables_buttons_info'), 400, function () {\n        $(this).remove();\n      });\n\n      clearTimeout(_infoTimer);\n      _infoTimer = null;\n      return this;\n    }\n\n    if (_infoTimer) {\n      clearTimeout(_infoTimer);\n    }\n\n    if ($('#datatables_buttons_info').length) {\n      $('#datatables_buttons_info').remove();\n    }\n\n    title = title ? '<h2>' + title + '</h2>' : '';\n\n    _fadeIn($('<div id=\"datatables_buttons_info\" class=\"dt-button-info\"/>').html(title).append($('<div/>')[typeof message === 'string' ? 'html' : 'append'](message)).css('display', 'none').appendTo('body'));\n\n    if (time !== undefined && time !== 0) {\n      _infoTimer = setTimeout(function () {\n        that.buttons.info(false);\n      }, time);\n    }\n\n    this.on('destroy.btn-info', function () {\n      that.buttons.info(false);\n    });\n    return this;\n  }); // Get data from the table for export - this is common to a number of plug-in\n  // buttons so it is included in the Buttons core library\n\n  DataTable.Api.register('buttons.exportData()', function (options) {\n    if (this.context.length) {\n      return _exportData(new DataTable.Api(this.context[0]), options);\n    }\n  }); // Get information about the export that is common to many of the export data\n  // types (DRY)\n\n  DataTable.Api.register('buttons.exportInfo()', function (conf) {\n    if (!conf) {\n      conf = {};\n    }\n\n    return {\n      filename: _filename(conf),\n      title: _title(conf),\n      messageTop: _message(this, conf.message || conf.messageTop, 'top'),\n      messageBottom: _message(this, conf.messageBottom, 'bottom')\n    };\n  });\n  /**\n   * Get the file name for an exported file.\n   *\n   * @param {object}\tconfig Button configuration\n   * @param {boolean} incExtension Include the file name extension\n   */\n\n  var _filename = function _filename(config) {\n    // Backwards compatibility\n    var filename = config.filename === '*' && config.title !== '*' && config.title !== undefined && config.title !== null && config.title !== '' ? config.title : config.filename;\n\n    if (typeof filename === 'function') {\n      filename = filename();\n    }\n\n    if (filename === undefined || filename === null) {\n      return null;\n    }\n\n    if (filename.indexOf('*') !== -1) {\n      filename = filename.replace('*', $('head > title').text()).trim();\n    } // Strip characters which the OS will object to\n\n\n    filename = filename.replace(/[^a-zA-Z0-9_\\u00A1-\\uFFFF\\.,\\-_ !\\(\\)]/g, \"\");\n\n    var extension = _stringOrFunction(config.extension);\n\n    if (!extension) {\n      extension = '';\n    }\n\n    return filename + extension;\n  };\n  /**\n   * Simply utility method to allow parameters to be given as a function\n   *\n   * @param {undefined|string|function} option Option\n   * @return {null|string} Resolved value\n   */\n\n\n  var _stringOrFunction = function _stringOrFunction(option) {\n    if (option === null || option === undefined) {\n      return null;\n    } else if (typeof option === 'function') {\n      return option();\n    }\n\n    return option;\n  };\n  /**\n   * Get the title for an exported file.\n   *\n   * @param {object} config\tButton configuration\n   */\n\n\n  var _title = function _title(config) {\n    var title = _stringOrFunction(config.title);\n\n    return title === null ? null : title.indexOf('*') !== -1 ? title.replace('*', $('head > title').text() || 'Exported data') : title;\n  };\n\n  var _message = function _message(dt, option, position) {\n    var message = _stringOrFunction(option);\n\n    if (message === null) {\n      return null;\n    }\n\n    var caption = $('caption', dt.table().container()).eq(0);\n\n    if (message === '*') {\n      var side = caption.css('caption-side');\n\n      if (side !== position) {\n        return null;\n      }\n\n      return caption.length ? caption.text() : '';\n    }\n\n    return message;\n  };\n\n  var _exportTextarea = $('<textarea/>')[0];\n\n  var _exportData = function _exportData(dt, inOpts) {\n    var config = $.extend(true, {}, {\n      rows: null,\n      columns: '',\n      modifier: {\n        search: 'applied',\n        order: 'applied'\n      },\n      orthogonal: 'display',\n      stripHtml: true,\n      stripNewlines: true,\n      decodeEntities: true,\n      trim: true,\n      format: {\n        header: function header(d) {\n          return Buttons.stripData(d, config);\n        },\n        footer: function footer(d) {\n          return Buttons.stripData(d, config);\n        },\n        body: function body(d) {\n          return Buttons.stripData(d, config);\n        }\n      },\n      customizeData: null\n    }, inOpts);\n    var header = dt.columns(config.columns).indexes().map(function (idx) {\n      var el = dt.column(idx).header();\n      return config.format.header(el.innerHTML, idx, el);\n    }).toArray();\n    var footer = dt.table().footer() ? dt.columns(config.columns).indexes().map(function (idx) {\n      var el = dt.column(idx).footer();\n      return config.format.footer(el ? el.innerHTML : '', idx, el);\n    }).toArray() : null; // If Select is available on this table, and any rows are selected, limit the export\n    // to the selected rows. If no rows are selected, all rows will be exported. Specify\n    // a `selected` modifier to control directly.\n\n    var modifier = $.extend({}, config.modifier);\n\n    if (dt.select && typeof dt.select.info === 'function' && modifier.selected === undefined) {\n      if (dt.rows(config.rows, $.extend({\n        selected: true\n      }, modifier)).any()) {\n        $.extend(modifier, {\n          selected: true\n        });\n      }\n    }\n\n    var rowIndexes = dt.rows(config.rows, modifier).indexes().toArray();\n    var selectedCells = dt.cells(rowIndexes, config.columns);\n    var cells = selectedCells.render(config.orthogonal).toArray();\n    var cellNodes = selectedCells.nodes().toArray();\n    var columns = header.length;\n    var rows = columns > 0 ? cells.length / columns : 0;\n    var body = [];\n    var cellCounter = 0;\n\n    for (var i = 0, ien = rows; i < ien; i++) {\n      var row = [columns];\n\n      for (var j = 0; j < columns; j++) {\n        row[j] = config.format.body(cells[cellCounter], i, j, cellNodes[cellCounter]);\n        cellCounter++;\n      }\n\n      body[i] = row;\n    }\n\n    var data = {\n      header: header,\n      footer: footer,\n      body: body\n    };\n\n    if (config.customizeData) {\n      config.customizeData(data);\n    }\n\n    return data;\n  };\n  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n   * DataTables interface\n   */\n  // Attach to DataTables objects for global access\n\n\n  $.fn.dataTable.Buttons = Buttons;\n  $.fn.DataTable.Buttons = Buttons; // DataTables creation - check if the buttons have been defined for this table,\n  // they will have been if the `B` option was used in `dom`, otherwise we should\n  // create the buttons instance here so they can be inserted into the document\n  // using the API. Listen for `init` for compatibility with pre 1.10.10, but to\n  // be removed in future.\n\n  $(document).on('init.dt plugin-init.dt', function (e, settings) {\n    if (e.namespace !== 'dt') {\n      return;\n    }\n\n    var opts = settings.oInit.buttons || DataTable.defaults.buttons;\n\n    if (opts && !settings._buttons) {\n      new Buttons(settings, opts).container();\n    }\n  });\n\n  function _init(settings, options) {\n    var api = new DataTable.Api(settings);\n    var opts = options ? options : api.init().buttons || DataTable.defaults.buttons;\n    return new Buttons(api, opts).container();\n  } // DataTables `dom` feature option\n\n\n  DataTable.ext.feature.push({\n    fnInit: _init,\n    cFeature: \"B\"\n  }); // DataTables 2 layout feature\n\n  if (DataTable.ext.features) {\n    DataTable.ext.features.register('buttons', _init);\n  }\n\n  return Buttons;\n});","map":{"version":3,"names":["factory","define","amd","$","window","document","exports","module","root","fn","dataTable","require","jQuery","undefined","DataTable","_instCounter","_buttonCounter","_dtButtons","ext","buttons","_fadeIn","el","duration","animate","stop","fadeIn","css","call","_fadeOut","fadeOut","Buttons","dt","config","settings","container","Array","isArray","c","extend","defaults","s","Api","listenKeys","namespace","dom","tag","addClass","className","_constructor","prototype","action","node","button","_nodeToButton","conf","active","flag","klass","jqNode","hasClass","toggleClass","add","idx","split","base","i","ien","length","_expandButton","_draw","disable","disabled","attr","destroy","off","slice","remove","buttonInsts","inst","splice","enable","removeClass","removeAttr","name","processing","table","triggerHandler","host","_nodeToHost","_removeKey","inArray","text","label","buttonLiner","collection","linerTag","inCollection","opt","children","html","that","dtSettings","_buttons","push","on","e","activeElement","body","character","String","fromCharCode","keyCode","toLowerCase","indexOf","_keypress","_addKey","key","isPlainObject","detach","append","inserter","attachTo","attachPoint","buttonCounter","_resolveExtends","built","_buildButton","_collection","init","buttonDom","linerDom","collectionDom","available","clickBlurs","iTabIndex","id","preventDefault","trigger","liner","enabled","titleAttr","buttonContainer","buttonCreated","get","ret","_buttonsHandled","run","click","shiftKey","altKey","ctrlKey","metaKey","recurse","a","join","toConfObject","loop","objArray","originalClassName","postfixButtons","prefixButtons","_popover","content","hostButton","inOpts","buttonsSettings","options","align","autoClose","background","backgroundClassName","contentClassName","collectionLayout","collectionTitle","dropup","fade","rightAlignClassName","hostNode","close","nodes","existingExpanded","eq","display","appendTo","parents","lastChild","prepend","insertAfter","tableContainer","position","parent","width","hostPosition","buttonPosition","top","outerHeight","left","collectionHeight","tableBottom","offset","height","listBottom","bottomOverflow","listTop","tableTop","topOverflow","moveTop","tableLeft","tableWidth","tableRight","popoverLeft","popoverWidth","popoverRight","buttonsLeft","buttonsWidth","outerWidth","buttonsRight","leftAlignClassName","popoverShuffle","leftGap","rightGap","back","addBack","target","filter","setTimeout","btn","show","insertPoint","instanceSelector","group","map","v","names","process","input","trim","buttonSelector","insts","selector","nodeBuilder","baseIdx","match","indexes","replace","each","nodeName","stripData","str","stripHtml","stripNewlines","decodeEntities","_exportTextarea","innerHTML","value","tabIndex","version","i18n","stopPropagation","popover","copy","copyHtml5","csv","csvHtml5","excel","excelHtml5","pdf","pdfHtml5","pageLength","lengthMenu","aLengthMenu","vals","lang","_","page","len","option","val","draw","register","buttonGroup","res","iterator","ctx","_groupSelector","registerPlural","set","jq","groupSelector","containers","context","pluck","unique","_infoTimer","title","message","time","clearTimeout","info","_exportData","filename","_filename","_title","messageTop","_message","messageBottom","extension","_stringOrFunction","caption","side","rows","columns","modifier","search","order","orthogonal","format","header","d","footer","customizeData","column","toArray","select","selected","any","rowIndexes","selectedCells","cells","render","cellNodes","cellCounter","row","j","data","opts","oInit","_init","api","feature","fnInit","cFeature","features"],"sources":["D:/PFCJACOBO/PFC/mycinemalist/node_modules/datatables.net-buttons/js/dataTables.buttons.js"],"sourcesContent":["/*! Buttons for DataTables 1.7.1\n * Â©2016-2021 SpryMedia Ltd - datatables.net/license\n */\n\n(function( factory ){\n\tif ( typeof define === 'function' && define.amd ) {\n\t\t// AMD\n\t\tdefine( ['jquery', 'datatables.net'], function ( $ ) {\n\t\t\treturn factory( $, window, document );\n\t\t} );\n\t}\n\telse if ( typeof exports === 'object' ) {\n\t\t// CommonJS\n\t\tmodule.exports = function (root, $) {\n\t\t\tif ( ! root ) {\n\t\t\t\troot = window;\n\t\t\t}\n\n\t\t\tif ( ! $ || ! $.fn.dataTable ) {\n\t\t\t\t$ = require('datatables.net')(root, $).$;\n\t\t\t}\n\n\t\t\treturn factory( $, root, root.document );\n\t\t};\n\t}\n\telse {\n\t\t// Browser\n\t\tfactory( jQuery, window, document );\n\t}\n}(function( $, window, document, undefined ) {\n'use strict';\nvar DataTable = $.fn.dataTable;\n\n\n// Used for namespacing events added to the document by each instance, so they\n// can be removed on destroy\nvar _instCounter = 0;\n\n// Button namespacing counter for namespacing events on individual buttons\nvar _buttonCounter = 0;\n\nvar _dtButtons = DataTable.ext.buttons;\n\n// Allow for jQuery slim\nfunction _fadeIn(el, duration, fn) {\n\tif ($.fn.animate) {\n\t\tel\n\t\t\t.stop()\n\t\t\t.fadeIn( duration, fn );\n\t}\n\telse {\n\t\tel.css('display', 'block');\n\n\t\tif (fn) {\n\t\t\tfn.call(el);\n\t\t}\n\t}\n}\n\nfunction _fadeOut(el, duration, fn) {\n\tif ($.fn.animate) {\n\t\tel\n\t\t\t.stop()\n\t\t\t.fadeOut( duration, fn );\n\t}\n\telse {\n\t\tel.css('display', 'none');\n\t\t\n\t\tif (fn) {\n\t\t\tfn.call(el);\n\t\t}\n\t}\n}\n\n/**\n * [Buttons description]\n * @param {[type]}\n * @param {[type]}\n */\nvar Buttons = function( dt, config )\n{\n\t// If not created with a `new` keyword then we return a wrapper function that\n\t// will take the settings object for a DT. This allows easy use of new instances\n\t// with the `layout` option - e.g. `topLeft: $.fn.dataTable.Buttons( ... )`.\n\tif ( !(this instanceof Buttons) ) {\n\t\treturn function (settings) {\n\t\t\treturn new Buttons( settings, dt ).container();\n\t\t};\n\t}\n\n\t// If there is no config set it to an empty object\n\tif ( typeof( config ) === 'undefined' ) {\n\t\tconfig = {};\t\n\t}\n\t\n\t// Allow a boolean true for defaults\n\tif ( config === true ) {\n\t\tconfig = {};\n\t}\n\n\t// For easy configuration of buttons an array can be given\n\tif ( Array.isArray( config ) ) {\n\t\tconfig = { buttons: config };\n\t}\n\n\tthis.c = $.extend( true, {}, Buttons.defaults, config );\n\n\t// Don't want a deep copy for the buttons\n\tif ( config.buttons ) {\n\t\tthis.c.buttons = config.buttons;\n\t}\n\n\tthis.s = {\n\t\tdt: new DataTable.Api( dt ),\n\t\tbuttons: [],\n\t\tlistenKeys: '',\n\t\tnamespace: 'dtb'+(_instCounter++)\n\t};\n\n\tthis.dom = {\n\t\tcontainer: $('<'+this.c.dom.container.tag+'/>')\n\t\t\t.addClass( this.c.dom.container.className )\n\t};\n\n\tthis._constructor();\n};\n\n\n$.extend( Buttons.prototype, {\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Public methods\n\t */\n\n\t/**\n\t * Get the action of a button\n\t * @param  {int|string} Button index\n\t * @return {function}\n\t *//**\n\t * Set the action of a button\n\t * @param  {node} node Button element\n\t * @param  {function} action Function to set\n\t * @return {Buttons} Self for chaining\n\t */\n\taction: function ( node, action )\n\t{\n\t\tvar button = this._nodeToButton( node );\n\n\t\tif ( action === undefined ) {\n\t\t\treturn button.conf.action;\n\t\t}\n\n\t\tbutton.conf.action = action;\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Add an active class to the button to make to look active or get current\n\t * active state.\n\t * @param  {node} node Button element\n\t * @param  {boolean} [flag] Enable / disable flag\n\t * @return {Buttons} Self for chaining or boolean for getter\n\t */\n\tactive: function ( node, flag ) {\n\t\tvar button = this._nodeToButton( node );\n\t\tvar klass = this.c.dom.button.active;\n\t\tvar jqNode = $(button.node);\n\n\t\tif ( flag === undefined ) {\n\t\t\treturn jqNode.hasClass( klass );\n\t\t}\n\n\t\tjqNode.toggleClass( klass, flag === undefined ? true : flag );\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Add a new button\n\t * @param {object} config Button configuration object, base string name or function\n\t * @param {int|string} [idx] Button index for where to insert the button\n\t * @return {Buttons} Self for chaining\n\t */\n\tadd: function ( config, idx )\n\t{\n\t\tvar buttons = this.s.buttons;\n\n\t\tif ( typeof idx === 'string' ) {\n\t\t\tvar split = idx.split('-');\n\t\t\tvar base = this.s;\n\n\t\t\tfor ( var i=0, ien=split.length-1 ; i<ien ; i++ ) {\n\t\t\t\tbase = base.buttons[ split[i]*1 ];\n\t\t\t}\n\n\t\t\tbuttons = base.buttons;\n\t\t\tidx = split[ split.length-1 ]*1;\n\t\t}\n\n\t\tthis._expandButton( buttons, config, base !== undefined, idx );\n\t\tthis._draw();\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Get the container node for the buttons\n\t * @return {jQuery} Buttons node\n\t */\n\tcontainer: function ()\n\t{\n\t\treturn this.dom.container;\n\t},\n\n\t/**\n\t * Disable a button\n\t * @param  {node} node Button node\n\t * @return {Buttons} Self for chaining\n\t */\n\tdisable: function ( node ) {\n\t\tvar button = this._nodeToButton( node );\n\n\t\t$(button.node)\n\t\t\t.addClass( this.c.dom.button.disabled )\n\t\t\t.attr('disabled', true);\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Destroy the instance, cleaning up event handlers and removing DOM\n\t * elements\n\t * @return {Buttons} Self for chaining\n\t */\n\tdestroy: function ()\n\t{\n\t\t// Key event listener\n\t\t$('body').off( 'keyup.'+this.s.namespace );\n\n\t\t// Individual button destroy (so they can remove their own events if\n\t\t// needed). Take a copy as the array is modified by `remove`\n\t\tvar buttons = this.s.buttons.slice();\n\t\tvar i, ien;\n\t\t\n\t\tfor ( i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\tthis.remove( buttons[i].node );\n\t\t}\n\n\t\t// Container\n\t\tthis.dom.container.remove();\n\n\t\t// Remove from the settings object collection\n\t\tvar buttonInsts = this.s.dt.settings()[0];\n\n\t\tfor ( i=0, ien=buttonInsts.length ; i<ien ; i++ ) {\n\t\t\tif ( buttonInsts.inst === this ) {\n\t\t\t\tbuttonInsts.splice( i, 1 );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Enable / disable a button\n\t * @param  {node} node Button node\n\t * @param  {boolean} [flag=true] Enable / disable flag\n\t * @return {Buttons} Self for chaining\n\t */\n\tenable: function ( node, flag )\n\t{\n\t\tif ( flag === false ) {\n\t\t\treturn this.disable( node );\n\t\t}\n\n\t\tvar button = this._nodeToButton( node );\n\t\t$(button.node)\n\t\t\t.removeClass( this.c.dom.button.disabled )\n\t\t\t.removeAttr('disabled');\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Get the instance name for the button set selector\n\t * @return {string} Instance name\n\t */\n\tname: function ()\n\t{\n\t\treturn this.c.name;\n\t},\n\n\t/**\n\t * Get a button's node of the buttons container if no button is given\n\t * @param  {node} [node] Button node\n\t * @return {jQuery} Button element, or container\n\t */\n\tnode: function ( node )\n\t{\n\t\tif ( ! node ) {\n\t\t\treturn this.dom.container;\n\t\t}\n\n\t\tvar button = this._nodeToButton( node );\n\t\treturn $(button.node);\n\t},\n\n\t/**\n\t * Set / get a processing class on the selected button\n\t * @param {element} node Triggering button node\n\t * @param  {boolean} flag true to add, false to remove, undefined to get\n\t * @return {boolean|Buttons} Getter value or this if a setter.\n\t */\n\tprocessing: function ( node, flag )\n\t{\n\t\tvar dt = this.s.dt;\n\t\tvar button = this._nodeToButton( node );\n\n\t\tif ( flag === undefined ) {\n\t\t\treturn $(button.node).hasClass( 'processing' );\n\t\t}\n\n\t\t$(button.node).toggleClass( 'processing', flag );\n\n\t\t$(dt.table().node()).triggerHandler( 'buttons-processing.dt', [\n\t\t\tflag, dt.button( node ), dt, $(node), button.conf\n\t\t] );\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Remove a button.\n\t * @param  {node} node Button node\n\t * @return {Buttons} Self for chaining\n\t */\n\tremove: function ( node )\n\t{\n\t\tvar button = this._nodeToButton( node );\n\t\tvar host = this._nodeToHost( node );\n\t\tvar dt = this.s.dt;\n\n\t\t// Remove any child buttons first\n\t\tif ( button.buttons.length ) {\n\t\t\tfor ( var i=button.buttons.length-1 ; i>=0 ; i-- ) {\n\t\t\t\tthis.remove( button.buttons[i].node );\n\t\t\t}\n\t\t}\n\n\t\t// Allow the button to remove event handlers, etc\n\t\tif ( button.conf.destroy ) {\n\t\t\tbutton.conf.destroy.call( dt.button(node), dt, $(node), button.conf );\n\t\t}\n\n\t\tthis._removeKey( button.conf );\n\n\t\t$(button.node).remove();\n\n\t\tvar idx = $.inArray( button, host );\n\t\thost.splice( idx, 1 );\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Get the text for a button\n\t * @param  {int|string} node Button index\n\t * @return {string} Button text\n\t *//**\n\t * Set the text for a button\n\t * @param  {int|string|function} node Button index\n\t * @param  {string} label Text\n\t * @return {Buttons} Self for chaining\n\t */\n\ttext: function ( node, label )\n\t{\n\t\tvar button = this._nodeToButton( node );\n\t\tvar buttonLiner = this.c.dom.collection.buttonLiner;\n\t\tvar linerTag = button.inCollection && buttonLiner && buttonLiner.tag ?\n\t\t\tbuttonLiner.tag :\n\t\t\tthis.c.dom.buttonLiner.tag;\n\t\tvar dt = this.s.dt;\n\t\tvar jqNode = $(button.node);\n\t\tvar text = function ( opt ) {\n\t\t\treturn typeof opt === 'function' ?\n\t\t\t\topt( dt, jqNode, button.conf ) :\n\t\t\t\topt;\n\t\t};\n\n\t\tif ( label === undefined ) {\n\t\t\treturn text( button.conf.text );\n\t\t}\n\n\t\tbutton.conf.text = label;\n\n\t\tif ( linerTag ) {\n\t\t\tjqNode.children( linerTag ).html( text(label) );\n\t\t}\n\t\telse {\n\t\t\tjqNode.html( text(label) );\n\t\t}\n\n\t\treturn this;\n\t},\n\n\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Constructor\n\t */\n\n\t/**\n\t * Buttons constructor\n\t * @private\n\t */\n\t_constructor: function ()\n\t{\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\t\tvar dtSettings = dt.settings()[0];\n\t\tvar buttons =  this.c.buttons;\n\n\t\tif ( ! dtSettings._buttons ) {\n\t\t\tdtSettings._buttons = [];\n\t\t}\n\n\t\tdtSettings._buttons.push( {\n\t\t\tinst: this,\n\t\t\tname: this.c.name\n\t\t} );\n\n\t\tfor ( var i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\tthis.add( buttons[i] );\n\t\t}\n\n\t\tdt.on( 'destroy', function ( e, settings ) {\n\t\t\tif ( settings === dtSettings ) {\n\t\t\t\tthat.destroy();\n\t\t\t}\n\t\t} );\n\n\t\t// Global key event binding to listen for button keys\n\t\t$('body').on( 'keyup.'+this.s.namespace, function ( e ) {\n\t\t\tif ( ! document.activeElement || document.activeElement === document.body ) {\n\t\t\t\t// SUse a string of characters for fast lookup of if we need to\n\t\t\t\t// handle this\n\t\t\t\tvar character = String.fromCharCode(e.keyCode).toLowerCase();\n\n\t\t\t\tif ( that.s.listenKeys.toLowerCase().indexOf( character ) !== -1 ) {\n\t\t\t\t\tthat._keypress( character, e );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Private methods\n\t */\n\n\t/**\n\t * Add a new button to the key press listener\n\t * @param {object} conf Resolved button configuration object\n\t * @private\n\t */\n\t_addKey: function ( conf )\n\t{\n\t\tif ( conf.key ) {\n\t\t\tthis.s.listenKeys += $.isPlainObject( conf.key ) ?\n\t\t\t\tconf.key.key :\n\t\t\t\tconf.key;\n\t\t}\n\t},\n\n\t/**\n\t * Insert the buttons into the container. Call without parameters!\n\t * @param  {node} [container] Recursive only - Insert point\n\t * @param  {array} [buttons] Recursive only - Buttons array\n\t * @private\n\t */\n\t_draw: function ( container, buttons )\n\t{\n\t\tif ( ! container ) {\n\t\t\tcontainer = this.dom.container;\n\t\t\tbuttons = this.s.buttons;\n\t\t}\n\n\t\tcontainer.children().detach();\n\n\t\tfor ( var i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\tcontainer.append( buttons[i].inserter );\n\t\t\tcontainer.append( ' ' );\n\n\t\t\tif ( buttons[i].buttons && buttons[i].buttons.length ) {\n\t\t\t\tthis._draw( buttons[i].collection, buttons[i].buttons );\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Create buttons from an array of buttons\n\t * @param  {array} attachTo Buttons array to attach to\n\t * @param  {object} button Button definition\n\t * @param  {boolean} inCollection true if the button is in a collection\n\t * @private\n\t */\n\t_expandButton: function ( attachTo, button, inCollection, attachPoint )\n\t{\n\t\tvar dt = this.s.dt;\n\t\tvar buttonCounter = 0;\n\t\tvar buttons = ! Array.isArray( button ) ?\n\t\t\t[ button ] :\n\t\t\tbutton;\n\n\t\tfor ( var i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\tvar conf = this._resolveExtends( buttons[i] );\n\n\t\t\tif ( ! conf ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// If the configuration is an array, then expand the buttons at this\n\t\t\t// point\n\t\t\tif ( Array.isArray( conf ) ) {\n\t\t\t\tthis._expandButton( attachTo, conf, inCollection, attachPoint );\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar built = this._buildButton( conf, inCollection );\n\t\t\tif ( ! built ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif ( attachPoint !== undefined && attachPoint !== null ) {\n\t\t\t\tattachTo.splice( attachPoint, 0, built );\n\t\t\t\tattachPoint++;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tattachTo.push( built );\n\t\t\t}\n\n\t\t\tif ( built.conf.buttons ) {\n\t\t\t\tbuilt.collection = $('<'+this.c.dom.collection.tag+'/>');\n\n\t\t\t\tbuilt.conf._collection = built.collection;\n\n\t\t\t\tthis._expandButton( built.buttons, built.conf.buttons, true, attachPoint );\n\t\t\t}\n\n\t\t\t// init call is made here, rather than buildButton as it needs to\n\t\t\t// be selectable, and for that it needs to be in the buttons array\n\t\t\tif ( conf.init ) {\n\t\t\t\tconf.init.call( dt.button( built.node ), dt, $(built.node), conf );\n\t\t\t}\n\n\t\t\tbuttonCounter++;\n\t\t}\n\t},\n\n\t/**\n\t * Create an individual button\n\t * @param  {object} config            Resolved button configuration\n\t * @param  {boolean} inCollection `true` if a collection button\n\t * @return {jQuery} Created button node (jQuery)\n\t * @private\n\t */\n\t_buildButton: function ( config, inCollection )\n\t{\n\t\tvar buttonDom = this.c.dom.button;\n\t\tvar linerDom = this.c.dom.buttonLiner;\n\t\tvar collectionDom = this.c.dom.collection;\n\t\tvar dt = this.s.dt;\n\t\tvar text = function ( opt ) {\n\t\t\treturn typeof opt === 'function' ?\n\t\t\t\topt( dt, button, config ) :\n\t\t\t\topt;\n\t\t};\n\n\t\tif ( inCollection && collectionDom.button ) {\n\t\t\tbuttonDom = collectionDom.button;\n\t\t}\n\n\t\tif ( inCollection && collectionDom.buttonLiner ) {\n\t\t\tlinerDom = collectionDom.buttonLiner;\n\t\t}\n\n\t\t// Make sure that the button is available based on whatever requirements\n\t\t// it has. For example, PDF button require pdfmake\n\t\tif ( config.available && ! config.available( dt, config ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar action = function ( e, dt, button, config ) {\n\t\t\tconfig.action.call( dt.button( button ), e, dt, button, config );\n\n\t\t\t$(dt.table().node()).triggerHandler( 'buttons-action.dt', [\n\t\t\t\tdt.button( button ), dt, button, config \n\t\t\t] );\n\t\t};\n\n\t\tvar tag = config.tag || buttonDom.tag;\n\t\tvar clickBlurs = config.clickBlurs === undefined ? true : config.clickBlurs\n\t\tvar button = $('<'+tag+'/>')\n\t\t\t.addClass( buttonDom.className )\n\t\t\t.attr( 'tabindex', this.s.dt.settings()[0].iTabIndex )\n\t\t\t.attr( 'aria-controls', this.s.dt.table().node().id )\n\t\t\t.on( 'click.dtb', function (e) {\n\t\t\t\te.preventDefault();\n\n\t\t\t\tif ( ! button.hasClass( buttonDom.disabled ) && config.action ) {\n\t\t\t\t\taction( e, dt, button, config );\n\t\t\t\t}\n\t\t\t\tif( clickBlurs ) {\n\t\t\t\t\tbutton.trigger('blur');\n\t\t\t\t}\n\t\t\t} )\n\t\t\t.on( 'keyup.dtb', function (e) {\n\t\t\t\tif ( e.keyCode === 13 ) {\n\t\t\t\t\tif ( ! button.hasClass( buttonDom.disabled ) && config.action ) {\n\t\t\t\t\t\taction( e, dt, button, config );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\n\t\t// Make `a` tags act like a link\n\t\tif ( tag.toLowerCase() === 'a' ) {\n\t\t\tbutton.attr( 'href', '#' );\n\t\t}\n\n\t\t// Button tags should have `type=button` so they don't have any default behaviour\n\t\tif ( tag.toLowerCase() === 'button' ) {\n\t\t\tbutton.attr( 'type', 'button' );\n\t\t}\n\n\t\tif ( linerDom.tag ) {\n\t\t\tvar liner = $('<'+linerDom.tag+'/>')\n\t\t\t\t.html( text( config.text ) )\n\t\t\t\t.addClass( linerDom.className );\n\n\t\t\tif ( linerDom.tag.toLowerCase() === 'a' ) {\n\t\t\t\tliner.attr( 'href', '#' );\n\t\t\t}\n\n\t\t\tbutton.append( liner );\n\t\t}\n\t\telse {\n\t\t\tbutton.html( text( config.text ) );\n\t\t}\n\n\t\tif ( config.enabled === false ) {\n\t\t\tbutton.addClass( buttonDom.disabled );\n\t\t}\n\n\t\tif ( config.className ) {\n\t\t\tbutton.addClass( config.className );\n\t\t}\n\n\t\tif ( config.titleAttr ) {\n\t\t\tbutton.attr( 'title', text( config.titleAttr ) );\n\t\t}\n\n\t\tif ( config.attr ) {\n\t\t\tbutton.attr( config.attr );\n\t\t}\n\n\t\tif ( ! config.namespace ) {\n\t\t\tconfig.namespace = '.dt-button-'+(_buttonCounter++);\n\t\t}\n\n\t\tvar buttonContainer = this.c.dom.buttonContainer;\n\t\tvar inserter;\n\t\tif ( buttonContainer && buttonContainer.tag ) {\n\t\t\tinserter = $('<'+buttonContainer.tag+'/>')\n\t\t\t\t.addClass( buttonContainer.className )\n\t\t\t\t.append( button );\n\t\t}\n\t\telse {\n\t\t\tinserter = button;\n\t\t}\n\n\t\tthis._addKey( config );\n\n\t\t// Style integration callback for DOM manipulation\n\t\t// Note that this is _not_ documented. It is currently\n\t\t// for style integration only\n\t\tif( this.c.buttonCreated ) {\n\t\t\tinserter = this.c.buttonCreated( config, inserter );\n\t\t}\n\n\t\treturn {\n\t\t\tconf:         config,\n\t\t\tnode:         button.get(0),\n\t\t\tinserter:     inserter,\n\t\t\tbuttons:      [],\n\t\t\tinCollection: inCollection,\n\t\t\tcollection:   null\n\t\t};\n\t},\n\n\t/**\n\t * Get the button object from a node (recursive)\n\t * @param  {node} node Button node\n\t * @param  {array} [buttons] Button array, uses base if not defined\n\t * @return {object} Button object\n\t * @private\n\t */\n\t_nodeToButton: function ( node, buttons )\n\t{\n\t\tif ( ! buttons ) {\n\t\t\tbuttons = this.s.buttons;\n\t\t}\n\n\t\tfor ( var i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\tif ( buttons[i].node === node ) {\n\t\t\t\treturn buttons[i];\n\t\t\t}\n\n\t\t\tif ( buttons[i].buttons.length ) {\n\t\t\t\tvar ret = this._nodeToButton( node, buttons[i].buttons );\n\n\t\t\t\tif ( ret ) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Get container array for a button from a button node (recursive)\n\t * @param  {node} node Button node\n\t * @param  {array} [buttons] Button array, uses base if not defined\n\t * @return {array} Button's host array\n\t * @private\n\t */\n\t_nodeToHost: function ( node, buttons )\n\t{\n\t\tif ( ! buttons ) {\n\t\t\tbuttons = this.s.buttons;\n\t\t}\n\n\t\tfor ( var i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\tif ( buttons[i].node === node ) {\n\t\t\t\treturn buttons;\n\t\t\t}\n\n\t\t\tif ( buttons[i].buttons.length ) {\n\t\t\t\tvar ret = this._nodeToHost( node, buttons[i].buttons );\n\n\t\t\t\tif ( ret ) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Handle a key press - determine if any button's key configured matches\n\t * what was typed and trigger the action if so.\n\t * @param  {string} character The character pressed\n\t * @param  {object} e Key event that triggered this call\n\t * @private\n\t */\n\t_keypress: function ( character, e )\n\t{\n\t\t// Check if this button press already activated on another instance of Buttons\n\t\tif ( e._buttonsHandled ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar run = function ( conf, node ) {\n\t\t\tif ( ! conf.key ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( conf.key === character ) {\n\t\t\t\te._buttonsHandled = true;\n\t\t\t\t$(node).click();\n\t\t\t}\n\t\t\telse if ( $.isPlainObject( conf.key ) ) {\n\t\t\t\tif ( conf.key.key !== character ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( conf.key.shiftKey && ! e.shiftKey ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( conf.key.altKey && ! e.altKey ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( conf.key.ctrlKey && ! e.ctrlKey ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( conf.key.metaKey && ! e.metaKey ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Made it this far - it is good\n\t\t\t\te._buttonsHandled = true;\n\t\t\t\t$(node).click();\n\t\t\t}\n\t\t};\n\n\t\tvar recurse = function ( a ) {\n\t\t\tfor ( var i=0, ien=a.length ; i<ien ; i++ ) {\n\t\t\t\trun( a[i].conf, a[i].node );\n\n\t\t\t\tif ( a[i].buttons.length ) {\n\t\t\t\t\trecurse( a[i].buttons );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\trecurse( this.s.buttons );\n\t},\n\n\t/**\n\t * Remove a key from the key listener for this instance (to be used when a\n\t * button is removed)\n\t * @param  {object} conf Button configuration\n\t * @private\n\t */\n\t_removeKey: function ( conf )\n\t{\n\t\tif ( conf.key ) {\n\t\t\tvar character = $.isPlainObject( conf.key ) ?\n\t\t\t\tconf.key.key :\n\t\t\t\tconf.key;\n\n\t\t\t// Remove only one character, as multiple buttons could have the\n\t\t\t// same listening key\n\t\t\tvar a = this.s.listenKeys.split('');\n\t\t\tvar idx = $.inArray( character, a );\n\t\t\ta.splice( idx, 1 );\n\t\t\tthis.s.listenKeys = a.join('');\n\t\t}\n\t},\n\n\t/**\n\t * Resolve a button configuration\n\t * @param  {string|function|object} conf Button config to resolve\n\t * @return {object} Button configuration\n\t * @private\n\t */\n\t_resolveExtends: function ( conf )\n\t{\n\t\tvar dt = this.s.dt;\n\t\tvar i, ien;\n\t\tvar toConfObject = function ( base ) {\n\t\t\tvar loop = 0;\n\n\t\t\t// Loop until we have resolved to a button configuration, or an\n\t\t\t// array of button configurations (which will be iterated\n\t\t\t// separately)\n\t\t\twhile ( ! $.isPlainObject(base) && ! Array.isArray(base) ) {\n\t\t\t\tif ( base === undefined ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( typeof base === 'function' ) {\n\t\t\t\t\tbase = base( dt, conf );\n\n\t\t\t\t\tif ( ! base ) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if ( typeof base === 'string' ) {\n\t\t\t\t\tif ( ! _dtButtons[ base ] ) {\n\t\t\t\t\t\tthrow 'Unknown button type: '+base;\n\t\t\t\t\t}\n\n\t\t\t\t\tbase = _dtButtons[ base ];\n\t\t\t\t}\n\n\t\t\t\tloop++;\n\t\t\t\tif ( loop > 30 ) {\n\t\t\t\t\t// Protect against misconfiguration killing the browser\n\t\t\t\t\tthrow 'Buttons: Too many iterations';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn Array.isArray( base ) ?\n\t\t\t\tbase :\n\t\t\t\t$.extend( {}, base );\n\t\t};\n\n\t\tconf = toConfObject( conf );\n\n\t\twhile ( conf && conf.extend ) {\n\t\t\t// Use `toConfObject` in case the button definition being extended\n\t\t\t// is itself a string or a function\n\t\t\tif ( ! _dtButtons[ conf.extend ] ) {\n\t\t\t\tthrow 'Cannot extend unknown button type: '+conf.extend;\n\t\t\t}\n\n\t\t\tvar objArray = toConfObject( _dtButtons[ conf.extend ] );\n\t\t\tif ( Array.isArray( objArray ) ) {\n\t\t\t\treturn objArray;\n\t\t\t}\n\t\t\telse if ( ! objArray ) {\n\t\t\t\t// This is a little brutal as it might be possible to have a\n\t\t\t\t// valid button without the extend, but if there is no extend\n\t\t\t\t// then the host button would be acting in an undefined state\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Stash the current class name\n\t\t\tvar originalClassName = objArray.className;\n\n\t\t\tconf = $.extend( {}, objArray, conf );\n\n\t\t\t// The extend will have overwritten the original class name if the\n\t\t\t// `conf` object also assigned a class, but we want to concatenate\n\t\t\t// them so they are list that is combined from all extended buttons\n\t\t\tif ( originalClassName && conf.className !== originalClassName ) {\n\t\t\t\tconf.className = originalClassName+' '+conf.className;\n\t\t\t}\n\n\t\t\t// Buttons to be added to a collection  -gives the ability to define\n\t\t\t// if buttons should be added to the start or end of a collection\n\t\t\tvar postfixButtons = conf.postfixButtons;\n\t\t\tif ( postfixButtons ) {\n\t\t\t\tif ( ! conf.buttons ) {\n\t\t\t\t\tconf.buttons = [];\n\t\t\t\t}\n\n\t\t\t\tfor ( i=0, ien=postfixButtons.length ; i<ien ; i++ ) {\n\t\t\t\t\tconf.buttons.push( postfixButtons[i] );\n\t\t\t\t}\n\n\t\t\t\tconf.postfixButtons = null;\n\t\t\t}\n\n\t\t\tvar prefixButtons = conf.prefixButtons;\n\t\t\tif ( prefixButtons ) {\n\t\t\t\tif ( ! conf.buttons ) {\n\t\t\t\t\tconf.buttons = [];\n\t\t\t\t}\n\n\t\t\t\tfor ( i=0, ien=prefixButtons.length ; i<ien ; i++ ) {\n\t\t\t\t\tconf.buttons.splice( i, 0, prefixButtons[i] );\n\t\t\t\t}\n\n\t\t\t\tconf.prefixButtons = null;\n\t\t\t}\n\n\t\t\t// Although we want the `conf` object to overwrite almost all of\n\t\t\t// the properties of the object being extended, the `extend`\n\t\t\t// property should come from the object being extended\n\t\t\tconf.extend = objArray.extend;\n\t\t}\n\n\t\treturn conf;\n\t},\n\n\t/**\n\t * Display (and replace if there is an existing one) a popover attached to a button\n\t * @param {string|node} content Content to show\n\t * @param {DataTable.Api} hostButton DT API instance of the button\n\t * @param {object} inOpts Options (see object below for all options)\n\t */\n\t_popover: function ( content, hostButton, inOpts ) {\n\t\tvar dt = hostButton;\n\t\tvar buttonsSettings = this.c;\n\t\tvar options = $.extend( {\n\t\t\talign: 'button-left', // button-right, dt-container\n\t\t\tautoClose: false,\n\t\t\tbackground: true,\n\t\t\tbackgroundClassName: 'dt-button-background',\n\t\t\tcontentClassName: buttonsSettings.dom.collection.className,\n\t\t\tcollectionLayout: '',\n\t\t\tcollectionTitle: '',\n\t\t\tdropup: false,\n\t\t\tfade: 400,\n\t\t\trightAlignClassName: 'dt-button-right',\n\t\t\ttag: buttonsSettings.dom.collection.tag\n\t\t}, inOpts );\n\t\tvar hostNode = hostButton.node();\n\n\t\tvar close = function () {\n\t\t\t_fadeOut(\n\t\t\t\t$('.dt-button-collection'),\n\t\t\t\toptions.fade,\n\t\t\t\tfunction () {\n\t\t\t\t\t$(this).detach();\n\t\t\t\t}\n\t\t\t);\n\n\t\t\t$(dt.buttons( '[aria-haspopup=\"true\"][aria-expanded=\"true\"]' ).nodes())\n\t\t\t\t.attr('aria-expanded', 'false');\n\n\t\t\t$('div.dt-button-background').off( 'click.dtb-collection' );\n\t\t\tButtons.background( false, options.backgroundClassName, options.fade, hostNode );\n\n\t\t\t$('body').off( '.dtb-collection' );\n\t\t\tdt.off( 'buttons-action.b-internal' );\n\t\t};\n\n\t\tif (content === false) {\n\t\t\tclose();\n\t\t}\n\n\t\tvar existingExpanded = $(dt.buttons( '[aria-haspopup=\"true\"][aria-expanded=\"true\"]' ).nodes());\n\t\tif ( existingExpanded.length ) {\n\t\t\thostNode = existingExpanded.eq(0);\n\n\t\t\tclose();\n\t\t}\n\n\t\tvar display = $('<div/>')\n\t\t\t.addClass('dt-button-collection')\n\t\t\t.addClass(options.collectionLayout)\n\t\t\t.css('display', 'none');\n\n\t\tcontent = $(content)\n\t\t\t.addClass(options.contentClassName)\n\t\t\t.attr('role', 'menu')\n\t\t\t.appendTo(display);\n\n\t\thostNode.attr( 'aria-expanded', 'true' );\n\n\t\tif ( hostNode.parents('body')[0] !== document.body ) {\n\t\t\thostNode = document.body.lastChild;\n\t\t}\n\n\t\tif ( options.collectionTitle ) {\n\t\t\tdisplay.prepend('<div class=\"dt-button-collection-title\">'+options.collectionTitle+'</div>');\n\t\t}\n\n\t\t_fadeIn( display.insertAfter( hostNode ), options.fade );\n\n\t\tvar tableContainer = $( hostButton.table().container() );\n\t\tvar position = display.css( 'position' );\n\n\t\tif ( options.align === 'dt-container' ) {\n\t\t\thostNode = hostNode.parent();\n\t\t\tdisplay.css('width', tableContainer.width());\n\t\t}\n\n\t\t// Align the popover relative to the DataTables container\n\t\t// Useful for wide popovers such as SearchPanes\n\t\tif (position === 'absolute') {\n\t\t\t// Align relative to the host button\n\t\t\tvar hostPosition = hostNode.position();\n\t\t\tvar buttonPosition = $(hostButton.node()).position();\n\n\t\t\tdisplay.css( {\n\t\t\t\ttop: buttonPosition.top + hostNode.outerHeight(),\n\t\t\t\tleft: hostPosition.left\n\t\t\t} );\n\n\t\t\t// calculate overflow when positioned beneath\n\t\t\tvar collectionHeight = display.outerHeight();\n\t\t\tvar tableBottom = tableContainer.offset().top + tableContainer.height();\n\t\t\tvar listBottom = buttonPosition.top + hostNode.outerHeight() + collectionHeight;\n\t\t\tvar bottomOverflow = listBottom - tableBottom;\n\n\t\t\t// calculate overflow when positioned above\n\t\t\tvar listTop = buttonPosition.top - collectionHeight;\n\t\t\tvar tableTop = tableContainer.offset().top;\n\t\t\tvar topOverflow = tableTop - listTop;\n\n\t\t\t// if bottom overflow is larger, move to the top because it fits better, or if dropup is requested\n\t\t\tvar moveTop = buttonPosition.top - collectionHeight - 5;\n\t\t\tif ( (bottomOverflow > topOverflow || options.dropup) && -moveTop < tableTop ) {\n\t\t\t\tdisplay.css( 'top', moveTop);\n\t\t\t}\n\n\t\t\t// Get the size of the container (left and width - and thus also right)\n\t\t\tvar tableLeft = tableContainer.offset().left;\n\t\t\tvar tableWidth = tableContainer.width();\n\t\t\tvar tableRight = tableLeft + tableWidth;\n\n\t\t\t// Get the size of the popover (left and width - and ...)\n\t\t\tvar popoverLeft = display.offset().left;\n\t\t\tvar popoverWidth = display.width();\n\t\t\tvar popoverRight = popoverLeft + popoverWidth;\n\n\t\t\t// Get the size of the host buttons (left and width - and ...)\n\t\t\tvar buttonsLeft = hostNode.offset().left;\n\t\t\tvar buttonsWidth = hostNode.outerWidth()\n\t\t\tvar buttonsRight = buttonsLeft + buttonsWidth;\n\n\t\t\tif (\n\t\t\t\tdisplay.hasClass( options.rightAlignClassName ) ||\n\t\t\t\tdisplay.hasClass( options.leftAlignClassName ) ||\n\t\t\t\toptions.align === 'dt-container'\n\t\t\t){\n\t\t\t\t// You've then got all the numbers you need to do some calculations and if statements,\n\t\t\t\t//  so we can do some quick JS maths and apply it only once\n\t\t\t\t// If it has the right align class OR the buttons are right aligned OR the button container is floated right,\n\t\t\t\t//  then calculate left position for the popover to align the popover to the right hand\n\t\t\t\t//  side of the button - check to see if the left of the popover is inside the table container.\n\t\t\t\t// If not, move the popover so it is, but not more than it means that the popover is to the right of the table container\n\t\t\t\tvar popoverShuffle = 0;\n\t\t\t\tif ( display.hasClass( options.rightAlignClassName )) {\n\t\t\t\t\tpopoverShuffle = buttonsRight - popoverRight;\n\t\t\t\t\tif(tableLeft > (popoverLeft + popoverShuffle)){\n\t\t\t\t\t\tvar leftGap = tableLeft - (popoverLeft + popoverShuffle);\n\t\t\t\t\t\tvar rightGap = tableRight - (popoverRight + popoverShuffle);\n\t\t\n\t\t\t\t\t\tif(leftGap > rightGap){\n\t\t\t\t\t\t\tpopoverShuffle += rightGap; \n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tpopoverShuffle += leftGap;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// else attempt to left align the popover to the button. Similar to above, if the popover's right goes past the table container's right,\n\t\t\t\t//  then move it back, but not so much that it goes past the left of the table container\n\t\t\t\telse {\n\t\t\t\t\tpopoverShuffle = tableLeft - popoverLeft;\n\t\n\t\t\t\t\tif(tableRight < (popoverRight + popoverShuffle)){\n\t\t\t\t\t\tvar leftGap = tableLeft - (popoverLeft + popoverShuffle);\n\t\t\t\t\t\tvar rightGap = tableRight - (popoverRight + popoverShuffle);\n\t\n\t\t\t\t\t\tif(leftGap > rightGap ){\n\t\t\t\t\t\t\tpopoverShuffle += rightGap;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tpopoverShuffle += leftGap;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tdisplay.css('left', display.position().left + popoverShuffle);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvar top = hostNode.offset().top\n\t\t\t\tvar popoverShuffle = 0;\n\n\t\t\t\tpopoverShuffle = options.align === 'button-right'\n\t\t\t\t\t? buttonsRight - popoverRight\n\t\t\t\t\t: buttonsLeft - popoverLeft;\n\n\t\t\t\tdisplay.css('left', display.position().left + popoverShuffle);\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t}\n\t\telse {\n\t\t\t// Fix position - centre on screen\n\t\t\tvar top = display.height() / 2;\n\t\t\tif ( top > $(window).height() / 2 ) {\n\t\t\t\ttop = $(window).height() / 2;\n\t\t\t}\n\n\t\t\tdisplay.css( 'marginTop', top*-1 );\n\t\t}\n\n\t\tif ( options.background ) {\n\t\t\tButtons.background( true, options.backgroundClassName, options.fade, hostNode );\n\t\t}\n\n\t\t// This is bonkers, but if we don't have a click listener on the\n\t\t// background element, iOS Safari will ignore the body click\n\t\t// listener below. An empty function here is all that is\n\t\t// required to make it work...\n\t\t$('div.dt-button-background').on( 'click.dtb-collection', function () {} );\n\n\t\t$('body')\n\t\t\t.on( 'click.dtb-collection', function (e) {\n\t\t\t\t// andSelf is deprecated in jQ1.8, but we want 1.7 compat\n\t\t\t\tvar back = $.fn.addBack ? 'addBack' : 'andSelf';\n\t\t\t\tvar parent = $(e.target).parent()[0];\n\n\t\t\t\tif (( ! $(e.target).parents()[back]().filter( content ).length  && !$(parent).hasClass('dt-buttons')) || $(e.target).hasClass('dt-button-background')) {\n\t\t\t\t\tclose();\n\t\t\t\t}\n\t\t\t} )\n\t\t\t.on( 'keyup.dtb-collection', function (e) {\n\t\t\t\tif ( e.keyCode === 27 ) {\n\t\t\t\t\tclose();\n\t\t\t\t}\n\t\t\t} );\n\n\t\tif ( options.autoClose ) {\n\t\t\tsetTimeout( function () {\n\t\t\t\tdt.on( 'buttons-action.b-internal', function (e, btn, dt, node) {\n\t\t\t\t\tif ( node[0] === hostNode[0] ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tclose();\n\t\t\t\t} );\n\t\t\t}, 0);\n\t\t}\n\n\t\t$(display).trigger('buttons-popover.dt');\n\t}\n} );\n\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Statics\n */\n\n/**\n * Show / hide a background layer behind a collection\n * @param  {boolean} Flag to indicate if the background should be shown or\n *   hidden \n * @param  {string} Class to assign to the background\n * @static\n */\nButtons.background = function ( show, className, fade, insertPoint ) {\n\tif ( fade === undefined ) {\n\t\tfade = 400;\n\t}\n\tif ( ! insertPoint ) {\n\t\tinsertPoint = document.body;\n\t}\n\n\tif ( show ) {\n\t\t_fadeIn(\n\t\t\t$('<div/>')\n\t\t\t\t.addClass( className )\n\t\t\t\t.css( 'display', 'none' )\n\t\t\t\t.insertAfter( insertPoint ),\n\t\t\tfade\n\t\t);\n\t}\n\telse {\n\t\t_fadeOut(\n\t\t\t$('div.'+className),\n\t\t\tfade,\n\t\t\tfunction () {\n\t\t\t\t$(this)\n\t\t\t\t\t.removeClass( className )\n\t\t\t\t\t.remove();\n\t\t\t}\n\t\t);\n\t}\n};\n\n/**\n * Instance selector - select Buttons instances based on an instance selector\n * value from the buttons assigned to a DataTable. This is only useful if\n * multiple instances are attached to a DataTable.\n * @param  {string|int|array} Instance selector - see `instance-selector`\n *   documentation on the DataTables site\n * @param  {array} Button instance array that was attached to the DataTables\n *   settings object\n * @return {array} Buttons instances\n * @static\n */\nButtons.instanceSelector = function ( group, buttons )\n{\n\tif ( group === undefined || group === null ) {\n\t\treturn $.map( buttons, function ( v ) {\n\t\t\treturn v.inst;\n\t\t} );\n\t}\n\n\tvar ret = [];\n\tvar names = $.map( buttons, function ( v ) {\n\t\treturn v.name;\n\t} );\n\n\t// Flatten the group selector into an array of single options\n\tvar process = function ( input ) {\n\t\tif ( Array.isArray( input ) ) {\n\t\t\tfor ( var i=0, ien=input.length ; i<ien ; i++ ) {\n\t\t\t\tprocess( input[i] );\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif ( typeof input === 'string' ) {\n\t\t\tif ( input.indexOf( ',' ) !== -1 ) {\n\t\t\t\t// String selector, list of names\n\t\t\t\tprocess( input.split(',') );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// String selector individual name\n\t\t\t\tvar idx = $.inArray( input.trim(), names );\n\n\t\t\t\tif ( idx !== -1 ) {\n\t\t\t\t\tret.push( buttons[ idx ].inst );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if ( typeof input === 'number' ) {\n\t\t\t// Index selector\n\t\t\tret.push( buttons[ input ].inst );\n\t\t}\n\t};\n\t\n\tprocess( group );\n\n\treturn ret;\n};\n\n/**\n * Button selector - select one or more buttons from a selector input so some\n * operation can be performed on them.\n * @param  {array} Button instances array that the selector should operate on\n * @param  {string|int|node|jQuery|array} Button selector - see\n *   `button-selector` documentation on the DataTables site\n * @return {array} Array of objects containing `inst` and `idx` properties of\n *   the selected buttons so you know which instance each button belongs to.\n * @static\n */\nButtons.buttonSelector = function ( insts, selector )\n{\n\tvar ret = [];\n\tvar nodeBuilder = function ( a, buttons, baseIdx ) {\n\t\tvar button;\n\t\tvar idx;\n\n\t\tfor ( var i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\tbutton = buttons[i];\n\n\t\t\tif ( button ) {\n\t\t\t\tidx = baseIdx !== undefined ?\n\t\t\t\t\tbaseIdx+i :\n\t\t\t\t\ti+'';\n\n\t\t\t\ta.push( {\n\t\t\t\t\tnode: button.node,\n\t\t\t\t\tname: button.conf.name,\n\t\t\t\t\tidx:  idx\n\t\t\t\t} );\n\n\t\t\t\tif ( button.buttons ) {\n\t\t\t\t\tnodeBuilder( a, button.buttons, idx+'-' );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tvar run = function ( selector, inst ) {\n\t\tvar i, ien;\n\t\tvar buttons = [];\n\t\tnodeBuilder( buttons, inst.s.buttons );\n\n\t\tvar nodes = $.map( buttons, function (v) {\n\t\t\treturn v.node;\n\t\t} );\n\n\t\tif ( Array.isArray( selector ) || selector instanceof $ ) {\n\t\t\tfor ( i=0, ien=selector.length ; i<ien ; i++ ) {\n\t\t\t\trun( selector[i], inst );\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif ( selector === null || selector === undefined || selector === '*' ) {\n\t\t\t// Select all\n\t\t\tfor ( i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\t\tret.push( {\n\t\t\t\t\tinst: inst,\n\t\t\t\t\tnode: buttons[i].node\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t\telse if ( typeof selector === 'number' ) {\n\t\t\t// Main button index selector\n\t\t\tret.push( {\n\t\t\t\tinst: inst,\n\t\t\t\tnode: inst.s.buttons[ selector ].node\n\t\t\t} );\n\t\t}\n\t\telse if ( typeof selector === 'string' ) {\n\t\t\tif ( selector.indexOf( ',' ) !== -1 ) {\n\t\t\t\t// Split\n\t\t\t\tvar a = selector.split(',');\n\n\t\t\t\tfor ( i=0, ien=a.length ; i<ien ; i++ ) {\n\t\t\t\t\trun( a[i].trim(), inst );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( selector.match( /^\\d+(\\-\\d+)*$/ ) ) {\n\t\t\t\t// Sub-button index selector\n\t\t\t\tvar indexes = $.map( buttons, function (v) {\n\t\t\t\t\treturn v.idx;\n\t\t\t\t} );\n\n\t\t\t\tret.push( {\n\t\t\t\t\tinst: inst,\n\t\t\t\t\tnode: buttons[ $.inArray( selector, indexes ) ].node\n\t\t\t\t} );\n\t\t\t}\n\t\t\telse if ( selector.indexOf( ':name' ) !== -1 ) {\n\t\t\t\t// Button name selector\n\t\t\t\tvar name = selector.replace( ':name', '' );\n\n\t\t\t\tfor ( i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\t\t\tif ( buttons[i].name === name ) {\n\t\t\t\t\t\tret.push( {\n\t\t\t\t\t\t\tinst: inst,\n\t\t\t\t\t\t\tnode: buttons[i].node\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// jQuery selector on the nodes\n\t\t\t\t$( nodes ).filter( selector ).each( function () {\n\t\t\t\t\tret.push( {\n\t\t\t\t\t\tinst: inst,\n\t\t\t\t\t\tnode: this\n\t\t\t\t\t} );\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t\telse if ( typeof selector === 'object' && selector.nodeName ) {\n\t\t\t// Node selector\n\t\t\tvar idx = $.inArray( selector, nodes );\n\n\t\t\tif ( idx !== -1 ) {\n\t\t\t\tret.push( {\n\t\t\t\t\tinst: inst,\n\t\t\t\t\tnode: nodes[ idx ]\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t};\n\n\n\tfor ( var i=0, ien=insts.length ; i<ien ; i++ ) {\n\t\tvar inst = insts[i];\n\n\t\trun( selector, inst );\n\t}\n\n\treturn ret;\n};\n\n/**\n * Default function used for formatting output data.\n * @param {*} str Data to strip\n */\nButtons.stripData = function ( str, config ) {\n\tif ( typeof str !== 'string' ) {\n\t\treturn str;\n\t}\n\n\t// Always remove script tags\n\tstr = str.replace( /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi, '' );\n\n\t// Always remove comments\n\tstr = str.replace( /<!\\-\\-.*?\\-\\->/g, '' );\n\n\tif ( ! config || config.stripHtml ) {\n\t\tstr = str.replace( /<[^>]*>/g, '' );\n\t}\n\n\tif ( ! config || config.trim ) {\n\t\tstr = str.replace( /^\\s+|\\s+$/g, '' );\n\t}\n\n\tif ( ! config || config.stripNewlines ) {\n\t\tstr = str.replace( /\\n/g, ' ' );\n\t}\n\n\tif ( ! config || config.decodeEntities ) {\n\t\t_exportTextarea.innerHTML = str;\n\t\tstr = _exportTextarea.value;\n\t}\n\n\treturn str;\n};\n\n\n/**\n * Buttons defaults. For full documentation, please refer to the docs/option\n * directory or the DataTables site.\n * @type {Object}\n * @static\n */\nButtons.defaults = {\n\tbuttons: [ 'copy', 'excel', 'csv', 'pdf', 'print' ],\n\tname: 'main',\n\ttabIndex: 0,\n\tdom: {\n\t\tcontainer: {\n\t\t\ttag: 'div',\n\t\t\tclassName: 'dt-buttons'\n\t\t},\n\t\tcollection: {\n\t\t\ttag: 'div',\n\t\t\tclassName: ''\n\t\t},\n\t\tbutton: {\n\t\t\ttag: 'button',\n\t\t\tclassName: 'dt-button',\n\t\t\tactive: 'active',\n\t\t\tdisabled: 'disabled'\n\t\t},\n\t\tbuttonLiner: {\n\t\t\ttag: 'span',\n\t\t\tclassName: ''\n\t\t}\n\t}\n};\n\n/**\n * Version information\n * @type {string}\n * @static\n */\nButtons.version = '1.7.1';\n\n\n$.extend( _dtButtons, {\n\tcollection: {\n\t\ttext: function ( dt ) {\n\t\t\treturn dt.i18n( 'buttons.collection', 'Collection' );\n\t\t},\n\t\tclassName: 'buttons-collection',\n\t\tinit: function ( dt, button, config ) {\n\t\t\tbutton.attr( 'aria-expanded', false );\n\t\t},\n\t\taction: function ( e, dt, button, config ) {\n\t\t\te.stopPropagation();\n\n\t\t\tif ( config._collection.parents('body').length ) {\n\t\t\t\tthis.popover(false, config);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.popover(config._collection, config);\n\t\t\t}\n\t\t},\n\t\tattr: {\n\t\t\t'aria-haspopup': true\n\t\t}\n\t\t// Also the popover options, defined in Buttons.popover\n\t},\n\tcopy: function ( dt, conf ) {\n\t\tif ( _dtButtons.copyHtml5 ) {\n\t\t\treturn 'copyHtml5';\n\t\t}\n\t},\n\tcsv: function ( dt, conf ) {\n\t\tif ( _dtButtons.csvHtml5 && _dtButtons.csvHtml5.available( dt, conf ) ) {\n\t\t\treturn 'csvHtml5';\n\t\t}\n\t},\n\texcel: function ( dt, conf ) {\n\t\tif ( _dtButtons.excelHtml5 && _dtButtons.excelHtml5.available( dt, conf ) ) {\n\t\t\treturn 'excelHtml5';\n\t\t}\n\t},\n\tpdf: function ( dt, conf ) {\n\t\tif ( _dtButtons.pdfHtml5 && _dtButtons.pdfHtml5.available( dt, conf ) ) {\n\t\t\treturn 'pdfHtml5';\n\t\t}\n\t},\n\tpageLength: function ( dt ) {\n\t\tvar lengthMenu = dt.settings()[0].aLengthMenu;\n\t\tvar vals = [];\n\t\tvar lang = [];\n\t\tvar text = function ( dt ) {\n\t\t\treturn dt.i18n( 'buttons.pageLength', {\n\t\t\t\t\"-1\": 'Show all rows',\n\t\t\t\t_:    'Show %d rows'\n\t\t\t}, dt.page.len() );\n\t\t};\n\n\t\t// Support for DataTables 1.x 2D array\n\t\tif (Array.isArray( lengthMenu[0] )) {\n\t\t\tvals = lengthMenu[0];\n\t\t\tlang = lengthMenu[1];\n\t\t}\n\t\telse {\n\t\t\tfor (var i=0 ; i<lengthMenu.length ; i++) {\n\t\t\t\tvar option = lengthMenu[i];\n\n\t\t\t\t// Support for DataTables 2 object in the array\n\t\t\t\tif ($.isPlainObject(option)) {\n\t\t\t\t\tvals.push(option.value);\n\t\t\t\t\tlang.push(option.label);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvals.push(option);\n\t\t\t\t\tlang.push(option);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\textend: 'collection',\n\t\t\ttext: text,\n\t\t\tclassName: 'buttons-page-length',\n\t\t\tautoClose: true,\n\t\t\tbuttons: $.map( vals, function ( val, i ) {\n\t\t\t\treturn {\n\t\t\t\t\ttext: lang[i],\n\t\t\t\t\tclassName: 'button-page-length',\n\t\t\t\t\taction: function ( e, dt ) {\n\t\t\t\t\t\tdt.page.len( val ).draw();\n\t\t\t\t\t},\n\t\t\t\t\tinit: function ( dt, node, conf ) {\n\t\t\t\t\t\tvar that = this;\n\t\t\t\t\t\tvar fn = function () {\n\t\t\t\t\t\t\tthat.active( dt.page.len() === val );\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tdt.on( 'length.dt'+conf.namespace, fn );\n\t\t\t\t\t\tfn();\n\t\t\t\t\t},\n\t\t\t\t\tdestroy: function ( dt, node, conf ) {\n\t\t\t\t\t\tdt.off( 'length.dt'+conf.namespace );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t} ),\n\t\t\tinit: function ( dt, node, conf ) {\n\t\t\t\tvar that = this;\n\t\t\t\tdt.on( 'length.dt'+conf.namespace, function () {\n\t\t\t\t\tthat.text( conf.text );\n\t\t\t\t} );\n\t\t\t},\n\t\t\tdestroy: function ( dt, node, conf ) {\n\t\t\t\tdt.off( 'length.dt'+conf.namespace );\n\t\t\t}\n\t\t};\n\t}\n} );\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * DataTables API\n *\n * For complete documentation, please refer to the docs/api directory or the\n * DataTables site\n */\n\n// Buttons group and individual button selector\nDataTable.Api.register( 'buttons()', function ( group, selector ) {\n\t// Argument shifting\n\tif ( selector === undefined ) {\n\t\tselector = group;\n\t\tgroup = undefined;\n\t}\n\n\tthis.selector.buttonGroup = group;\n\n\tvar res = this.iterator( true, 'table', function ( ctx ) {\n\t\tif ( ctx._buttons ) {\n\t\t\treturn Buttons.buttonSelector(\n\t\t\t\tButtons.instanceSelector( group, ctx._buttons ),\n\t\t\t\tselector\n\t\t\t);\n\t\t}\n\t}, true );\n\n\tres._groupSelector = group;\n\treturn res;\n} );\n\n// Individual button selector\nDataTable.Api.register( 'button()', function ( group, selector ) {\n\t// just run buttons() and truncate\n\tvar buttons = this.buttons( group, selector );\n\n\tif ( buttons.length > 1 ) {\n\t\tbuttons.splice( 1, buttons.length );\n\t}\n\n\treturn buttons;\n} );\n\n// Active buttons\nDataTable.Api.registerPlural( 'buttons().active()', 'button().active()', function ( flag ) {\n\tif ( flag === undefined ) {\n\t\treturn this.map( function ( set ) {\n\t\t\treturn set.inst.active( set.node );\n\t\t} );\n\t}\n\n\treturn this.each( function ( set ) {\n\t\tset.inst.active( set.node, flag );\n\t} );\n} );\n\n// Get / set button action\nDataTable.Api.registerPlural( 'buttons().action()', 'button().action()', function ( action ) {\n\tif ( action === undefined ) {\n\t\treturn this.map( function ( set ) {\n\t\t\treturn set.inst.action( set.node );\n\t\t} );\n\t}\n\n\treturn this.each( function ( set ) {\n\t\tset.inst.action( set.node, action );\n\t} );\n} );\n\n// Enable / disable buttons\nDataTable.Api.register( ['buttons().enable()', 'button().enable()'], function ( flag ) {\n\treturn this.each( function ( set ) {\n\t\tset.inst.enable( set.node, flag );\n\t} );\n} );\n\n// Disable buttons\nDataTable.Api.register( ['buttons().disable()', 'button().disable()'], function () {\n\treturn this.each( function ( set ) {\n\t\tset.inst.disable( set.node );\n\t} );\n} );\n\n// Get button nodes\nDataTable.Api.registerPlural( 'buttons().nodes()', 'button().node()', function () {\n\tvar jq = $();\n\n\t// jQuery will automatically reduce duplicates to a single entry\n\t$( this.each( function ( set ) {\n\t\tjq = jq.add( set.inst.node( set.node ) );\n\t} ) );\n\n\treturn jq;\n} );\n\n// Get / set button processing state\nDataTable.Api.registerPlural( 'buttons().processing()', 'button().processing()', function ( flag ) {\n\tif ( flag === undefined ) {\n\t\treturn this.map( function ( set ) {\n\t\t\treturn set.inst.processing( set.node );\n\t\t} );\n\t}\n\n\treturn this.each( function ( set ) {\n\t\tset.inst.processing( set.node, flag );\n\t} );\n} );\n\n// Get / set button text (i.e. the button labels)\nDataTable.Api.registerPlural( 'buttons().text()', 'button().text()', function ( label ) {\n\tif ( label === undefined ) {\n\t\treturn this.map( function ( set ) {\n\t\t\treturn set.inst.text( set.node );\n\t\t} );\n\t}\n\n\treturn this.each( function ( set ) {\n\t\tset.inst.text( set.node, label );\n\t} );\n} );\n\n// Trigger a button's action\nDataTable.Api.registerPlural( 'buttons().trigger()', 'button().trigger()', function () {\n\treturn this.each( function ( set ) {\n\t\tset.inst.node( set.node ).trigger( 'click' );\n\t} );\n} );\n\n// Button resolver to the popover\nDataTable.Api.register( 'button().popover()', function (content, options) {\n\treturn this.map( function ( set ) {\n\t\treturn set.inst._popover( content, this.button(this[0].node), options );\n\t} );\n} );\n\n// Get the container elements\nDataTable.Api.register( 'buttons().containers()', function () {\n\tvar jq = $();\n\tvar groupSelector = this._groupSelector;\n\n\t// We need to use the group selector directly, since if there are no buttons\n\t// the result set will be empty\n\tthis.iterator( true, 'table', function ( ctx ) {\n\t\tif ( ctx._buttons ) {\n\t\t\tvar insts = Buttons.instanceSelector( groupSelector, ctx._buttons );\n\n\t\t\tfor ( var i=0, ien=insts.length ; i<ien ; i++ ) {\n\t\t\t\tjq = jq.add( insts[i].container() );\n\t\t\t}\n\t\t}\n\t} );\n\n\treturn jq;\n} );\n\nDataTable.Api.register( 'buttons().container()', function () {\n\t// API level of nesting is `buttons()` so we can zip into the containers method\n\treturn this.containers().eq(0);\n} );\n\n// Add a new button\nDataTable.Api.register( 'button().add()', function ( idx, conf ) {\n\tvar ctx = this.context;\n\n\t// Don't use `this` as it could be empty - select the instances directly\n\tif ( ctx.length ) {\n\t\tvar inst = Buttons.instanceSelector( this._groupSelector, ctx[0]._buttons );\n\n\t\tif ( inst.length ) {\n\t\t\tinst[0].add( conf, idx );\n\t\t}\n\t}\n\n\treturn this.button( this._groupSelector, idx );\n} );\n\n// Destroy the button sets selected\nDataTable.Api.register( 'buttons().destroy()', function () {\n\tthis.pluck( 'inst' ).unique().each( function ( inst ) {\n\t\tinst.destroy();\n\t} );\n\n\treturn this;\n} );\n\n// Remove a button\nDataTable.Api.registerPlural( 'buttons().remove()', 'buttons().remove()', function () {\n\tthis.each( function ( set ) {\n\t\tset.inst.remove( set.node );\n\t} );\n\n\treturn this;\n} );\n\n// Information box that can be used by buttons\nvar _infoTimer;\nDataTable.Api.register( 'buttons.info()', function ( title, message, time ) {\n\tvar that = this;\n\n\tif ( title === false ) {\n\t\tthis.off('destroy.btn-info');\n\t\t_fadeOut(\n\t\t\t$('#datatables_buttons_info'),\n\t\t\t400,\n\t\t\tfunction () {\n\t\t\t\t$(this).remove();\n\t\t\t}\n\t\t);\n\t\tclearTimeout( _infoTimer );\n\t\t_infoTimer = null;\n\n\t\treturn this;\n\t}\n\n\tif ( _infoTimer ) {\n\t\tclearTimeout( _infoTimer );\n\t}\n\n\tif ( $('#datatables_buttons_info').length ) {\n\t\t$('#datatables_buttons_info').remove();\n\t}\n\n\ttitle = title ? '<h2>'+title+'</h2>' : '';\n\n\t_fadeIn(\n\t\t$('<div id=\"datatables_buttons_info\" class=\"dt-button-info\"/>')\n\t\t\t.html( title )\n\t\t\t.append( $('<div/>')[ typeof message === 'string' ? 'html' : 'append' ]( message ) )\n\t\t\t.css( 'display', 'none' )\n\t\t\t.appendTo( 'body' )\n\t);\n\n\tif ( time !== undefined && time !== 0 ) {\n\t\t_infoTimer = setTimeout( function () {\n\t\t\tthat.buttons.info( false );\n\t\t}, time );\n\t}\n\n\tthis.on('destroy.btn-info', function () {\n\t\tthat.buttons.info(false);\n\t});\n\n\treturn this;\n} );\n\n// Get data from the table for export - this is common to a number of plug-in\n// buttons so it is included in the Buttons core library\nDataTable.Api.register( 'buttons.exportData()', function ( options ) {\n\tif ( this.context.length ) {\n\t\treturn _exportData( new DataTable.Api( this.context[0] ), options );\n\t}\n} );\n\n// Get information about the export that is common to many of the export data\n// types (DRY)\nDataTable.Api.register( 'buttons.exportInfo()', function ( conf ) {\n\tif ( ! conf ) {\n\t\tconf = {};\n\t}\n\n\treturn {\n\t\tfilename: _filename( conf ),\n\t\ttitle: _title( conf ),\n\t\tmessageTop: _message(this, conf.message || conf.messageTop, 'top'),\n\t\tmessageBottom: _message(this, conf.messageBottom, 'bottom')\n\t};\n} );\n\n\n\n/**\n * Get the file name for an exported file.\n *\n * @param {object}\tconfig Button configuration\n * @param {boolean} incExtension Include the file name extension\n */\nvar _filename = function ( config )\n{\n\t// Backwards compatibility\n\tvar filename = config.filename === '*' && config.title !== '*' && config.title !== undefined && config.title !== null && config.title !== '' ?\n\t\tconfig.title :\n\t\tconfig.filename;\n\n\tif ( typeof filename === 'function' ) {\n\t\tfilename = filename();\n\t}\n\n\tif ( filename === undefined || filename === null ) {\n\t\treturn null;\n\t}\n\n\tif ( filename.indexOf( '*' ) !== -1 ) {\n\t\tfilename = filename.replace( '*', $('head > title').text() ).trim();\n\t}\n\n\t// Strip characters which the OS will object to\n\tfilename = filename.replace(/[^a-zA-Z0-9_\\u00A1-\\uFFFF\\.,\\-_ !\\(\\)]/g, \"\");\n\n\tvar extension = _stringOrFunction( config.extension );\n\tif ( ! extension ) {\n\t\textension = '';\n\t}\n\n\treturn filename + extension;\n};\n\n/**\n * Simply utility method to allow parameters to be given as a function\n *\n * @param {undefined|string|function} option Option\n * @return {null|string} Resolved value\n */\nvar _stringOrFunction = function ( option )\n{\n\tif ( option === null || option === undefined ) {\n\t\treturn null;\n\t}\n\telse if ( typeof option === 'function' ) {\n\t\treturn option();\n\t}\n\treturn option;\n};\n\n/**\n * Get the title for an exported file.\n *\n * @param {object} config\tButton configuration\n */\nvar _title = function ( config )\n{\n\tvar title = _stringOrFunction( config.title );\n\n\treturn title === null ?\n\t\tnull : title.indexOf( '*' ) !== -1 ?\n\t\t\ttitle.replace( '*', $('head > title').text() || 'Exported data' ) :\n\t\t\ttitle;\n};\n\nvar _message = function ( dt, option, position )\n{\n\tvar message = _stringOrFunction( option );\n\tif ( message === null ) {\n\t\treturn null;\n\t}\n\n\tvar caption = $('caption', dt.table().container()).eq(0);\n\tif ( message === '*' ) {\n\t\tvar side = caption.css( 'caption-side' );\n\t\tif ( side !== position ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn caption.length ?\n\t\t\tcaption.text() :\n\t\t\t'';\n\t}\n\n\treturn message;\n};\n\n\n\n\nvar _exportTextarea = $('<textarea/>')[0];\nvar _exportData = function ( dt, inOpts )\n{\n\tvar config = $.extend( true, {}, {\n\t\trows:           null,\n\t\tcolumns:        '',\n\t\tmodifier:       {\n\t\t\tsearch: 'applied',\n\t\t\torder:  'applied'\n\t\t},\n\t\torthogonal:     'display',\n\t\tstripHtml:      true,\n\t\tstripNewlines:  true,\n\t\tdecodeEntities: true,\n\t\ttrim:           true,\n\t\tformat:         {\n\t\t\theader: function ( d ) {\n\t\t\t\treturn Buttons.stripData( d, config );\n\t\t\t},\n\t\t\tfooter: function ( d ) {\n\t\t\t\treturn Buttons.stripData( d, config );\n\t\t\t},\n\t\t\tbody: function ( d ) {\n\t\t\t\treturn Buttons.stripData( d, config );\n\t\t\t}\n\t\t},\n\t\tcustomizeData: null\n\t}, inOpts );\n\n\tvar header = dt.columns( config.columns ).indexes().map( function (idx) {\n\t\tvar el = dt.column( idx ).header();\n\t\treturn config.format.header( el.innerHTML, idx, el );\n\t} ).toArray();\n\n\tvar footer = dt.table().footer() ?\n\t\tdt.columns( config.columns ).indexes().map( function (idx) {\n\t\t\tvar el = dt.column( idx ).footer();\n\t\t\treturn config.format.footer( el ? el.innerHTML : '', idx, el );\n\t\t} ).toArray() :\n\t\tnull;\n\t\n\t// If Select is available on this table, and any rows are selected, limit the export\n\t// to the selected rows. If no rows are selected, all rows will be exported. Specify\n\t// a `selected` modifier to control directly.\n\tvar modifier = $.extend( {}, config.modifier );\n\tif ( dt.select && typeof dt.select.info === 'function' && modifier.selected === undefined ) {\n\t\tif ( dt.rows( config.rows, $.extend( { selected: true }, modifier ) ).any() ) {\n\t\t\t$.extend( modifier, { selected: true } )\n\t\t}\n\t}\n\n\tvar rowIndexes = dt.rows( config.rows, modifier ).indexes().toArray();\n\tvar selectedCells = dt.cells( rowIndexes, config.columns );\n\tvar cells = selectedCells\n\t\t.render( config.orthogonal )\n\t\t.toArray();\n\tvar cellNodes = selectedCells\n\t\t.nodes()\n\t\t.toArray();\n\n\tvar columns = header.length;\n\tvar rows = columns > 0 ? cells.length / columns : 0;\n\tvar body = [];\n\tvar cellCounter = 0;\n\n\tfor ( var i=0, ien=rows ; i<ien ; i++ ) {\n\t\tvar row = [ columns ];\n\n\t\tfor ( var j=0 ; j<columns ; j++ ) {\n\t\t\trow[j] = config.format.body( cells[ cellCounter ], i, j, cellNodes[ cellCounter ] );\n\t\t\tcellCounter++;\n\t\t}\n\n\t\tbody[i] = row;\n\t}\n\n\tvar data = {\n\t\theader: header,\n\t\tfooter: footer,\n\t\tbody:   body\n\t};\n\n\tif ( config.customizeData ) {\n\t\tconfig.customizeData( data );\n\t}\n\n\treturn data;\n};\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * DataTables interface\n */\n\n// Attach to DataTables objects for global access\n$.fn.dataTable.Buttons = Buttons;\n$.fn.DataTable.Buttons = Buttons;\n\n\n\n// DataTables creation - check if the buttons have been defined for this table,\n// they will have been if the `B` option was used in `dom`, otherwise we should\n// create the buttons instance here so they can be inserted into the document\n// using the API. Listen for `init` for compatibility with pre 1.10.10, but to\n// be removed in future.\n$(document).on( 'init.dt plugin-init.dt', function (e, settings) {\n\tif ( e.namespace !== 'dt' ) {\n\t\treturn;\n\t}\n\n\tvar opts = settings.oInit.buttons || DataTable.defaults.buttons;\n\n\tif ( opts && ! settings._buttons ) {\n\t\tnew Buttons( settings, opts ).container();\n\t}\n} );\n\nfunction _init ( settings, options ) {\n\tvar api = new DataTable.Api( settings );\n\tvar opts = options\n\t\t? options\n\t\t: api.init().buttons || DataTable.defaults.buttons;\n\n\treturn new Buttons( api, opts ).container();\n}\n\n// DataTables `dom` feature option\nDataTable.ext.feature.push( {\n\tfnInit: _init,\n\tcFeature: \"B\"\n} );\n\n// DataTables 2 layout feature\nif ( DataTable.ext.features ) {\n\tDataTable.ext.features.register( 'buttons', _init );\n}\n\n\nreturn Buttons;\n}));\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}