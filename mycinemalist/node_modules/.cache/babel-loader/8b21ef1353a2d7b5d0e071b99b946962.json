{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { getClassNames } from './ActivityItem.classNames';\nimport { getStyles } from './ActivityItem.styles';\nimport { PersonaSize, PersonaCoin } from '../../Persona';\n/**\n * {@docCategory ActivityItem}\n */\n\nvar ActivityItem =\n/** @class */\nfunction (_super) {\n  __extends(ActivityItem, _super);\n\n  function ActivityItem(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this._onRenderIcon = function (props) {\n      if (props.activityPersonas) {\n        return _this._onRenderPersonaArray(props);\n      } else {\n        return _this.props.activityIcon;\n      }\n    };\n\n    _this._onRenderActivityDescription = function (props) {\n      var classNames = _this._getClassNames(props); // eslint-disable-next-line deprecation/deprecation\n\n\n      var activityDescription = props.activityDescription || props.activityDescriptionText;\n\n      if (activityDescription) {\n        return React.createElement(\"span\", {\n          className: classNames.activityText\n        }, activityDescription);\n      }\n\n      return null;\n    };\n\n    _this._onRenderComments = function (props) {\n      var classNames = _this._getClassNames(props); // eslint-disable-next-line deprecation/deprecation\n\n\n      var comments = props.comments || props.commentText;\n\n      if (!props.isCompact && comments) {\n        return React.createElement(\"div\", {\n          className: classNames.commentText\n        }, comments);\n      }\n\n      return null;\n    };\n\n    _this._onRenderTimeStamp = function (props) {\n      var classNames = _this._getClassNames(props);\n\n      if (!props.isCompact && props.timeStamp) {\n        return React.createElement(\"div\", {\n          className: classNames.timeStamp\n        }, props.timeStamp);\n      }\n\n      return null;\n    }; // If activityPersonas is an array of persona props, build the persona cluster element.\n\n\n    _this._onRenderPersonaArray = function (props) {\n      var classNames = _this._getClassNames(props);\n\n      var personaElement = null;\n      var activityPersonas = props.activityPersonas;\n\n      if (activityPersonas[0].imageUrl || activityPersonas[0].imageInitials) {\n        var personaList_1 = [];\n        var showSize16Personas_1 = activityPersonas.length > 1 || props.isCompact;\n        var personaLimit_1 = props.isCompact ? 3 : 4;\n        var style_1 = undefined;\n\n        if (props.isCompact) {\n          style_1 = {\n            display: 'inline-block',\n            width: '10px',\n            minWidth: '10px',\n            overflow: 'visible'\n          };\n        }\n\n        activityPersonas.filter(function (person, index) {\n          return index < personaLimit_1;\n        }).forEach(function (person, index) {\n          personaList_1.push(React.createElement(PersonaCoin, __assign({}, person, {\n            key: person.key || index,\n            className: classNames.activityPersona,\n            // eslint-disable-next-line deprecation/deprecation\n            size: showSize16Personas_1 ? PersonaSize.size16 : PersonaSize.size32,\n            style: style_1\n          })));\n        });\n        personaElement = React.createElement(\"div\", {\n          className: classNames.personaContainer\n        }, personaList_1);\n      }\n\n      return personaElement;\n    };\n\n    return _this;\n  }\n\n  ActivityItem.prototype.render = function () {\n    var _a = this.props,\n        _b = _a.onRenderIcon,\n        onRenderIcon = _b === void 0 ? this._onRenderIcon : _b,\n        _c = _a.onRenderActivityDescription,\n        onRenderActivityDescription = _c === void 0 ? this._onRenderActivityDescription : _c,\n        _d = _a.onRenderComments,\n        onRenderComments = _d === void 0 ? this._onRenderComments : _d,\n        _e = _a.onRenderTimeStamp,\n        onRenderTimeStamp = _e === void 0 ? this._onRenderTimeStamp : _e,\n        animateBeaconSignal = _a.animateBeaconSignal,\n        isCompact = _a.isCompact;\n\n    var classNames = this._getClassNames(this.props);\n\n    return React.createElement(\"div\", {\n      className: classNames.root,\n      style: this.props.style\n    }, (this.props.activityPersonas || this.props.activityIcon || this.props.onRenderIcon) && React.createElement(\"div\", {\n      className: classNames.activityTypeIcon\n    }, animateBeaconSignal && isCompact && React.createElement(\"div\", {\n      className: classNames.pulsingBeacon\n    }), onRenderIcon(this.props)), React.createElement(\"div\", {\n      className: classNames.activityContent\n    }, onRenderActivityDescription(this.props, this._onRenderActivityDescription), onRenderComments(this.props, this._onRenderComments), onRenderTimeStamp(this.props, this._onRenderTimeStamp)));\n  };\n\n  ActivityItem.prototype._getClassNames = function (props) {\n    return getClassNames(getStyles(undefined, props.styles, props.animateBeaconSignal, props.beaconColorOne, props.beaconColorTwo, props.isCompact), props.className, props.activityPersonas, props.isCompact);\n  };\n\n  return ActivityItem;\n}(React.Component);\n\nexport { ActivityItem };","map":{"version":3,"mappings":"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","names":["React","getClassNames","getStyles","PersonaSize","PersonaCoin","__extends","props","_super","_this","activityPersonas","_onRenderPersonaArray","activityIcon","classNames","_getClassNames","activityDescription","activityDescriptionText","className","activityText","comments","commentText","isCompact","timeStamp","personaElement","imageUrl","imageInitials","personaList_1","showSize16Personas_1","length","personaLimit_1","style_1","undefined","display","width","minWidth","overflow","filter","person","index","forEach","push","__assign","key","activityPersona","size","size16","size32","style","personaContainer","ActivityItem","_b","onRenderIcon","_c","onRenderActivityDescription","_d","onRenderComments","_e","onRenderTimeStamp","animateBeaconSignal","root","activityTypeIcon","pulsingBeacon","activityContent","_onRenderActivityDescription","_onRenderComments","_onRenderTimeStamp","styles","beaconColorOne","beaconColorTwo","Component"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\office-ui-fabric-react\\lib\\components\\src\\components\\ActivityItem\\ActivityItem.tsx"],"sourcesContent":["import * as React from 'react';\nimport { IActivityItemProps } from './ActivityItem.types';\nimport { IActivityItemClassNames, getClassNames } from './ActivityItem.classNames';\nimport { getStyles } from './ActivityItem.styles';\nimport { PersonaSize, PersonaCoin, IPersonaSharedProps, IPersonaCoinProps } from '../../Persona';\n\ntype OptionalReactKey = { key?: React.Key };\n\n/**\n * {@docCategory ActivityItem}\n */\nexport class ActivityItem extends React.Component<IActivityItemProps, {}> {\n  constructor(props: IActivityItemProps) {\n    super(props);\n  }\n\n  public render(): JSX.Element {\n    const {\n      onRenderIcon = this._onRenderIcon,\n      onRenderActivityDescription = this._onRenderActivityDescription,\n      onRenderComments = this._onRenderComments,\n      onRenderTimeStamp = this._onRenderTimeStamp,\n      animateBeaconSignal,\n      isCompact,\n    } = this.props;\n\n    const classNames = this._getClassNames(this.props);\n\n    return (\n      <div className={classNames.root} style={this.props.style}>\n        {(this.props.activityPersonas || this.props.activityIcon || this.props.onRenderIcon) && (\n          <div className={classNames.activityTypeIcon}>\n            {animateBeaconSignal && isCompact && <div className={classNames.pulsingBeacon} />}\n            {onRenderIcon(this.props)}\n          </div>\n        )}\n\n        <div className={classNames.activityContent}>\n          {onRenderActivityDescription(this.props, this._onRenderActivityDescription)}\n          {onRenderComments(this.props, this._onRenderComments)}\n          {onRenderTimeStamp(this.props, this._onRenderTimeStamp)}\n        </div>\n      </div>\n    );\n  }\n\n  private _onRenderIcon = (props: IActivityItemProps): JSX.Element | React.ReactNode | null => {\n    if (props.activityPersonas) {\n      return this._onRenderPersonaArray(props);\n    } else {\n      return this.props.activityIcon;\n    }\n  };\n\n  private _onRenderActivityDescription = (props: IActivityItemProps): JSX.Element | null => {\n    const classNames = this._getClassNames(props);\n\n    // eslint-disable-next-line deprecation/deprecation\n    const activityDescription = props.activityDescription || props.activityDescriptionText;\n\n    if (activityDescription) {\n      return <span className={classNames.activityText}>{activityDescription}</span>;\n    }\n\n    return null;\n  };\n\n  private _onRenderComments = (props: IActivityItemProps): JSX.Element | null => {\n    const classNames = this._getClassNames(props);\n\n    // eslint-disable-next-line deprecation/deprecation\n    const comments = props.comments || props.commentText;\n\n    if (!props.isCompact && comments) {\n      return <div className={classNames.commentText}>{comments}</div>;\n    }\n\n    return null;\n  };\n\n  private _onRenderTimeStamp = (props: IActivityItemProps): JSX.Element | null => {\n    const classNames = this._getClassNames(props);\n\n    if (!props.isCompact && props.timeStamp) {\n      return <div className={classNames.timeStamp}>{props.timeStamp}</div>;\n    }\n\n    return null;\n  };\n\n  // If activityPersonas is an array of persona props, build the persona cluster element.\n  private _onRenderPersonaArray = (props: IActivityItemProps): JSX.Element | null => {\n    const classNames = this._getClassNames(props);\n\n    let personaElement: JSX.Element | null = null;\n    const activityPersonas = props.activityPersonas as Array<IPersonaSharedProps & OptionalReactKey>;\n    if (activityPersonas[0].imageUrl || activityPersonas[0].imageInitials) {\n      const personaList: Array<JSX.Element> = [];\n      const showSize16Personas = activityPersonas.length > 1 || props.isCompact;\n      const personaLimit = props.isCompact ? 3 : 4;\n      let style: React.CSSProperties | undefined = undefined;\n      if (props.isCompact) {\n        style = {\n          display: 'inline-block',\n          width: '10px',\n          minWidth: '10px',\n          overflow: 'visible',\n        };\n      }\n      activityPersonas\n        .filter((person: IPersonaCoinProps & OptionalReactKey, index: number) => index < personaLimit)\n        .forEach((person: IPersonaCoinProps & OptionalReactKey, index: number) => {\n          personaList.push(\n            <PersonaCoin\n              {...person}\n              key={person.key || index}\n              className={classNames.activityPersona}\n              // eslint-disable-next-line deprecation/deprecation\n              size={showSize16Personas ? PersonaSize.size16 : PersonaSize.size32}\n              style={style}\n            />,\n          );\n        });\n      personaElement = <div className={classNames.personaContainer}>{personaList}</div>;\n    }\n    return personaElement;\n  };\n\n  private _getClassNames(props: IActivityItemProps): IActivityItemClassNames {\n    return getClassNames(\n      getStyles(\n        undefined,\n        props.styles,\n        props.animateBeaconSignal,\n        props.beaconColorOne,\n        props.beaconColorTwo,\n        props.isCompact,\n      ),\n      props.className!,\n      props.activityPersonas!,\n      props.isCompact!,\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}