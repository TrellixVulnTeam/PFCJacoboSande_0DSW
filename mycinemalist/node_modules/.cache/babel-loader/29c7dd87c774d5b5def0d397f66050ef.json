{"ast":null,"code":"var _a;\n\nimport { KeyCodes } from './KeyCodes';\nvar DirectionalKeyCodes = (_a = {}, _a[KeyCodes.up] = 1, _a[KeyCodes.down] = 1, _a[KeyCodes.left] = 1, _a[KeyCodes.right] = 1, _a[KeyCodes.home] = 1, _a[KeyCodes.end] = 1, _a[KeyCodes.tab] = 1, _a[KeyCodes.pageUp] = 1, _a[KeyCodes.pageDown] = 1, _a);\n/**\n * Returns true if the keycode is a directional keyboard key.\n */\n\nexport function isDirectionalKeyCode(which) {\n  return !!DirectionalKeyCodes[which];\n}\n/**\n * Adds a keycode to the list of keys that, when pressed, should cause the focus outlines to be visible.\n * This can be used to add global shortcut keys that directionally move from section to section within\n * an app or between focus trap zones.\n */\n\nexport function addDirectionalKeyCode(which) {\n  DirectionalKeyCodes[which] = 1;\n}","map":{"version":3,"mappings":";;AAAA,SAASA,QAAT,QAAyB,YAAzB;AAEA,IAAMC,mBAAmB,aACvBC,GAACF,QAAQ,CAACG,EAAV,IAAe,CADQ,EAEvBD,GAACF,QAAQ,CAACI,IAAV,IAAiB,CAFM,EAGvBF,GAACF,QAAQ,CAACK,IAAV,IAAiB,CAHM,EAIvBH,GAACF,QAAQ,CAACM,KAAV,IAAkB,CAJK,EAKvBJ,GAACF,QAAQ,CAACO,IAAV,IAAiB,CALM,EAMvBL,GAACF,QAAQ,CAACQ,GAAV,IAAgB,CANO,EAOvBN,GAACF,QAAQ,CAACS,GAAV,IAAgB,CAPO,EAQvBP,GAACF,QAAQ,CAACU,MAAV,IAAmB,CARI,EASvBR,GAACF,QAAQ,CAACW,QAAV,IAAqB,CATE,KAAzB;AAYA;;;;AAGA,OAAM,SAAUC,oBAAV,CAA+BC,KAA/B,EAA4C;EAChD,OAAO,CAAC,CAACZ,mBAAmB,CAACY,KAAD,CAA5B;AACD;AAED;;;;;;AAKA,OAAM,SAAUC,qBAAV,CAAgCD,KAAhC,EAA6C;EACjDZ,mBAAmB,CAACY,KAAD,CAAnB,GAA6B,CAA7B;AACD","names":["KeyCodes","DirectionalKeyCodes","_a","up","down","left","right","home","end","tab","pageUp","pageDown","isDirectionalKeyCode","which","addDirectionalKeyCode"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\office-ui-fabric-react\\node_modules\\@uifabric\\utilities\\src\\keyboard.ts"],"sourcesContent":["import { KeyCodes } from './KeyCodes';\n\nconst DirectionalKeyCodes: { [key: number]: number } = {\n  [KeyCodes.up]: 1,\n  [KeyCodes.down]: 1,\n  [KeyCodes.left]: 1,\n  [KeyCodes.right]: 1,\n  [KeyCodes.home]: 1,\n  [KeyCodes.end]: 1,\n  [KeyCodes.tab]: 1,\n  [KeyCodes.pageUp]: 1,\n  [KeyCodes.pageDown]: 1,\n};\n\n/**\n * Returns true if the keycode is a directional keyboard key.\n */\nexport function isDirectionalKeyCode(which: number): boolean {\n  return !!DirectionalKeyCodes[which];\n}\n\n/**\n * Adds a keycode to the list of keys that, when pressed, should cause the focus outlines to be visible.\n * This can be used to add global shortcut keys that directionally move from section to section within\n * an app or between focus trap zones.\n */\nexport function addDirectionalKeyCode(which: number): void {\n  DirectionalKeyCodes[which] = 1;\n}\n"]},"metadata":{},"sourceType":"module"}