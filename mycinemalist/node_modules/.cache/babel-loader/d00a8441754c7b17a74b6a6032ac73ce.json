{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { classNamesFunction, getNativeProps, divProperties, enableBodyScroll, disableBodyScroll, initializeComponentRef } from '../../Utilities';\nvar getClassNames = classNamesFunction();\n\nvar OverlayBase =\n/** @class */\nfunction (_super) {\n  __extends(OverlayBase, _super);\n\n  function OverlayBase(props) {\n    var _this = _super.call(this, props) || this;\n\n    initializeComponentRef(_this);\n    var _a = _this.props.allowTouchBodyScroll,\n        allowTouchBodyScroll = _a === void 0 ? false : _a;\n    _this._allowTouchBodyScroll = allowTouchBodyScroll;\n    return _this;\n  }\n\n  OverlayBase.prototype.componentDidMount = function () {\n    !this._allowTouchBodyScroll && disableBodyScroll();\n  };\n\n  OverlayBase.prototype.componentWillUnmount = function () {\n    !this._allowTouchBodyScroll && enableBodyScroll();\n  };\n\n  OverlayBase.prototype.render = function () {\n    var _a = this.props,\n        isDark = _a.isDarkThemed,\n        className = _a.className,\n        theme = _a.theme,\n        styles = _a.styles;\n    var divProps = getNativeProps(this.props, divProperties);\n    var classNames = getClassNames(styles, {\n      theme: theme,\n      className: className,\n      isDark: isDark\n    });\n    return React.createElement(\"div\", __assign({}, divProps, {\n      className: classNames.root\n    }));\n  };\n\n  return OverlayBase;\n}(React.Component);\n\nexport { OverlayBase };","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SACEC,kBADF,EAEEC,cAFF,EAGEC,aAHF,EAIEC,gBAJF,EAKEC,iBALF,EAMEC,sBANF,QAOO,iBAPP;AAUA,IAAMC,aAAa,GAAGN,kBAAkB,EAAxC;;AAEA;AAAA;AAAA;AAAiCO;;AAG/B,uBAAYC,KAAZ,EAAgC;AAAhC,gBACEC,kBAAMD,KAAN,KAAY,IADd;;AAGEH,0BAAsB,CAACK,KAAD,CAAtB;AACQ;AAAA;AACRA,SAAI,CAACC,qBAAL,GAA6BC,oBAA7B;;AACD;;AAEMC,4CAAP;AACE,KAAC,KAAKF,qBAAN,IAA+BP,iBAAiB,EAAhD;AACD,GAFM;;AAIAS,+CAAP;AACE,KAAC,KAAKF,qBAAN,IAA+BR,gBAAgB,EAA/C;AACD,GAFM;;AAIAU,iCAAP;AACQ;AAAA,QAAEC,wBAAF;AAAA,QAAwBC,wBAAxB;AAAA,QAAmCC,gBAAnC;AAAA,QAA0CC,kBAA1C;AAEN,QAAMC,QAAQ,GAAGjB,cAAc,CAAuC,KAAKO,KAA5C,EAAmDN,aAAnD,CAA/B;AAEA,QAAMiB,UAAU,GAAGb,aAAa,CAACW,MAAD,EAAU;AACxCD,WAAK,EAAEA,KADiC;AAExCD,eAAS,WAF+B;AAGxCD,YAAM;AAHkC,KAAV,CAAhC;AAMA,WAAOf,wCAASmB,QAAT,EAAiB;AAAEH,eAAS,EAAEI,UAAU,CAACC;AAAxB,KAAjB,EAAP;AACD,GAZM;;AAaT;AAAC,CAhCD,CAAiCrB,KAAK,CAACsB,SAAvC","names":["React","classNamesFunction","getNativeProps","divProperties","enableBodyScroll","disableBodyScroll","initializeComponentRef","getClassNames","__extends","props","_super","_this","_allowTouchBodyScroll","allowTouchBodyScroll","OverlayBase","isDark","className","theme","styles","divProps","classNames","root","Component"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\office-ui-fabric-react\\lib\\components\\src\\components\\Overlay\\Overlay.base.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  classNamesFunction,\n  getNativeProps,\n  divProperties,\n  enableBodyScroll,\n  disableBodyScroll,\n  initializeComponentRef,\n} from '../../Utilities';\nimport { IOverlayProps, IOverlayStyleProps, IOverlayStyles } from './Overlay.types';\n\nconst getClassNames = classNamesFunction<IOverlayStyleProps, IOverlayStyles>();\n\nexport class OverlayBase extends React.Component<IOverlayProps, {}> {\n  private _allowTouchBodyScroll: boolean;\n\n  constructor(props: IOverlayProps) {\n    super(props);\n\n    initializeComponentRef(this);\n    const { allowTouchBodyScroll = false } = this.props;\n    this._allowTouchBodyScroll = allowTouchBodyScroll;\n  }\n\n  public componentDidMount(): void {\n    !this._allowTouchBodyScroll && disableBodyScroll();\n  }\n\n  public componentWillUnmount(): void {\n    !this._allowTouchBodyScroll && enableBodyScroll();\n  }\n\n  public render(): JSX.Element {\n    const { isDarkThemed: isDark, className, theme, styles } = this.props;\n\n    const divProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(this.props, divProperties);\n\n    const classNames = getClassNames(styles!, {\n      theme: theme!,\n      className,\n      isDark,\n    });\n\n    return <div {...divProps} className={classNames.root} />;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}