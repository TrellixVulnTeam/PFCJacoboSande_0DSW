{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { KeyCodes, getId, getNativeProps, inputProperties, classNamesFunction, initializeComponentRef } from '../../../../Utilities';\nimport { getStyles } from './EditingItem.styles';\n\nvar EditingItem =\n/** @class */\nfunction (_super) {\n  __extends(EditingItem, _super);\n\n  function EditingItem(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this._editingFloatingPicker = React.createRef();\n\n    _this._renderEditingSuggestions = function () {\n      var FloatingPicker = _this.props.onRenderFloatingPicker;\n      var floatingPickerProps = _this.props.floatingPickerProps;\n\n      if (!FloatingPicker || !floatingPickerProps) {\n        return React.createElement(React.Fragment, null);\n      }\n\n      return React.createElement(FloatingPicker, __assign({\n        componentRef: _this._editingFloatingPicker,\n        onChange: _this._onSuggestionSelected,\n        inputElement: _this._editingInput,\n        selectedItems: []\n      }, floatingPickerProps));\n    };\n\n    _this._resolveInputRef = function (ref) {\n      _this._editingInput = ref;\n\n      _this.forceUpdate(function () {\n        _this._editingInput.focus();\n      });\n    };\n\n    _this._onInputClick = function () {\n      _this._editingFloatingPicker.current && _this._editingFloatingPicker.current.showPicker(true\n      /*updatevalue*/\n      );\n    };\n\n    _this._onInputBlur = function (ev) {\n      if (_this._editingFloatingPicker.current && ev.relatedTarget !== null) {\n        var target = ev.relatedTarget;\n\n        if (target.className.indexOf('ms-Suggestions-itemButton') === -1 && target.className.indexOf('ms-Suggestions-sectionButton') === -1) {\n          _this._editingFloatingPicker.current.forceResolveSuggestion();\n        }\n      }\n    };\n\n    _this._onInputChange = function (ev) {\n      var value = ev.target.value;\n\n      if (value === '') {\n        if (_this.props.onRemoveItem) {\n          _this.props.onRemoveItem();\n        }\n      } else {\n        _this._editingFloatingPicker.current && _this._editingFloatingPicker.current.onQueryStringChanged(value);\n      }\n    };\n\n    _this._onSuggestionSelected = function (item) {\n      _this.props.onEditingComplete(_this.props.item, item);\n    };\n\n    initializeComponentRef(_this); // eslint-disable-next-line react/no-unused-state\n\n    _this.state = {\n      contextualMenuVisible: false\n    };\n    return _this;\n  }\n\n  EditingItem.prototype.componentDidMount = function () {\n    var getEditingItemText = this.props.getEditingItemText;\n    var itemText = getEditingItemText(this.props.item);\n    this._editingFloatingPicker.current && this._editingFloatingPicker.current.onQueryStringChanged(itemText);\n    this._editingInput.value = itemText;\n\n    this._editingInput.focus();\n  };\n\n  EditingItem.prototype.render = function () {\n    var itemId = getId();\n    var nativeProps = getNativeProps(this.props, inputProperties);\n    var getClassNames = classNamesFunction();\n    var classNames = getClassNames(getStyles);\n    return React.createElement(\"div\", {\n      \"aria-labelledby\": 'editingItemPersona-' + itemId,\n      className: classNames.root\n    }, React.createElement(\"input\", __assign({\n      autoCapitalize: 'off',\n      autoComplete: 'off'\n    }, nativeProps, {\n      ref: this._resolveInputRef,\n      onChange: this._onInputChange,\n      onKeyDown: this._onInputKeyDown,\n      onBlur: this._onInputBlur,\n      onClick: this._onInputClick,\n      \"data-lpignore\": true,\n      className: classNames.input,\n      id: itemId\n    })), this._renderEditingSuggestions());\n  };\n\n  EditingItem.prototype._onInputKeyDown = function (ev) {\n    if (ev.which === KeyCodes.backspace || ev.which === KeyCodes.del) {\n      ev.stopPropagation();\n    }\n  };\n\n  return EditingItem;\n}(React.Component);\n\nexport { EditingItem };","map":{"version":3,"mappings":"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","names":["React","KeyCodes","getId","getNativeProps","inputProperties","classNamesFunction","initializeComponentRef","getStyles","__extends","props","_super","_this","createRef","FloatingPicker","onRenderFloatingPicker","floatingPickerProps","__assign","componentRef","_editingFloatingPicker","onChange","_onSuggestionSelected","inputElement","_editingInput","selectedItems","ref","forceUpdate","focus","current","showPicker","ev","relatedTarget","target","className","indexOf","forceResolveSuggestion","value","onRemoveItem","onQueryStringChanged","item","onEditingComplete","state","contextualMenuVisible","EditingItem","getEditingItemText","itemText","itemId","nativeProps","getClassNames","classNames","root","autoCapitalize","autoComplete","_resolveInputRef","_onInputChange","onKeyDown","_onInputKeyDown","onBlur","_onInputBlur","onClick","_onInputClick","input","id","_renderEditingSuggestions","which","backspace","del","stopPropagation","Component"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\office-ui-fabric-react\\lib\\components\\SelectedItemsList\\SelectedPeopleList\\src\\components\\SelectedItemsList\\SelectedPeopleList\\Items\\EditingItem.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  KeyCodes,\n  getId,\n  getNativeProps,\n  inputProperties,\n  classNamesFunction,\n  initializeComponentRef,\n} from '../../../../Utilities';\nimport { FloatingPeoplePicker } from '../../../../FloatingPicker';\nimport { IExtendedPersonaProps } from '../SelectedPeopleList';\nimport { IPeoplePickerItemState } from './ExtendedSelectedItem';\nimport { IEditingSelectedPeopleItemProps } from './EditingItem.types';\nimport { getStyles } from './EditingItem.styles';\nimport { IEditingSelectedPeopleItemStyles, IEditingSelectedPeopleItemStylesProps } from './EditingItem.types';\n\nexport class EditingItem extends React.Component<IEditingSelectedPeopleItemProps, IPeoplePickerItemState> {\n  private _editingInput: HTMLInputElement;\n  private _editingFloatingPicker = React.createRef<FloatingPeoplePicker>();\n\n  constructor(props: IEditingSelectedPeopleItemProps) {\n    super(props);\n\n    initializeComponentRef(this);\n    // eslint-disable-next-line react/no-unused-state\n    this.state = { contextualMenuVisible: false };\n  }\n\n  public componentDidMount(): void {\n    const getEditingItemText = this.props.getEditingItemText as (item: IExtendedPersonaProps) => string;\n    const itemText = getEditingItemText(this.props.item);\n\n    this._editingFloatingPicker.current && this._editingFloatingPicker.current.onQueryStringChanged(itemText);\n    this._editingInput.value = itemText;\n    this._editingInput.focus();\n  }\n\n  public render(): JSX.Element {\n    const itemId = getId();\n    const nativeProps = getNativeProps<React.InputHTMLAttributes<HTMLInputElement>>(this.props, inputProperties);\n    const getClassNames = classNamesFunction<IEditingSelectedPeopleItemStylesProps, IEditingSelectedPeopleItemStyles>();\n    const classNames = getClassNames(getStyles);\n    return (\n      <div aria-labelledby={'editingItemPersona-' + itemId} className={classNames.root}>\n        <input\n          autoCapitalize={'off'}\n          autoComplete={'off'}\n          {...nativeProps}\n          ref={this._resolveInputRef}\n          onChange={this._onInputChange}\n          onKeyDown={this._onInputKeyDown}\n          onBlur={this._onInputBlur}\n          onClick={this._onInputClick}\n          data-lpignore={true}\n          className={classNames.input}\n          id={itemId}\n        />\n        {this._renderEditingSuggestions()}\n      </div>\n    );\n  }\n\n  private _renderEditingSuggestions = (): JSX.Element => {\n    const FloatingPicker = this.props.onRenderFloatingPicker;\n    const floatingPickerProps = this.props.floatingPickerProps;\n    if (!FloatingPicker || !floatingPickerProps) {\n      return <></>;\n    }\n    return (\n      <FloatingPicker\n        componentRef={this._editingFloatingPicker}\n        onChange={this._onSuggestionSelected}\n        inputElement={this._editingInput}\n        selectedItems={[]}\n        {...floatingPickerProps}\n      />\n    );\n  };\n\n  private _resolveInputRef = (ref: HTMLInputElement): void => {\n    this._editingInput = ref;\n\n    this.forceUpdate(() => {\n      this._editingInput.focus();\n    });\n  };\n\n  private _onInputClick = (): void => {\n    this._editingFloatingPicker.current && this._editingFloatingPicker.current.showPicker(true /*updatevalue*/);\n  };\n\n  private _onInputBlur = (ev: React.FocusEvent<HTMLElement>): void => {\n    if (this._editingFloatingPicker.current && ev.relatedTarget !== null) {\n      const target = ev.relatedTarget as HTMLElement;\n      if (\n        target.className.indexOf('ms-Suggestions-itemButton') === -1 &&\n        target.className.indexOf('ms-Suggestions-sectionButton') === -1\n      ) {\n        this._editingFloatingPicker.current.forceResolveSuggestion();\n      }\n    }\n  };\n\n  private _onInputChange = (ev: React.FormEvent<HTMLElement>): void => {\n    const value: string = (ev.target as HTMLInputElement).value;\n\n    if (value === '') {\n      if (this.props.onRemoveItem) {\n        this.props.onRemoveItem();\n      }\n    } else {\n      this._editingFloatingPicker.current && this._editingFloatingPicker.current.onQueryStringChanged(value);\n    }\n  };\n\n  private _onInputKeyDown(ev: React.KeyboardEvent<HTMLInputElement>): void {\n    if (ev.which === KeyCodes.backspace || ev.which === KeyCodes.del) {\n      ev.stopPropagation();\n    }\n  }\n\n  private _onSuggestionSelected = (item: IExtendedPersonaProps): void => {\n    this.props.onEditingComplete(this.props.item, item);\n  };\n}\n"]},"metadata":{},"sourceType":"module"}