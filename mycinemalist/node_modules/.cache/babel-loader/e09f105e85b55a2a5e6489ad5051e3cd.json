{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { HighContrastSelector } from '../../Styling';\nimport { IsFocusVisibleClassName } from '../../Utilities';\n\nvar splitButtonDividerBaseStyles = function splitButtonDividerBaseStyles() {\n  return {\n    position: 'absolute',\n    width: 1,\n    right: 31,\n    top: 8,\n    bottom: 8\n  };\n};\n\nexport function standardStyles(theme) {\n  var _a, _b, _c, _d, _e;\n\n  var s = theme.semanticColors,\n      p = theme.palette;\n  var buttonBackground = s.buttonBackground;\n  var buttonBackgroundPressed = s.buttonBackgroundPressed;\n  var buttonBackgroundHovered = s.buttonBackgroundHovered;\n  var buttonText = s.buttonText;\n  var buttonTextHovered = s.buttonTextHovered;\n  var buttonTextChecked = s.buttonTextChecked;\n  var buttonTextCheckedHovered = s.buttonTextCheckedHovered;\n  return {\n    root: {\n      backgroundColor: buttonBackground,\n      color: buttonText\n    },\n    rootHovered: {\n      backgroundColor: buttonBackgroundHovered,\n      color: buttonTextHovered,\n      selectors: (_a = {}, _a[HighContrastSelector] = {\n        borderColor: 'Highlight',\n        color: 'Highlight'\n      }, _a)\n    },\n    rootPressed: {\n      backgroundColor: buttonBackgroundPressed,\n      color: buttonTextChecked\n    },\n    rootExpanded: {\n      backgroundColor: buttonBackgroundPressed,\n      color: buttonTextChecked\n    },\n    rootChecked: {\n      backgroundColor: buttonBackgroundPressed,\n      color: buttonTextChecked\n    },\n    rootCheckedHovered: {\n      backgroundColor: buttonBackgroundPressed,\n      color: buttonTextCheckedHovered\n    },\n    rootDisabled: {\n      selectors: (_b = {}, _b[HighContrastSelector] = {\n        color: 'GrayText',\n        borderColor: 'GrayText',\n        backgroundColor: 'Window'\n      }, _b)\n    },\n    // Split button styles\n    splitButtonContainer: {\n      selectors: (_c = {}, _c[HighContrastSelector] = {\n        border: 'none'\n      }, _c)\n    },\n    splitButtonMenuButton: {\n      color: p.white,\n      backgroundColor: 'transparent',\n      selectors: {\n        ':hover': {\n          backgroundColor: p.neutralLight,\n          selectors: (_d = {}, _d[HighContrastSelector] = {\n            color: 'Highlight'\n          }, _d)\n        }\n      }\n    },\n    splitButtonMenuButtonDisabled: {\n      backgroundColor: s.buttonBackgroundDisabled,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.buttonBackgroundDisabled\n        }\n      }\n    },\n    splitButtonDivider: __assign(__assign({}, splitButtonDividerBaseStyles()), {\n      backgroundColor: p.neutralTertiaryAlt,\n      selectors: (_e = {}, _e[HighContrastSelector] = {\n        backgroundColor: 'WindowText'\n      }, _e)\n    }),\n    splitButtonDividerDisabled: {\n      backgroundColor: theme.palette.neutralTertiaryAlt\n    },\n    splitButtonMenuButtonChecked: {\n      backgroundColor: p.neutralQuaternaryAlt,\n      selectors: {\n        ':hover': {\n          backgroundColor: p.neutralQuaternaryAlt\n        }\n      }\n    },\n    splitButtonMenuButtonExpanded: {\n      backgroundColor: p.neutralQuaternaryAlt,\n      selectors: {\n        ':hover': {\n          backgroundColor: p.neutralQuaternaryAlt\n        }\n      }\n    },\n    splitButtonMenuIcon: {\n      color: s.buttonText\n    },\n    splitButtonMenuIconDisabled: {\n      color: s.buttonTextDisabled\n    }\n  };\n}\nexport function primaryStyles(theme) {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n\n  var p = theme.palette,\n      s = theme.semanticColors;\n  return {\n    root: {\n      backgroundColor: s.primaryButtonBackground,\n      border: \"1px solid \" + s.primaryButtonBackground,\n      color: s.primaryButtonText,\n      selectors: (_a = {}, _a[HighContrastSelector] = {\n        color: 'Window',\n        backgroundColor: 'WindowText',\n        borderColor: 'WindowText',\n        MsHighContrastAdjust: 'none'\n      }, _a[\".\" + IsFocusVisibleClassName + \" &:focus\"] = {\n        selectors: {\n          ':after': {\n            border: \"none\",\n            outlineColor: p.white\n          }\n        }\n      }, _a)\n    },\n    rootHovered: {\n      backgroundColor: s.primaryButtonBackgroundHovered,\n      border: \"1px solid \" + s.primaryButtonBackgroundHovered,\n      color: s.primaryButtonTextHovered,\n      selectors: (_b = {}, _b[HighContrastSelector] = {\n        color: 'Window',\n        backgroundColor: 'Highlight',\n        borderColor: 'Highlight'\n      }, _b)\n    },\n    rootPressed: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      border: \"1px solid \" + s.primaryButtonBackgroundPressed,\n      color: s.primaryButtonTextPressed,\n      selectors: (_c = {}, _c[HighContrastSelector] = {\n        color: 'Window',\n        backgroundColor: 'WindowText',\n        borderColor: 'WindowText',\n        MsHighContrastAdjust: 'none'\n      }, _c)\n    },\n    rootExpanded: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      color: s.primaryButtonTextPressed\n    },\n    rootChecked: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      color: s.primaryButtonTextPressed\n    },\n    rootCheckedHovered: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      color: s.primaryButtonTextPressed\n    },\n    rootDisabled: {\n      selectors: (_d = {}, _d[HighContrastSelector] = {\n        color: 'GrayText',\n        borderColor: 'GrayText',\n        backgroundColor: 'Window'\n      }, _d)\n    },\n    // Split button styles\n    splitButtonContainer: {\n      selectors: (_e = {}, _e[HighContrastSelector] = {\n        border: 'none'\n      }, _e)\n    },\n    splitButtonDivider: __assign(__assign({}, splitButtonDividerBaseStyles()), {\n      backgroundColor: p.white,\n      selectors: (_f = {}, _f[HighContrastSelector] = {\n        backgroundColor: 'Window'\n      }, _f)\n    }),\n    splitButtonMenuButton: {\n      backgroundColor: s.primaryButtonBackground,\n      color: s.primaryButtonText,\n      selectors: (_g = {}, _g[HighContrastSelector] = {\n        backgroundColor: 'WindowText'\n      }, _g[':hover'] = {\n        backgroundColor: s.primaryButtonBackgroundHovered,\n        selectors: (_h = {}, _h[HighContrastSelector] = {\n          color: 'Highlight'\n        }, _h)\n      }, _g)\n    },\n    splitButtonMenuButtonDisabled: {\n      backgroundColor: s.primaryButtonBackgroundDisabled,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.primaryButtonBackgroundDisabled\n        }\n      }\n    },\n    splitButtonMenuButtonChecked: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.primaryButtonBackgroundPressed\n        }\n      }\n    },\n    splitButtonMenuButtonExpanded: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.primaryButtonBackgroundPressed\n        }\n      }\n    },\n    splitButtonMenuIcon: {\n      color: s.primaryButtonText\n    },\n    splitButtonMenuIconDisabled: {\n      color: p.neutralTertiary,\n      selectors: (_j = {}, _j[HighContrastSelector] = {\n        color: 'GrayText'\n      }, _j)\n    }\n  };\n}","map":{"version":3,"mappings":"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","names":["HighContrastSelector","IsFocusVisibleClassName","splitButtonDividerBaseStyles","position","width","right","top","bottom","standardStyles","theme","p","buttonBackground","s","buttonBackgroundPressed","buttonBackgroundHovered","buttonText","buttonTextHovered","buttonTextChecked","buttonTextCheckedHovered","root","backgroundColor","color","rootHovered","selectors","_a","borderColor","rootPressed","rootExpanded","rootChecked","rootCheckedHovered","rootDisabled","_b","splitButtonContainer","_c","border","splitButtonMenuButton","white","neutralLight","_d","splitButtonMenuButtonDisabled","buttonBackgroundDisabled","splitButtonDivider","neutralTertiaryAlt","_e","splitButtonDividerDisabled","palette","splitButtonMenuButtonChecked","neutralQuaternaryAlt","splitButtonMenuButtonExpanded","splitButtonMenuIcon","splitButtonMenuIconDisabled","buttonTextDisabled","primaryStyles","primaryButtonBackground","primaryButtonText","MsHighContrastAdjust","outlineColor","primaryButtonBackgroundHovered","primaryButtonTextHovered","primaryButtonBackgroundPressed","primaryButtonTextPressed","_f","_g","_h","primaryButtonBackgroundDisabled","neutralTertiary","_j"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\office-ui-fabric-react\\lib\\components\\src\\components\\Button\\ButtonThemes.ts"],"sourcesContent":["import { IButtonStyles } from './Button.types';\nimport { ITheme, HighContrastSelector, IRawStyle } from '../../Styling';\nimport { IsFocusVisibleClassName } from '../../Utilities';\n\nconst splitButtonDividerBaseStyles = (): IRawStyle => {\n  return {\n    position: 'absolute',\n    width: 1,\n    right: 31,\n    top: 8,\n    bottom: 8,\n  };\n};\n\nexport function standardStyles(theme: ITheme): IButtonStyles {\n  const { semanticColors: s, palette: p } = theme;\n\n  const buttonBackground = s.buttonBackground;\n  const buttonBackgroundPressed = s.buttonBackgroundPressed;\n  const buttonBackgroundHovered = s.buttonBackgroundHovered;\n\n  const buttonText = s.buttonText;\n  const buttonTextHovered = s.buttonTextHovered;\n  const buttonTextChecked = s.buttonTextChecked;\n  const buttonTextCheckedHovered = s.buttonTextCheckedHovered;\n\n  return {\n    root: {\n      backgroundColor: buttonBackground,\n      color: buttonText,\n    },\n\n    rootHovered: {\n      backgroundColor: buttonBackgroundHovered,\n      color: buttonTextHovered,\n      selectors: {\n        [HighContrastSelector]: {\n          borderColor: 'Highlight',\n          color: 'Highlight',\n        },\n      },\n    },\n\n    rootPressed: {\n      backgroundColor: buttonBackgroundPressed,\n      color: buttonTextChecked,\n    },\n\n    rootExpanded: {\n      backgroundColor: buttonBackgroundPressed,\n      color: buttonTextChecked,\n    },\n\n    rootChecked: {\n      backgroundColor: buttonBackgroundPressed,\n      color: buttonTextChecked,\n    },\n\n    rootCheckedHovered: {\n      backgroundColor: buttonBackgroundPressed,\n      color: buttonTextCheckedHovered,\n    },\n\n    rootDisabled: {\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'GrayText',\n          borderColor: 'GrayText',\n          backgroundColor: 'Window',\n        },\n      },\n    },\n\n    // Split button styles\n    splitButtonContainer: {\n      selectors: {\n        [HighContrastSelector]: {\n          border: 'none',\n        },\n      },\n    },\n\n    splitButtonMenuButton: {\n      color: p.white,\n      backgroundColor: 'transparent',\n      selectors: {\n        ':hover': {\n          backgroundColor: p.neutralLight,\n          selectors: {\n            [HighContrastSelector]: {\n              color: 'Highlight',\n            },\n          },\n        },\n      },\n    },\n\n    splitButtonMenuButtonDisabled: {\n      backgroundColor: s.buttonBackgroundDisabled,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.buttonBackgroundDisabled,\n        },\n      },\n    },\n\n    splitButtonDivider: {\n      ...splitButtonDividerBaseStyles(),\n      backgroundColor: p.neutralTertiaryAlt,\n      selectors: {\n        [HighContrastSelector]: {\n          backgroundColor: 'WindowText',\n        },\n      },\n    },\n\n    splitButtonDividerDisabled: {\n      backgroundColor: theme.palette.neutralTertiaryAlt,\n    },\n\n    splitButtonMenuButtonChecked: {\n      backgroundColor: p.neutralQuaternaryAlt,\n      selectors: {\n        ':hover': {\n          backgroundColor: p.neutralQuaternaryAlt,\n        },\n      },\n    },\n\n    splitButtonMenuButtonExpanded: {\n      backgroundColor: p.neutralQuaternaryAlt,\n      selectors: {\n        ':hover': {\n          backgroundColor: p.neutralQuaternaryAlt,\n        },\n      },\n    },\n\n    splitButtonMenuIcon: {\n      color: s.buttonText,\n    },\n\n    splitButtonMenuIconDisabled: {\n      color: s.buttonTextDisabled,\n    },\n  };\n}\n\nexport function primaryStyles(theme: ITheme): IButtonStyles {\n  const { palette: p, semanticColors: s } = theme;\n\n  return {\n    root: {\n      backgroundColor: s.primaryButtonBackground,\n      border: `1px solid ${s.primaryButtonBackground}`,\n      color: s.primaryButtonText,\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'Window',\n          backgroundColor: 'WindowText',\n          borderColor: 'WindowText',\n          MsHighContrastAdjust: 'none',\n        },\n        [`.${IsFocusVisibleClassName} &:focus`]: {\n          selectors: {\n            ':after': {\n              border: `none`,\n              outlineColor: p.white,\n            },\n          },\n        },\n      },\n    },\n\n    rootHovered: {\n      backgroundColor: s.primaryButtonBackgroundHovered,\n      border: `1px solid ${s.primaryButtonBackgroundHovered}`,\n      color: s.primaryButtonTextHovered,\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'Window',\n          backgroundColor: 'Highlight',\n          borderColor: 'Highlight',\n        },\n      },\n    },\n\n    rootPressed: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      border: `1px solid ${s.primaryButtonBackgroundPressed}`,\n      color: s.primaryButtonTextPressed,\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'Window',\n          backgroundColor: 'WindowText',\n          borderColor: 'WindowText',\n          MsHighContrastAdjust: 'none',\n        },\n      },\n    },\n\n    rootExpanded: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      color: s.primaryButtonTextPressed,\n    },\n\n    rootChecked: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      color: s.primaryButtonTextPressed,\n    },\n\n    rootCheckedHovered: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      color: s.primaryButtonTextPressed,\n    },\n\n    rootDisabled: {\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'GrayText',\n          borderColor: 'GrayText',\n          backgroundColor: 'Window',\n        },\n      },\n    },\n\n    // Split button styles\n    splitButtonContainer: {\n      selectors: {\n        [HighContrastSelector]: {\n          border: 'none',\n        },\n      },\n    },\n\n    splitButtonDivider: {\n      ...splitButtonDividerBaseStyles(),\n      backgroundColor: p.white,\n      selectors: {\n        [HighContrastSelector]: {\n          backgroundColor: 'Window',\n        },\n      },\n    },\n\n    splitButtonMenuButton: {\n      backgroundColor: s.primaryButtonBackground,\n      color: s.primaryButtonText,\n      selectors: {\n        [HighContrastSelector]: {\n          backgroundColor: 'WindowText',\n        },\n        ':hover': {\n          backgroundColor: s.primaryButtonBackgroundHovered,\n          selectors: {\n            [HighContrastSelector]: {\n              color: 'Highlight',\n            },\n          },\n        },\n      },\n    },\n\n    splitButtonMenuButtonDisabled: {\n      backgroundColor: s.primaryButtonBackgroundDisabled,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.primaryButtonBackgroundDisabled,\n        },\n      },\n    },\n\n    splitButtonMenuButtonChecked: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.primaryButtonBackgroundPressed,\n        },\n      },\n    },\n\n    splitButtonMenuButtonExpanded: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.primaryButtonBackgroundPressed,\n        },\n      },\n    },\n\n    splitButtonMenuIcon: {\n      color: s.primaryButtonText,\n    },\n\n    splitButtonMenuIconDisabled: {\n      color: p.neutralTertiary,\n\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'GrayText',\n        },\n      },\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}