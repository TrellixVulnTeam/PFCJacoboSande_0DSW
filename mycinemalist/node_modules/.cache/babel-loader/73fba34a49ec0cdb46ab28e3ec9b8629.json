{"ast":null,"code":"import { __extends } from \"tslib\";\nimport * as React from 'react';\nimport { classNamesFunction } from '../../../Utilities';\nimport { Icon } from '../../../Icon';\nimport { PersonaPresence as PersonaPresenceEnum } from '../Persona.types';\nimport { sizeBoolean } from '../PersonaConsts';\nvar coinSizeFontScaleFactor = 6;\nvar coinSizePresenceScaleFactor = 3;\nvar presenceMaxSize = 40;\nvar presenceFontMaxSize = 20;\nvar getClassNames = classNamesFunction({\n  // There can be many PersonaPresence rendered with different sizes.\n  // Therefore setting a larger cache size.\n  cacheSize: 100\n});\n/**\n * PersonaPresence with no default styles.\n * [Use the `getStyles` API to add your own styles.](https://github.com/microsoft/fluentui/wiki/Styling)\n */\n\nvar PersonaPresenceBase =\n/** @class */\nfunction (_super) {\n  __extends(PersonaPresenceBase, _super);\n\n  function PersonaPresenceBase(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this._onRenderIcon = function (className, style) {\n      return React.createElement(Icon, {\n        className: className,\n        iconName: determineIcon(_this.props.presence, _this.props.isOutOfOffice),\n        style: style\n      });\n    };\n\n    return _this;\n  }\n\n  PersonaPresenceBase.prototype.render = function () {\n    var _a = this.props,\n        coinSize = _a.coinSize,\n        isOutOfOffice = _a.isOutOfOffice,\n        styles = _a.styles,\n        // Use getStyles from props.\n    presence = _a.presence,\n        theme = _a.theme,\n        presenceTitle = _a.presenceTitle,\n        presenceColors = _a.presenceColors;\n    var size = sizeBoolean(this.props.size); // Render Presence Icon if Persona is above size 32.\n\n    var renderIcon = !(size.isSize8 || size.isSize10 || size.isSize16 || size.isSize24 || size.isSize28 || size.isSize32) && (coinSize ? coinSize > 32 : true);\n    var presenceHeightWidth = coinSize ? coinSize / coinSizePresenceScaleFactor < presenceMaxSize ? coinSize / coinSizePresenceScaleFactor + 'px' : presenceMaxSize + 'px' : '';\n    var presenceFontSize = coinSize ? coinSize / coinSizeFontScaleFactor < presenceFontMaxSize ? coinSize / coinSizeFontScaleFactor + 'px' : presenceFontMaxSize + 'px' : '';\n    var coinSizeWithPresenceIconStyle = coinSize ? {\n      fontSize: presenceFontSize,\n      lineHeight: presenceHeightWidth\n    } : undefined;\n    var coinSizeWithPresenceStyle = coinSize ? {\n      width: presenceHeightWidth,\n      height: presenceHeightWidth\n    } : undefined; // Use getStyles from props, or fall back to getStyles from styles file.\n\n    var classNames = getClassNames(styles, {\n      theme: theme,\n      presence: presence,\n      size: this.props.size,\n      isOutOfOffice: isOutOfOffice,\n      presenceColors: presenceColors\n    });\n\n    if (presence === PersonaPresenceEnum.none) {\n      return null;\n    }\n\n    return React.createElement(\"div\", {\n      role: \"presentation\",\n      className: classNames.presence,\n      style: coinSizeWithPresenceStyle,\n      title: presenceTitle\n    }, renderIcon && this._onRenderIcon(classNames.presenceIcon, coinSizeWithPresenceIconStyle));\n  };\n\n  return PersonaPresenceBase;\n}(React.Component);\n\nexport { PersonaPresenceBase };\n\nfunction determineIcon(presence, isOutOfOffice) {\n  if (!presence) {\n    return undefined;\n  }\n\n  var oofIcon = 'SkypeArrow';\n\n  switch (PersonaPresenceEnum[presence]) {\n    case 'online':\n      return 'SkypeCheck';\n\n    case 'away':\n      return isOutOfOffice ? oofIcon : 'SkypeClock';\n\n    case 'dnd':\n      return 'SkypeMinus';\n\n    case 'offline':\n      return isOutOfOffice ? oofIcon : '';\n  }\n\n  return '';\n}","map":{"version":3,"mappings":"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","names":["React","classNamesFunction","Icon","PersonaPresence","PersonaPresenceEnum","sizeBoolean","coinSizeFontScaleFactor","coinSizePresenceScaleFactor","presenceMaxSize","presenceFontMaxSize","getClassNames","cacheSize","__extends","props","_super","_this","className","style","iconName","determineIcon","presence","isOutOfOffice","PersonaPresenceBase","coinSize","styles","theme","presenceTitle","presenceColors","size","renderIcon","isSize8","isSize10","isSize16","isSize24","isSize28","isSize32","presenceHeightWidth","presenceFontSize","coinSizeWithPresenceIconStyle","fontSize","lineHeight","undefined","coinSizeWithPresenceStyle","width","height","classNames","none","role","title","_onRenderIcon","presenceIcon","Component","oofIcon"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\office-ui-fabric-react\\lib\\components\\Persona\\src\\components\\Persona\\PersonaPresence\\PersonaPresence.base.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNamesFunction } from '../../../Utilities';\nimport { Icon } from '../../../Icon';\nimport {\n  IPersonaPresenceProps,\n  IPersonaPresenceStyleProps,\n  IPersonaPresenceStyles,\n  PersonaPresence as PersonaPresenceEnum,\n  PersonaSize,\n} from '../Persona.types';\nimport { sizeBoolean } from '../PersonaConsts';\n\nconst coinSizeFontScaleFactor = 6;\nconst coinSizePresenceScaleFactor = 3;\nconst presenceMaxSize = 40;\nconst presenceFontMaxSize = 20;\n\nconst getClassNames = classNamesFunction<IPersonaPresenceStyleProps, IPersonaPresenceStyles>({\n  // There can be many PersonaPresence rendered with different sizes.\n  // Therefore setting a larger cache size.\n  cacheSize: 100,\n});\n\n/**\n * PersonaPresence with no default styles.\n * [Use the `getStyles` API to add your own styles.](https://github.com/microsoft/fluentui/wiki/Styling)\n */\nexport class PersonaPresenceBase extends React.Component<IPersonaPresenceProps, {}> {\n  constructor(props: IPersonaPresenceProps) {\n    super(props);\n  }\n\n  public render(): JSX.Element | null {\n    const {\n      coinSize,\n      isOutOfOffice,\n      styles, // Use getStyles from props.\n      presence,\n      theme,\n      presenceTitle,\n      presenceColors,\n    } = this.props;\n    const size = sizeBoolean(this.props.size as PersonaSize);\n\n    // Render Presence Icon if Persona is above size 32.\n    const renderIcon =\n      !(size.isSize8 || size.isSize10 || size.isSize16 || size.isSize24 || size.isSize28 || size.isSize32) &&\n      (coinSize ? coinSize > 32 : true);\n\n    const presenceHeightWidth: string = coinSize\n      ? coinSize / coinSizePresenceScaleFactor < presenceMaxSize\n        ? coinSize / coinSizePresenceScaleFactor + 'px'\n        : presenceMaxSize + 'px'\n      : '';\n    const presenceFontSize: string = coinSize\n      ? coinSize / coinSizeFontScaleFactor < presenceFontMaxSize\n        ? coinSize / coinSizeFontScaleFactor + 'px'\n        : presenceFontMaxSize + 'px'\n      : '';\n    const coinSizeWithPresenceIconStyle = coinSize\n      ? { fontSize: presenceFontSize, lineHeight: presenceHeightWidth }\n      : undefined;\n    const coinSizeWithPresenceStyle = coinSize\n      ? { width: presenceHeightWidth, height: presenceHeightWidth }\n      : undefined;\n\n    // Use getStyles from props, or fall back to getStyles from styles file.\n    const classNames = getClassNames(styles, {\n      theme: theme!,\n      presence,\n      size: this.props.size,\n      isOutOfOffice,\n      presenceColors,\n    });\n\n    if (presence === PersonaPresenceEnum.none) {\n      return null;\n    }\n\n    return (\n      <div role=\"presentation\" className={classNames.presence} style={coinSizeWithPresenceStyle} title={presenceTitle}>\n        {renderIcon && this._onRenderIcon(classNames.presenceIcon, coinSizeWithPresenceIconStyle)}\n      </div>\n    );\n  }\n\n  private _onRenderIcon = (className?: string, style?: React.CSSProperties): JSX.Element => (\n    <Icon className={className} iconName={determineIcon(this.props.presence, this.props.isOutOfOffice)} style={style} />\n  );\n}\n\nfunction determineIcon(\n  presence: PersonaPresenceEnum | undefined,\n  isOutOfOffice: boolean | undefined,\n): string | undefined {\n  if (!presence) {\n    return undefined;\n  }\n\n  const oofIcon = 'SkypeArrow';\n\n  switch (PersonaPresenceEnum[presence]) {\n    case 'online':\n      return 'SkypeCheck';\n    case 'away':\n      return isOutOfOffice ? oofIcon : 'SkypeClock';\n    case 'dnd':\n      return 'SkypeMinus';\n    case 'offline':\n      return isOutOfOffice ? oofIcon : '';\n  }\n\n  return '';\n}\n"]},"metadata":{},"sourceType":"module"}