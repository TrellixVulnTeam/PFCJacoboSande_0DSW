{"ast":null,"code":"import { __spreadArray } from \"tslib\";\nimport { lorem } from './lorem';\nvar DATA = {\n  color: ['red', 'blue', 'green', 'yellow'],\n  shape: ['circle', 'square', 'triangle'],\n  location: ['Seattle', 'New York', 'Chicago', 'Los Angeles', 'Portland']\n};\n/** @internal */\n\nexport function createListItems(count, startIndex) {\n  if (startIndex === void 0) {\n    startIndex = 0;\n  }\n\n  return __spreadArray([], Array(count)).map(function (item, index) {\n    var size = 150 + Math.round(Math.random() * 100);\n    return {\n      thumbnail: \"//via.placeholder.com/\" + size + \"x\" + size,\n      key: 'item-' + (index + startIndex) + ' ' + lorem(4),\n      name: lorem(5),\n      description: lorem(10 + Math.round(Math.random() * 50)),\n      color: _randWord(DATA.color),\n      shape: _randWord(DATA.shape),\n      location: _randWord(DATA.location),\n      width: size,\n      height: size\n    };\n  });\n}\n/** @internal */\n\nexport function createGroups(groupCount, groupDepth, startIndex, itemsPerGroup, level, key, isCollapsed) {\n  if (level === void 0) {\n    level = 0;\n  }\n\n  if (key === void 0) {\n    key = '';\n  }\n\n  if (key !== '') {\n    key = key + '-';\n  }\n\n  var count = Math.pow(itemsPerGroup, groupDepth);\n  return __spreadArray([], Array(groupCount)).map(function (value, index) {\n    return {\n      count: count,\n      key: 'group' + key + index,\n      name: 'group ' + key + index,\n      startIndex: index * count + startIndex,\n      level: level,\n      isCollapsed: isCollapsed,\n      children: groupDepth > 1 ? createGroups(groupCount, groupDepth - 1, index * count + startIndex, itemsPerGroup, level + 1, key + index) : []\n    };\n  });\n}\n/** @internal */\n\nexport function isGroupable(key) {\n  return key === 'color' || key === 'shape' || key === 'location';\n}\n\nfunction _randWord(array) {\n  var index = Math.floor(Math.random() * array.length);\n  return array[index];\n}","map":{"version":3,"mappings":"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","names":["lorem","DATA","color","shape","location","createListItems","count","startIndex","__spreadArray","Array","map","item","index","size","Math","round","random","thumbnail","key","name","description","_randWord","width","height","createGroups","groupCount","groupDepth","itemsPerGroup","level","isCollapsed","pow","value","children","isGroupable","array","floor","length"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\@fluentui\\example-data\\src\\listItems.ts"],"sourcesContent":["import { lorem } from './lorem';\n\nconst DATA = {\n  color: ['red', 'blue', 'green', 'yellow'],\n  shape: ['circle', 'square', 'triangle'],\n  location: ['Seattle', 'New York', 'Chicago', 'Los Angeles', 'Portland'],\n};\n\n/** @internal */\nexport interface IExampleItem {\n  thumbnail: string;\n  key: string;\n  name: string;\n  description: string;\n  color: string;\n  shape: string;\n  location: string;\n  width: number;\n  height: number;\n}\n\n/** @internal */\nexport function createListItems(count: number, startIndex: number = 0): IExampleItem[] {\n  return [...Array(count)].map((item: number, index: number) => {\n    const size = 150 + Math.round(Math.random() * 100);\n\n    return {\n      thumbnail: `//via.placeholder.com/${size}x${size}`,\n      key: 'item-' + (index + startIndex) + ' ' + lorem(4),\n      name: lorem(5),\n      description: lorem(10 + Math.round(Math.random() * 50)),\n      color: _randWord(DATA.color),\n      shape: _randWord(DATA.shape),\n      location: _randWord(DATA.location),\n      width: size,\n      height: size,\n    };\n  });\n}\n\n/**\n * For use in this package only.\n * Partial mirror of IGroup from DetailsList avoid a circular dependency.\n * If the real interface changes and this one starts causing compiler errors, update it.\n * @internal\n */\nexport interface IExampleGroup {\n  count: number;\n  key: string;\n  name: string;\n  startIndex: number;\n  level?: number;\n  isCollapsed?: boolean;\n  children?: IExampleGroup[];\n}\n\n/** @internal */\nexport function createGroups(\n  groupCount: number,\n  groupDepth: number,\n  startIndex: number,\n  itemsPerGroup: number,\n  level: number = 0,\n  key: string = '',\n  isCollapsed?: boolean,\n): IExampleGroup[] {\n  if (key !== '') {\n    key = key + '-';\n  }\n  const count = Math.pow(itemsPerGroup, groupDepth);\n  return [...Array(groupCount)].map((value: number, index: number) => {\n    return {\n      count: count,\n      key: 'group' + key + index,\n      name: 'group ' + key + index,\n      startIndex: index * count + startIndex,\n      level: level,\n      isCollapsed: isCollapsed,\n      children:\n        groupDepth > 1\n          ? createGroups(groupCount, groupDepth - 1, index * count + startIndex, itemsPerGroup, level + 1, key + index)\n          : [],\n    };\n  });\n}\n\n/** @internal */\nexport function isGroupable(key: string): boolean {\n  return key === 'color' || key === 'shape' || key === 'location';\n}\n\nfunction _randWord(array: string[]): string {\n  const index = Math.floor(Math.random() * array.length);\n  return array[index];\n}\n"]},"metadata":{},"sourceType":"module"}