{"ast":null,"code":"import { appendFunction } from './appendFunction';\n/**\n * Extends a component's lifetime methods by appending new functions to the existing lifetime functions.\n */\n\nexport function extendComponent(parent, methods) {\n  for (var name_1 in methods) {\n    if (methods.hasOwnProperty(name_1)) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      parent[name_1] = appendFunction(parent, parent[name_1], methods[name_1]);\n    }\n  }\n}","map":{"version":3,"mappings":"AACA,SAASA,cAAT,QAA+B,kBAA/B;AAEA;;;;AAGA,OAAM,SAAUC,eAAV,CAAqDC,MAArD,EAAgEC,OAAhE,EAAsG;AAC1G,OAAK,IAAIC,MAAT,IAAiBD,OAAjB,EAA0B;AACxB,QAAIA,OAAO,CAACE,cAAR,CAAuBD,MAAvB,CAAJ,EAAkC;AAChC;AACAF,YAAM,CAACE,MAAD,CAAN,GAAeJ,cAAc,CAACE,MAAD,EAASA,MAAM,CAACE,MAAD,CAAf,EAAuBD,OAAO,CAACC,MAAD,CAA9B,CAA7B;AACD;AACF;AACF","names":["appendFunction","extendComponent","parent","methods","name_1","hasOwnProperty"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\@uifabric\\utilities\\src\\extendComponent.ts"],"sourcesContent":["import * as React from 'react';\nimport { appendFunction } from './appendFunction';\n\n/**\n * Extends a component's lifetime methods by appending new functions to the existing lifetime functions.\n */\nexport function extendComponent<T extends React.Component>(parent: T, methods: { [key in keyof T]?: T[key] }): void {\n  for (let name in methods) {\n    if (methods.hasOwnProperty(name)) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      parent[name] = appendFunction(parent, parent[name], methods[name]) as any;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}