{"ast":null,"code":"import { Stylesheet } from './Stylesheet';\n/**\n * Separates the classes and style objects. Any classes that are pre-registered\n * args are auto expanded into objects.\n */\n\nexport function extractStyleParts() {\n  var args = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n\n  var classes = [];\n  var objects = [];\n  var stylesheet = Stylesheet.getInstance();\n\n  function _processArgs(argsList) {\n    for (var _i = 0, argsList_1 = argsList; _i < argsList_1.length; _i++) {\n      var arg = argsList_1[_i];\n\n      if (arg) {\n        if (typeof arg === 'string') {\n          if (arg.indexOf(' ') >= 0) {\n            _processArgs(arg.split(' '));\n          } else {\n            var translatedArgs = stylesheet.argsFromClassName(arg);\n\n            if (translatedArgs) {\n              _processArgs(translatedArgs);\n            } else {\n              // Avoid adding the same class twice.\n              if (classes.indexOf(arg) === -1) {\n                classes.push(arg);\n              }\n            }\n          }\n        } else if (Array.isArray(arg)) {\n          _processArgs(arg);\n        } else if (typeof arg === 'object') {\n          objects.push(arg);\n        }\n      }\n    }\n  }\n\n  _processArgs(args);\n\n  return {\n    classes: classes,\n    objects: objects\n  };\n}","map":{"version":3,"mappings":"AACA,SAASA,UAAT,QAA2B,cAA3B;AAEA;;;;;AAIA,OAAM,SAAUC,iBAAV,GAA2B;EAC/B;;OAAA,yCAAyD;IAAzDC;;;EAEA,IAAMC,OAAO,GAAa,EAA1B;EACA,IAAMC,OAAO,GAAS,EAAtB;EACA,IAAMC,UAAU,GAAGL,UAAU,CAACM,WAAX,EAAnB;;EAEA,SAASC,YAAT,CAAsBC,QAAtB,EAAqD;IACnD,KAAkB,iCAAlB,EAAkBC,sBAAlB,EAAkBA,IAAlB,EAA4B;MAAvB,IAAMC,GAAG,iBAAT;;MACH,IAAIA,GAAJ,EAAS;QACP,IAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;UAC3B,IAAIA,GAAG,CAACC,OAAJ,CAAY,GAAZ,KAAoB,CAAxB,EAA2B;YACzBJ,YAAY,CAACG,GAAG,CAACE,KAAJ,CAAU,GAAV,CAAD,CAAZ;UACD,CAFD,MAEO;YACL,IAAMC,cAAc,GAAGR,UAAU,CAACS,iBAAX,CAA6BJ,GAA7B,CAAvB;;YAEA,IAAIG,cAAJ,EAAoB;cAClBN,YAAY,CAACM,cAAD,CAAZ;YACD,CAFD,MAEO;cACL;cACA,IAAIV,OAAO,CAACQ,OAAR,CAAgBD,GAAhB,MAAyB,CAAC,CAA9B,EAAiC;gBAC/BP,OAAO,CAACY,IAAR,CAAaL,GAAb;cACD;YACF;UACF;QACF,CAfD,MAeO,IAAIM,KAAK,CAACC,OAAN,CAAcP,GAAd,CAAJ,EAAwB;UAC7BH,YAAY,CAACG,GAAD,CAAZ;QACD,CAFM,MAEA,IAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;UAClCN,OAAO,CAACW,IAAR,CAAaL,GAAb;QACD;MACF;IACF;EACF;;EAEDH,YAAY,CAACL,IAAD,CAAZ;;EAEA,OAAO;IACLC,OAAO,SADF;IAELC,OAAO;EAFF,CAAP;AAID","names":["Stylesheet","extractStyleParts","args","classes","objects","stylesheet","getInstance","_processArgs","argsList","_i","arg","indexOf","split","translatedArgs","argsFromClassName","push","Array","isArray"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\office-ui-fabric-react\\node_modules\\@uifabric\\merge-styles\\src\\extractStyleParts.ts"],"sourcesContent":["import { IStyle, IStyleBaseArray } from './IStyle';\nimport { Stylesheet } from './Stylesheet';\n\n/**\n * Separates the classes and style objects. Any classes that are pre-registered\n * args are auto expanded into objects.\n */\nexport function extractStyleParts(\n  ...args: (IStyle | IStyle[] | false | null | undefined)[]\n): { classes: string[]; objects: IStyleBaseArray } {\n  const classes: string[] = [];\n  const objects: {}[] = [];\n  const stylesheet = Stylesheet.getInstance();\n\n  function _processArgs(argsList: (IStyle | IStyle[])[]): void {\n    for (const arg of argsList) {\n      if (arg) {\n        if (typeof arg === 'string') {\n          if (arg.indexOf(' ') >= 0) {\n            _processArgs(arg.split(' '));\n          } else {\n            const translatedArgs = stylesheet.argsFromClassName(arg);\n\n            if (translatedArgs) {\n              _processArgs(translatedArgs);\n            } else {\n              // Avoid adding the same class twice.\n              if (classes.indexOf(arg) === -1) {\n                classes.push(arg);\n              }\n            }\n          }\n        } else if (Array.isArray(arg)) {\n          _processArgs(arg);\n        } else if (typeof arg === 'object') {\n          objects.push(arg);\n        }\n      }\n    }\n  }\n\n  _processArgs(args);\n\n  return {\n    classes,\n    objects,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}