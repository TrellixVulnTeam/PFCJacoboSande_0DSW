{"ast":null,"code":"import { hiddenContentStyle, getFocusStyle, getGlobalClassNames } from '../../Styling';\nvar GlobalClassNames = {\n  root: 'ms-Facepile',\n  addButton: 'ms-Facepile-addButton ms-Facepile-itemButton',\n  descriptiveOverflowButton: 'ms-Facepile-descriptiveOverflowButton ms-Facepile-itemButton',\n  itemButton: 'ms-Facepile-itemButton ms-Facepile-person',\n  itemContainer: 'ms-Facepile-itemContainer',\n  members: 'ms-Facepile-members',\n  member: 'ms-Facepile-member',\n  overflowButton: 'ms-Facepile-overflowButton ms-Facepile-itemButton'\n};\nexport var styles = function (props) {\n  var className = props.className,\n      theme = props.theme,\n      _a = props.spacingAroundItemButton,\n      spacingAroundItemButton = _a === void 0 ? 2 : _a;\n  var palette = theme.palette,\n      fonts = theme.fonts;\n  var classNames = getGlobalClassNames(GlobalClassNames, theme);\n  var ItemButtonStyles = {\n    textAlign: 'center',\n    padding: 0,\n    borderRadius: '50%',\n    verticalAlign: 'top',\n    display: 'inline',\n    backgroundColor: 'transparent',\n    border: 'none',\n    selectors: {\n      '&::-moz-focus-inner': {\n        padding: 0,\n        border: 0\n      }\n    }\n  };\n  return {\n    root: [classNames.root, theme.fonts.medium, {\n      width: 'auto'\n    }, className],\n    addButton: [classNames.addButton, getFocusStyle(theme, {\n      inset: -1\n    }), ItemButtonStyles, {\n      fontSize: fonts.medium.fontSize,\n      color: palette.white,\n      backgroundColor: palette.themePrimary,\n      marginRight: spacingAroundItemButton * 2 + 'px',\n      selectors: {\n        '&:hover': {\n          backgroundColor: palette.themeDark\n        },\n        '&:focus': {\n          backgroundColor: palette.themeDark\n        },\n        '&:active': {\n          backgroundColor: palette.themeDarker\n        },\n        '&:disabled': {\n          backgroundColor: palette.neutralTertiaryAlt\n        }\n      }\n    }],\n    descriptiveOverflowButton: [classNames.descriptiveOverflowButton, getFocusStyle(theme, {\n      inset: -1\n    }), ItemButtonStyles, {\n      fontSize: fonts.small.fontSize,\n      color: palette.neutralSecondary,\n      backgroundColor: palette.neutralLighter,\n      marginLeft: spacingAroundItemButton * 2 + \"px\"\n    }],\n    itemButton: [classNames.itemButton, ItemButtonStyles],\n    itemContainer: [classNames.itemContainer, {\n      display: 'flex'\n    }],\n    members: [classNames.members, {\n      display: 'flex',\n      overflow: 'hidden',\n      listStyleType: 'none',\n      padding: 0,\n      margin: \"-\" + spacingAroundItemButton + \"px\"\n    }],\n    member: [classNames.member, {\n      display: 'inline-flex',\n      flex: '0 0 auto',\n      margin: spacingAroundItemButton + \"px\"\n    }],\n    overflowButton: [classNames.overflowButton, getFocusStyle(theme, {\n      inset: -1\n    }), ItemButtonStyles, {\n      fontSize: fonts.medium.fontSize,\n      color: palette.neutralSecondary,\n      backgroundColor: palette.neutralLighter,\n      marginLeft: spacingAroundItemButton * 2 + \"px\"\n    }],\n    overflowInitialsIcon: [{\n      color: palette.neutralPrimary\n    }],\n    screenReaderOnly: hiddenContentStyle\n  };\n};","map":{"version":3,"mappings":"AAEA,SAAiBA,kBAAjB,EAAqCC,aAArC,EAAoDC,mBAApD,QAA+E,eAA/E;AAEA,IAAMC,gBAAgB,GAAG;AACvBC,MAAI,EAAE,aADiB;AAEvBC,WAAS,EAAE,8CAFY;AAGvBC,2BAAyB,EAAE,8DAHJ;AAIvBC,YAAU,EAAE,2CAJW;AAKvBC,eAAa,EAAE,2BALQ;AAMvBC,SAAO,EAAE,qBANc;AAOvBC,QAAM,EAAE,oBAPe;AAQvBC,gBAAc,EAAE;AARO,CAAzB;AAWA,OAAO,IAAMC,MAAM,GAAG,UAACC,KAAD,EAA2B;AACvC;AAAA,MAAWC,mBAAX;AAAA,MAAkBC,kCAAlB;AAAA,MAAkBC,gDAAlB;AAEA;AAAA,MAASC,mBAAT;AACR,MAAMC,UAAU,GAAGhB,mBAAmB,CAACC,gBAAD,EAAmBW,KAAnB,CAAtC;AAEA,MAAMK,gBAAgB,GAAW;AAC/BC,aAAS,EAAE,QADoB;AAE/BC,WAAO,EAAE,CAFsB;AAG/BC,gBAAY,EAAE,KAHiB;AAI/BC,iBAAa,EAAE,KAJgB;AAK/BC,WAAO,EAAE,QALsB;AAM/BC,mBAAe,EAAE,aANc;AAO/BC,UAAM,EAAE,MAPuB;AAQ/BC,aAAS,EAAE;AACT,6BAAuB;AACrBN,eAAO,EAAE,CADY;AAErBK,cAAM,EAAE;AAFa;AADd;AARoB,GAAjC;AAgBA,SAAO;AACLtB,QAAI,EAAE,CACJc,UAAU,CAACd,IADP,EAEJU,KAAK,CAACG,KAAN,CAAYW,MAFR,EAGJ;AACEC,WAAK,EAAE;AADT,KAHI,EAMJC,SANI,CADD;AAULzB,aAAS,EAAE,CACTa,UAAU,CAACb,SADF,EAETJ,aAAa,CAACa,KAAD,EAAQ;AAAEiB,WAAK,EAAE,CAAC;AAAV,KAAR,CAFJ,EAGTZ,gBAHS,EAIT;AACEa,cAAQ,EAAEf,KAAK,CAACW,MAAN,CAAaI,QADzB;AAEEC,WAAK,EAAEC,OAAO,CAACC,KAFjB;AAGEV,qBAAe,EAAES,OAAO,CAACE,YAH3B;AAIEC,iBAAW,EAAErB,uBAAuB,GAAG,CAA1B,GAA8B,IAJ7C;AAKEW,eAAS,EAAE;AACT,mBAAW;AACTF,yBAAe,EAAES,OAAO,CAACI;AADhB,SADF;AAIT,mBAAW;AACTb,yBAAe,EAAES,OAAO,CAACI;AADhB,SAJF;AAOT,oBAAY;AACVb,yBAAe,EAAES,OAAO,CAACK;AADf,SAPH;AAUT,sBAAc;AACZd,yBAAe,EAAES,OAAO,CAACM;AADb;AAVL;AALb,KAJS,CAVN;AAoCLlC,6BAAyB,EAAE,CACzBY,UAAU,CAACZ,yBADc,EAEzBL,aAAa,CAACa,KAAD,EAAQ;AAAEiB,WAAK,EAAE,CAAC;AAAV,KAAR,CAFY,EAGzBZ,gBAHyB,EAIzB;AACEa,cAAQ,EAAEf,KAAK,CAACwB,KAAN,CAAYT,QADxB;AAEEC,WAAK,EAAEC,OAAO,CAACQ,gBAFjB;AAGEjB,qBAAe,EAAES,OAAO,CAACS,cAH3B;AAIEC,gBAAU,EAAK5B,uBAAuB,GAAG,CAA1B,GAA2B;AAJ5C,KAJyB,CApCtB;AAgDLT,cAAU,EAAE,CAACW,UAAU,CAACX,UAAZ,EAAwBY,gBAAxB,CAhDP;AAkDLX,iBAAa,EAAE,CACbU,UAAU,CAACV,aADE,EAEb;AACEgB,aAAO,EAAE;AADX,KAFa,CAlDV;AAyDLf,WAAO,EAAE,CACPS,UAAU,CAACT,OADJ,EAEP;AACEe,aAAO,EAAE,MADX;AAEEqB,cAAQ,EAAE,QAFZ;AAGEC,mBAAa,EAAE,MAHjB;AAIEzB,aAAO,EAAE,CAJX;AAKE0B,YAAM,EAAE,MAAI/B,uBAAJ,GAA2B;AALrC,KAFO,CAzDJ;AAoELN,UAAM,EAAE,CACNQ,UAAU,CAACR,MADL,EAEN;AACEc,aAAO,EAAE,aADX;AAEEwB,UAAI,EAAE,UAFR;AAGED,YAAM,EAAK/B,uBAAuB;AAHpC,KAFM,CApEH;AA6ELL,kBAAc,EAAE,CACdO,UAAU,CAACP,cADG,EAEdV,aAAa,CAACa,KAAD,EAAQ;AAAEiB,WAAK,EAAE,CAAC;AAAV,KAAR,CAFC,EAGdZ,gBAHc,EAId;AACEa,cAAQ,EAAEf,KAAK,CAACW,MAAN,CAAaI,QADzB;AAEEC,WAAK,EAAEC,OAAO,CAACQ,gBAFjB;AAGEjB,qBAAe,EAAES,OAAO,CAACS,cAH3B;AAIEC,gBAAU,EAAK5B,uBAAuB,GAAG,CAA1B,GAA2B;AAJ5C,KAJc,CA7EX;AAyFLiC,wBAAoB,EAAE,CACpB;AACEhB,WAAK,EAAEC,OAAO,CAACgB;AADjB,KADoB,CAzFjB;AA+FLC,oBAAgB,EAAEnD;AA/Fb,GAAP;AAiGD,CAvHM","names":["hiddenContentStyle","getFocusStyle","getGlobalClassNames","GlobalClassNames","root","addButton","descriptiveOverflowButton","itemButton","itemContainer","members","member","overflowButton","styles","props","theme","_a","spacingAroundItemButton","fonts","classNames","ItemButtonStyles","textAlign","padding","borderRadius","verticalAlign","display","backgroundColor","border","selectors","medium","width","className","inset","fontSize","color","palette","white","themePrimary","marginRight","themeDark","themeDarker","neutralTertiaryAlt","small","neutralSecondary","neutralLighter","marginLeft","overflow","listStyleType","margin","flex","overflowInitialsIcon","neutralPrimary","screenReaderOnly"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\office-ui-fabric-react\\lib\\components\\src\\components\\Facepile\\Facepile.styles.ts"],"sourcesContent":["import { IFacepileStyleProps, IFacepileStyles } from './Facepile.types';\n\nimport { IStyle, hiddenContentStyle, getFocusStyle, getGlobalClassNames } from '../../Styling';\n\nconst GlobalClassNames = {\n  root: 'ms-Facepile',\n  addButton: 'ms-Facepile-addButton ms-Facepile-itemButton',\n  descriptiveOverflowButton: 'ms-Facepile-descriptiveOverflowButton ms-Facepile-itemButton',\n  itemButton: 'ms-Facepile-itemButton ms-Facepile-person',\n  itemContainer: 'ms-Facepile-itemContainer',\n  members: 'ms-Facepile-members',\n  member: 'ms-Facepile-member',\n  overflowButton: 'ms-Facepile-overflowButton ms-Facepile-itemButton',\n};\n\nexport const styles = (props: IFacepileStyleProps): IFacepileStyles => {\n  const { className, theme, spacingAroundItemButton = 2 } = props;\n\n  const { palette, fonts } = theme;\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  const ItemButtonStyles: IStyle = {\n    textAlign: 'center',\n    padding: 0,\n    borderRadius: '50%',\n    verticalAlign: 'top',\n    display: 'inline',\n    backgroundColor: 'transparent',\n    border: 'none',\n    selectors: {\n      '&::-moz-focus-inner': {\n        padding: 0,\n        border: 0,\n      },\n    },\n  };\n\n  return {\n    root: [\n      classNames.root,\n      theme.fonts.medium,\n      {\n        width: 'auto',\n      },\n      className,\n    ],\n\n    addButton: [\n      classNames.addButton,\n      getFocusStyle(theme, { inset: -1 }),\n      ItemButtonStyles,\n      {\n        fontSize: fonts.medium.fontSize,\n        color: palette.white,\n        backgroundColor: palette.themePrimary,\n        marginRight: spacingAroundItemButton * 2 + 'px',\n        selectors: {\n          '&:hover': {\n            backgroundColor: palette.themeDark,\n          },\n          '&:focus': {\n            backgroundColor: palette.themeDark,\n          },\n          '&:active': {\n            backgroundColor: palette.themeDarker,\n          },\n          '&:disabled': {\n            backgroundColor: palette.neutralTertiaryAlt,\n          },\n        },\n      },\n    ],\n\n    descriptiveOverflowButton: [\n      classNames.descriptiveOverflowButton,\n      getFocusStyle(theme, { inset: -1 }),\n      ItemButtonStyles,\n      {\n        fontSize: fonts.small.fontSize,\n        color: palette.neutralSecondary,\n        backgroundColor: palette.neutralLighter,\n        marginLeft: `${spacingAroundItemButton * 2}px`,\n      },\n    ],\n\n    itemButton: [classNames.itemButton, ItemButtonStyles],\n\n    itemContainer: [\n      classNames.itemContainer,\n      {\n        display: 'flex',\n      },\n    ],\n\n    members: [\n      classNames.members,\n      {\n        display: 'flex',\n        overflow: 'hidden',\n        listStyleType: 'none',\n        padding: 0,\n        margin: `-${spacingAroundItemButton}px`,\n      },\n    ],\n\n    member: [\n      classNames.member,\n      {\n        display: 'inline-flex',\n        flex: '0 0 auto',\n        margin: `${spacingAroundItemButton}px`,\n      },\n    ],\n\n    overflowButton: [\n      classNames.overflowButton,\n      getFocusStyle(theme, { inset: -1 }),\n      ItemButtonStyles,\n      {\n        fontSize: fonts.medium.fontSize,\n        color: palette.neutralSecondary,\n        backgroundColor: palette.neutralLighter,\n        marginLeft: `${spacingAroundItemButton * 2}px`,\n      },\n    ],\n\n    overflowInitialsIcon: [\n      {\n        color: palette.neutralPrimary,\n      },\n    ],\n\n    screenReaderOnly: hiddenContentStyle,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}