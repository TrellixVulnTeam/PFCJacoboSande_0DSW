{"ast":null,"code":"import { getGlobalClassNames } from '../../Styling';\nvar inheritFont = {\n  fontFamily: 'inherit'\n};\nvar GlobalClassNames = {\n  root: 'ms-Fabric',\n  bodyThemed: 'ms-Fabric-bodyThemed'\n};\nexport var getStyles = function getStyles(props) {\n  var theme = props.theme,\n      className = props.className,\n      applyTheme = props.applyTheme;\n  var classNames = getGlobalClassNames(GlobalClassNames, theme);\n  return {\n    root: [classNames.root, theme.fonts.medium, {\n      color: theme.palette.neutralPrimary,\n      selectors: {\n        '& button': inheritFont,\n        '& input': inheritFont,\n        '& textarea': inheritFont\n      }\n    }, // apply theme to only if applyTheme is true\n    applyTheme && {\n      color: theme.semanticColors.bodyText,\n      backgroundColor: theme.semanticColors.bodyBackground\n    }, className],\n    bodyThemed: [{\n      backgroundColor: theme.semanticColors.bodyBackground\n    }]\n  };\n};","map":{"version":3,"mappings":"AAAA,SAASA,mBAAT,QAAoC,eAApC;AAGA,IAAMC,WAAW,GAAG;EAAEC,UAAU,EAAE;AAAd,CAApB;AAEA,IAAMC,gBAAgB,GAAG;EACvBC,IAAI,EAAE,WADiB;EAEvBC,UAAU,EAAE;AAFW,CAAzB;AAUA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAyB;EACxC;EAAA,IAAOC,2BAAP;EAAA,IAAkBC,6BAAlB;EACR,IAAMC,UAAU,GAAGV,mBAAmB,CAACG,gBAAD,EAAmBQ,KAAnB,CAAtC;EACA,OAAO;IACLP,IAAI,EAAE,CACJM,UAAU,CAACN,IADP,EAEJO,KAAK,CAACC,KAAN,CAAYC,MAFR,EAGJ;MACEC,KAAK,EAAEH,KAAK,CAACI,OAAN,CAAcC,cADvB;MAEEC,SAAS,EAAE;QACT,YAAYhB,WADH;QAET,WAAWA,WAFF;QAGT,cAAcA;MAHL;IAFb,CAHI,EAWJ;IACAQ,UAAU,IAAI;MACZK,KAAK,EAAEH,KAAK,CAACO,cAAN,CAAqBC,QADhB;MAEZC,eAAe,EAAET,KAAK,CAACO,cAAN,CAAqBG;IAF1B,CAZV,EAgBJb,SAhBI,CADD;IAmBLH,UAAU,EAAE,CACV;MACEe,eAAe,EAAET,KAAK,CAACO,cAAN,CAAqBG;IADxC,CADU;EAnBP,CAAP;AAyBD,CA5BM","names":["getGlobalClassNames","inheritFont","fontFamily","GlobalClassNames","root","bodyThemed","getStyles","props","className","applyTheme","classNames","theme","fonts","medium","color","palette","neutralPrimary","selectors","semanticColors","bodyText","backgroundColor","bodyBackground"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\office-ui-fabric-react\\lib\\components\\src\\components\\Fabric\\Fabric.styles.ts"],"sourcesContent":["import { getGlobalClassNames } from '../../Styling';\nimport { IFabricStyleProps, IFabricStyles } from './Fabric.types';\n\nconst inheritFont = { fontFamily: 'inherit' };\n\nconst GlobalClassNames = {\n  root: 'ms-Fabric',\n  bodyThemed: 'ms-Fabric-bodyThemed',\n};\n\nexport interface IFabricClassNames {\n  root: string;\n  bodyThemed: string;\n}\n\nexport const getStyles = (props: IFabricStyleProps): IFabricStyles => {\n  const { theme, className, applyTheme } = props;\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n  return {\n    root: [\n      classNames.root,\n      theme.fonts.medium,\n      {\n        color: theme.palette.neutralPrimary,\n        selectors: {\n          '& button': inheritFont,\n          '& input': inheritFont,\n          '& textarea': inheritFont,\n        },\n      },\n      // apply theme to only if applyTheme is true\n      applyTheme && {\n        color: theme.semanticColors.bodyText,\n        backgroundColor: theme.semanticColors.bodyBackground,\n      },\n      className,\n    ],\n    bodyThemed: [\n      {\n        backgroundColor: theme.semanticColors.bodyBackground,\n      },\n    ],\n  };\n};\n"]},"metadata":{},"sourceType":"module"}