{"ast":null,"code":"var _jsxFileName = \"D:\\\\PFCJACOBO\\\\PFC\\\\mycinemalist\\\\src\\\\components\\\\FiltroColumnas.tsx\";\nimport * as React from 'react';\nimport { PrimaryButton, IconButton, Stack } from 'office-ui-fabric-react'; // import styles from './common.module.scss';\n\nexport const customIcons = {\n  cancel: {\n    iconName: 'Cancel',\n    styles: {\n      root: {\n        color: 'red'\n      }\n    }\n  },\n  accept: {\n    iconName: 'Accept',\n    styles: {\n      root: {\n        color: 'green'\n      }\n    }\n  },\n  acceptCierre: {\n    iconName: 'LockSolid',\n    styles: {\n      root: {\n        color: 'green'\n      }\n    }\n  },\n  search: {\n    iconName: 'Search'\n  },\n  sp: {\n    iconName: 'SharepointLogo'\n  },\n  teams: {\n    iconName: 'TeamsLogo',\n    styles: {\n      root: {\n        color: '#464775'\n      }\n    }\n  },\n  cerrar: {\n    iconName: 'Lock',\n    styles: {\n      root: {\n        color: 'black'\n      }\n    }\n  },\n  filter: {\n    iconName: 'Filter'\n  },\n  filterSolid: {\n    iconName: 'FilterSolid'\n  }\n};\nexport class FiltroColumnas extends React.Component {\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.value != null && prevProps.value != this.props.value && prevProps.value != this.state.textoFiltro) {\n      this.setState({\n        textoFiltro: \"\"\n      });\n    }\n\n    if (prevState.textoFiltro != this.state.textoFiltro) {\n      this.props.onchange(this.state.textoFiltro);\n    }\n  }\n\n  constructor(props, state) {\n    super(props);\n    this.state = {\n      textoFiltro: \"\"\n    };\n  }\n\n  render() {\n    var MenuProps = {\n      items: this.props.Opciones.map(IFiltroColumnasOpcion => {\n        var Properties = {\n          key: IFiltroColumnasOpcion.Titulo,\n          text: IFiltroColumnasOpcion.Titulo,\n          onClick: () => {\n            this.setState({\n              textoFiltro: IFiltroColumnasOpcion.Titulo\n            });\n          }\n        };\n\n        if (IFiltroColumnasOpcion.SubOpcion) {\n          var SubMenu = {\n            items: IFiltroColumnasOpcion.SubOpcion.map(SubIFiltroColumnasOpcion => {\n              let Properties = {\n                key: SubIFiltroColumnasOpcion.Titulo,\n                text: SubIFiltroColumnasOpcion.Titulo,\n                title: SubIFiltroColumnasOpcion.Titulo,\n                onClick: () => {\n                  this.setState({\n                    textoFiltro: SubIFiltroColumnasOpcion.Titulo\n                  });\n                }\n              };\n              return Properties;\n            })\n          };\n          Properties.subMenuProps = SubMenu;\n        }\n\n        return Properties;\n      })\n    };\n    return /*#__PURE__*/React.createElement(Stack, {\n      horizontal: true,\n      horizontalAlign: \"center\",\n      gap: 5,\n      verticalAlign: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Stack, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(PrimaryButton, {\n      text: this.props.Titulo,\n      className: styles.button,\n      iconProps: this.state.textoFiltro != \"\" ? customIcons.filterSolid : customIcons.filter,\n      menuProps: MenuProps,\n      allowDisabledFocus: true,\n      checked: this.state.textoFiltro != \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Stack, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }\n    }, this.state.textoFiltro != \"\" && /*#__PURE__*/React.createElement(Stack, {\n      horizontal: true,\n      horizontalAlign: \"center\",\n      verticalAlign: \"center\",\n      className: styles.notificacion,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 25\n      }\n    }, \"Filtrando: \", \" \", this.state.textoFiltro, /*#__PURE__*/React.createElement(IconButton, {\n      iconProps: customIcons.cancel,\n      allowDisabledFocus: true,\n      onClick: () => {\n        this.setState({\n          textoFiltro: \"\"\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 29\n      }\n    }))));\n  }\n\n}","map":{"version":3,"names":["React","PrimaryButton","IconButton","Stack","customIcons","cancel","iconName","styles","root","color","accept","acceptCierre","search","sp","teams","cerrar","filter","filterSolid","FiltroColumnas","Component","componentDidUpdate","prevProps","prevState","value","props","state","textoFiltro","setState","onchange","constructor","render","MenuProps","items","Opciones","map","IFiltroColumnasOpcion","Properties","key","Titulo","text","onClick","SubOpcion","SubMenu","SubIFiltroColumnasOpcion","title","subMenuProps","button","notificacion"],"sources":["D:/PFCJACOBO/PFC/mycinemalist/src/components/FiltroColumnas.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport * as $ from 'jquery';\r\n\r\nimport {\r\n  PrimaryButton, IContextualMenuProps, IconButton, Label, TextField,  DialogFooter,  DialogContent,  Dropdown,  IDropdownOption,\r\n  Toggle, Spinner, Stack, IContextualMenuItem, StackItem\r\n} from 'office-ui-fabric-react';\r\n\r\n\r\n// import styles from './common.module.scss';\r\n\r\nexport const customIcons = {\r\n    \r\n    cancel: {\r\n        iconName: 'Cancel',\r\n        styles: {\r\n          root: { color: 'red' }\r\n        }\r\n    },\r\n    accept: {\r\n        iconName: 'Accept',\r\n        styles: {\r\n          root: { color: 'green' }\r\n        }\r\n      },\r\n    acceptCierre: {\r\n        iconName: 'LockSolid',\r\n        styles: {\r\n          root: { color: 'green' }\r\n        }\r\n      },\r\n    search: {\r\n        iconName: 'Search',\r\n    },\r\n    sp: {\r\n        iconName: 'SharepointLogo',\r\n    },\r\n    teams: {\r\n        iconName: 'TeamsLogo',\r\n        styles: {\r\n            root: { color: '#464775' }\r\n          }\r\n    },\r\n    cerrar: {\r\n        iconName: 'Lock',\r\n        styles: {\r\n          root: { color: 'black'}\r\n        }\r\n    },\r\n    filter: {\r\n        iconName: 'Filter'\r\n    },\r\n    filterSolid:  {\r\n        iconName: 'FilterSolid'\r\n    }\r\n};\r\n\r\nexport interface IFiltroColumnasOpcion{\r\n    Titulo:string;\r\n    Seleccionable?:boolean;\r\n    SubOpcion?:IFiltroColumnasOpcion[]\r\n}\r\n\r\ninterface IFiltroColumnasProps {\r\n    onchange: (FiltroSeleccionado: string) => void;\r\n    Opciones: IFiltroColumnasOpcion[];\r\n    Titulo: string;\r\n    value?: string;\r\n   \r\n}\r\n\r\ninterface IFiltroColumnasState {\r\n    textoFiltro: string;\r\n}\r\n\r\nexport class FiltroColumnas extends React.Component<IFiltroColumnasProps, IFiltroColumnasState> {  \r\n\r\n\r\n    public componentDidUpdate(prevProps:IFiltroColumnasProps,prevState:IFiltroColumnasState){\r\n\r\n        if(prevProps.value != null && prevProps.value != this.props.value && prevProps.value != this.state.textoFiltro){\r\n\r\n            this.setState({textoFiltro : \"\"});\r\n        }\r\n        if(prevState.textoFiltro != this.state.textoFiltro ){\r\n\r\n            this.props.onchange(this.state.textoFiltro);\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    constructor(props: IFiltroColumnasProps, state: IFiltroColumnasState) {\r\n        super(props);\r\n        this.state = {\r\n            textoFiltro: \"\"\r\n        };\r\n\r\n    }\r\n\r\n    public render():JSX.Element{\r\n\r\n\r\n        var MenuProps:IContextualMenuProps = {\r\n            items : this.props.Opciones.map((IFiltroColumnasOpcion:IFiltroColumnasOpcion) :IContextualMenuItem =>{\r\n                var Properties:IContextualMenuItem = {  \r\n                    key: IFiltroColumnasOpcion.Titulo,\r\n                    text: IFiltroColumnasOpcion.Titulo,\r\n                    onClick : () =>{\r\n\r\n                        this.setState({textoFiltro:IFiltroColumnasOpcion.Titulo});\r\n                    }\r\n                }\r\n                if(IFiltroColumnasOpcion.SubOpcion){\r\n                    var SubMenu = {\r\n                        items: IFiltroColumnasOpcion.SubOpcion.map((SubIFiltroColumnasOpcion:IFiltroColumnasOpcion):IContextualMenuItem =>{\r\n                            let Properties = {\r\n                                key:SubIFiltroColumnasOpcion.Titulo,\r\n                                text:SubIFiltroColumnasOpcion.Titulo,\r\n                                title:SubIFiltroColumnasOpcion.Titulo,\r\n                                onClick : () =>{\r\n\r\n                                    this.setState({textoFiltro:SubIFiltroColumnasOpcion.Titulo});\r\n                                }\r\n                            }\r\n                            return Properties\r\n                        })\r\n                    }\r\n\r\n                    Properties.subMenuProps = SubMenu;\r\n                }\r\n                \r\n                \r\n                return Properties;\r\n            })\r\n        };\r\n\r\n        return ( \r\n               \r\n            <Stack horizontal horizontalAlign={\"center\"} gap={5} verticalAlign={\"center\"} >  \r\n                <Stack>\r\n                    <PrimaryButton\r\n                        text={this.props.Titulo}\r\n                        className={styles.button}\r\n                        iconProps={this.state.textoFiltro != \"\" ? customIcons.filterSolid : customIcons.filter }\r\n                        menuProps={MenuProps}\r\n                        allowDisabledFocus\r\n                        checked={this.state.textoFiltro != \"\"}\r\n                        />\r\n                </Stack>\r\n                <Stack>\r\n                    {this.state.textoFiltro != \"\" && \r\n                        <Stack horizontal horizontalAlign={\"center\"} verticalAlign={\"center\"} className={styles.notificacion} >\r\n                            {\"Filtrando: \"} {this.state.textoFiltro}\r\n\r\n                            <IconButton iconProps={customIcons.cancel} allowDisabledFocus onClick={\r\n                                () =>{\r\n                                    this.setState({textoFiltro : \"\"});\r\n                                }\r\n                            }/>\r\n                        </Stack>\r\n                    }\r\n                </Stack>\r\n                \r\n            </Stack>\r\n        );\r\n    }\r\n  \r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}