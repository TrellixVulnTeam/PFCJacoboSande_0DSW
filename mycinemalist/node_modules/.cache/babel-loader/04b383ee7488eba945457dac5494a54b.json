{"ast":null,"code":"import { AnimationClassNames, getFocusStyle, ZIndexes, getGlobalClassNames, HighContrastSelector, FontWeights } from '../../Styling';\nvar GlobalClassNames = {\n  root: 'ms-Nav',\n  linkText: 'ms-Nav-linkText',\n  compositeLink: 'ms-Nav-compositeLink',\n  link: 'ms-Nav-link',\n  chevronButton: 'ms-Nav-chevronButton',\n  chevronIcon: 'ms-Nav-chevron',\n  navItem: 'ms-Nav-navItem',\n  navItems: 'ms-Nav-navItems',\n  group: 'ms-Nav-group',\n  groupContent: 'ms-Nav-groupContent'\n};\nexport var buttonStyles = {\n  textContainer: {\n    overflow: 'hidden'\n  },\n  label: {\n    whiteSpace: 'nowrap',\n    textOverflow: 'ellipsis',\n    overflow: 'hidden'\n  }\n};\nexport var getStyles = function getStyles(props) {\n  var _a;\n\n  var className = props.className,\n      theme = props.theme,\n      isOnTop = props.isOnTop,\n      isExpanded = props.isExpanded,\n      isGroup = props.isGroup,\n      isLink = props.isLink,\n      isSelected = props.isSelected,\n      isDisabled = props.isDisabled,\n      isButtonEntry = props.isButtonEntry,\n      _b = props.navHeight,\n      navHeight = _b === void 0 ? 44 : _b,\n      position = props.position,\n      _c = props.leftPadding,\n      leftPadding = _c === void 0 ? 20 : _c,\n      _d = props.leftPaddingExpanded,\n      leftPaddingExpanded = _d === void 0 ? 28 : _d,\n      _e = props.rightPadding,\n      rightPadding = _e === void 0 ? 20 : _e;\n  var palette = theme.palette,\n      semanticColors = theme.semanticColors,\n      fonts = theme.fonts;\n  var classNames = getGlobalClassNames(GlobalClassNames, theme);\n  return {\n    root: [classNames.root, className, fonts.medium, {\n      overflowY: 'auto',\n      userSelect: 'none',\n      WebkitOverflowScrolling: 'touch'\n    }, isOnTop && [{\n      position: 'absolute'\n    }, AnimationClassNames.slideRightIn40]],\n    linkText: [classNames.linkText, {\n      margin: '0 4px',\n      overflow: 'hidden',\n      verticalAlign: 'middle',\n      textAlign: 'left',\n      textOverflow: 'ellipsis'\n    }],\n    compositeLink: [classNames.compositeLink, {\n      display: 'block',\n      position: 'relative',\n      color: semanticColors.bodyText\n    }, isExpanded && 'is-expanded', isSelected && 'is-selected', isDisabled && 'is-disabled', isDisabled && {\n      color: semanticColors.disabledText\n    }],\n    link: [classNames.link, getFocusStyle(theme), {\n      display: 'block',\n      position: 'relative',\n      height: navHeight,\n      width: '100%',\n      lineHeight: navHeight + \"px\",\n      textDecoration: 'none',\n      cursor: 'pointer',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      paddingLeft: leftPadding,\n      paddingRight: rightPadding,\n      color: semanticColors.bodyText,\n      selectors: (_a = {}, _a[HighContrastSelector] = {\n        border: 0,\n        selectors: {\n          ':focus': {\n            border: '1px solid WindowText'\n          }\n        }\n      }, _a)\n    }, !isDisabled && {\n      selectors: {\n        '.ms-Nav-compositeLink:hover &': {\n          backgroundColor: semanticColors.bodyBackgroundHovered\n        }\n      }\n    }, isSelected && {\n      color: semanticColors.bodyTextChecked,\n      fontWeight: FontWeights.semibold,\n      backgroundColor: semanticColors.bodyBackgroundChecked,\n      selectors: {\n        '&:after': {\n          borderLeft: \"2px solid \" + palette.themePrimary,\n          content: '\"\"',\n          position: 'absolute',\n          top: 0,\n          right: 0,\n          bottom: 0,\n          left: 0,\n          pointerEvents: 'none'\n        }\n      }\n    }, isDisabled && {\n      color: semanticColors.disabledText\n    }, isButtonEntry && {\n      color: palette.themePrimary\n    }],\n    chevronButton: [classNames.chevronButton, getFocusStyle(theme), fonts.small, {\n      display: 'block',\n      textAlign: 'left',\n      lineHeight: navHeight + \"px\",\n      margin: '5px 0',\n      padding: \"0px, \" + rightPadding + \"px, 0px, \" + leftPaddingExpanded + \"px\",\n      border: 'none',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      cursor: 'pointer',\n      color: semanticColors.bodyText,\n      backgroundColor: 'transparent',\n      selectors: {\n        '&:visited': {\n          color: semanticColors.bodyText\n        }\n      }\n    }, isGroup && {\n      fontSize: fonts.large.fontSize,\n      width: '100%',\n      height: navHeight,\n      borderBottom: \"1px solid \" + semanticColors.bodyDivider\n    }, isLink && {\n      display: 'block',\n      width: leftPaddingExpanded - 2,\n      height: navHeight - 2,\n      position: 'absolute',\n      top: '1px',\n      left: position + \"px\",\n      zIndex: ZIndexes.Nav,\n      padding: 0,\n      margin: 0\n    }, isSelected && {\n      color: palette.themePrimary,\n      backgroundColor: palette.neutralLighterAlt,\n      selectors: {\n        '&:after': {\n          borderLeft: \"2px solid \" + palette.themePrimary,\n          content: '\"\"',\n          position: 'absolute',\n          top: 0,\n          right: 0,\n          bottom: 0,\n          left: 0,\n          pointerEvents: 'none'\n        }\n      }\n    }],\n    chevronIcon: [classNames.chevronIcon, {\n      position: 'absolute',\n      left: '8px',\n      height: navHeight,\n      lineHeight: navHeight + \"px\",\n      fontSize: fonts.small.fontSize,\n      transition: 'transform .1s linear'\n    }, isExpanded && {\n      transform: 'rotate(-180deg)'\n    }, isLink && {\n      top: 0\n    }],\n    navItem: [classNames.navItem, {\n      padding: 0\n    }],\n    navItems: [classNames.navItems, {\n      listStyleType: 'none',\n      padding: 0,\n      margin: 0\n    }],\n    group: [classNames.group, isExpanded && 'is-expanded'],\n    groupContent: [classNames.groupContent, {\n      display: 'none',\n      marginBottom: '40px'\n    }, AnimationClassNames.slideDownIn20, isExpanded && {\n      display: 'block'\n    }]\n  };\n};","map":{"version":3,"mappings":"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","names":["AnimationClassNames","getFocusStyle","ZIndexes","getGlobalClassNames","HighContrastSelector","FontWeights","GlobalClassNames","root","linkText","compositeLink","link","chevronButton","chevronIcon","navItem","navItems","group","groupContent","buttonStyles","textContainer","overflow","label","whiteSpace","textOverflow","getStyles","props","theme","isOnTop","isExpanded","isGroup","isLink","isSelected","isDisabled","isButtonEntry","_b","navHeight","position","_c","leftPadding","_d","leftPaddingExpanded","_e","rightPadding","semanticColors","fonts","classNames","className","medium","overflowY","userSelect","WebkitOverflowScrolling","slideRightIn40","margin","verticalAlign","textAlign","display","color","bodyText","disabledText","height","width","lineHeight","textDecoration","cursor","paddingLeft","paddingRight","selectors","_a","border","backgroundColor","bodyBackgroundHovered","bodyTextChecked","fontWeight","semibold","bodyBackgroundChecked","borderLeft","palette","themePrimary","content","top","right","bottom","left","pointerEvents","small","padding","fontSize","large","borderBottom","bodyDivider","zIndex","Nav","neutralLighterAlt","transition","transform","listStyleType","marginBottom","slideDownIn20"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\office-ui-fabric-react\\lib\\components\\src\\components\\Nav\\Nav.styles.ts"],"sourcesContent":["import { INavStyleProps, INavStyles } from './Nav.types';\nimport { IButtonStyles } from '../../Button';\nimport {\n  AnimationClassNames,\n  getFocusStyle,\n  ZIndexes,\n  getGlobalClassNames,\n  HighContrastSelector,\n  FontWeights,\n} from '../../Styling';\n\nconst GlobalClassNames = {\n  root: 'ms-Nav',\n  linkText: 'ms-Nav-linkText',\n  compositeLink: 'ms-Nav-compositeLink',\n  link: 'ms-Nav-link',\n  chevronButton: 'ms-Nav-chevronButton',\n  chevronIcon: 'ms-Nav-chevron',\n  navItem: 'ms-Nav-navItem',\n  navItems: 'ms-Nav-navItems',\n  group: 'ms-Nav-group',\n  groupContent: 'ms-Nav-groupContent',\n};\n\nexport const buttonStyles: IButtonStyles = {\n  textContainer: {\n    overflow: 'hidden',\n  },\n  label: {\n    whiteSpace: 'nowrap',\n    textOverflow: 'ellipsis',\n    overflow: 'hidden',\n  },\n};\n\nexport const getStyles = (props: INavStyleProps): INavStyles => {\n  const {\n    className,\n    theme,\n    isOnTop,\n    isExpanded,\n    isGroup,\n    isLink,\n    isSelected,\n    isDisabled,\n    isButtonEntry,\n    navHeight = 44,\n    position,\n    leftPadding = 20,\n    leftPaddingExpanded = 28,\n    rightPadding = 20,\n  } = props;\n\n  const { palette, semanticColors, fonts } = theme;\n\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  return {\n    root: [\n      classNames.root,\n      className,\n      fonts.medium,\n      {\n        overflowY: 'auto',\n        userSelect: 'none',\n        WebkitOverflowScrolling: 'touch',\n      },\n      isOnTop && [\n        {\n          position: 'absolute',\n        },\n        AnimationClassNames.slideRightIn40,\n      ],\n    ],\n    linkText: [\n      classNames.linkText,\n      {\n        margin: '0 4px',\n        overflow: 'hidden',\n        verticalAlign: 'middle',\n        textAlign: 'left',\n        textOverflow: 'ellipsis',\n      },\n    ],\n    compositeLink: [\n      classNames.compositeLink,\n      {\n        display: 'block',\n        position: 'relative',\n        color: semanticColors.bodyText,\n      },\n      isExpanded && 'is-expanded',\n      isSelected && 'is-selected',\n      isDisabled && 'is-disabled',\n      isDisabled && {\n        color: semanticColors.disabledText,\n      },\n    ],\n    link: [\n      classNames.link,\n      getFocusStyle(theme),\n      {\n        display: 'block',\n        position: 'relative',\n        height: navHeight,\n        width: '100%',\n        lineHeight: `${navHeight}px`,\n        textDecoration: 'none',\n        cursor: 'pointer',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        paddingLeft: leftPadding,\n        paddingRight: rightPadding,\n        color: semanticColors.bodyText,\n        selectors: {\n          [HighContrastSelector]: {\n            border: 0,\n            selectors: {\n              ':focus': {\n                border: '1px solid WindowText',\n              },\n            },\n          },\n        },\n      },\n      !isDisabled && {\n        selectors: {\n          '.ms-Nav-compositeLink:hover &': {\n            backgroundColor: semanticColors.bodyBackgroundHovered,\n          },\n        },\n      },\n      isSelected && {\n        color: semanticColors.bodyTextChecked,\n        fontWeight: FontWeights.semibold, // todo: get from theme\n        backgroundColor: semanticColors.bodyBackgroundChecked,\n        selectors: {\n          '&:after': {\n            borderLeft: `2px solid ${palette.themePrimary}`,\n            content: '\"\"',\n            position: 'absolute',\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0,\n            pointerEvents: 'none',\n          },\n        },\n      },\n      isDisabled && {\n        color: semanticColors.disabledText,\n      },\n      isButtonEntry && {\n        color: palette.themePrimary,\n      },\n    ],\n    chevronButton: [\n      classNames.chevronButton,\n      getFocusStyle(theme),\n      fonts.small,\n      {\n        display: 'block',\n        textAlign: 'left',\n        lineHeight: `${navHeight}px`,\n        margin: '5px 0',\n        padding: `0px, ${rightPadding}px, 0px, ${leftPaddingExpanded}px`,\n        border: 'none',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        cursor: 'pointer',\n        color: semanticColors.bodyText,\n        backgroundColor: 'transparent',\n        selectors: {\n          '&:visited': {\n            color: semanticColors.bodyText,\n          },\n        },\n      },\n      isGroup && {\n        fontSize: fonts.large.fontSize,\n        width: '100%',\n        height: navHeight,\n        borderBottom: `1px solid ${semanticColors.bodyDivider}`,\n      },\n      isLink && {\n        display: 'block',\n        width: leftPaddingExpanded - 2,\n        height: navHeight - 2,\n        position: 'absolute',\n        top: '1px',\n        left: `${position}px`,\n        zIndex: ZIndexes.Nav,\n        padding: 0,\n        margin: 0,\n      },\n      isSelected && {\n        color: palette.themePrimary,\n        backgroundColor: palette.neutralLighterAlt,\n        selectors: {\n          '&:after': {\n            borderLeft: `2px solid ${palette.themePrimary}`,\n            content: '\"\"',\n            position: 'absolute',\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0,\n            pointerEvents: 'none',\n          },\n        },\n      },\n    ],\n    chevronIcon: [\n      classNames.chevronIcon,\n      {\n        position: 'absolute',\n        left: '8px',\n        height: navHeight,\n        lineHeight: `${navHeight}px`,\n        fontSize: fonts.small.fontSize,\n        transition: 'transform .1s linear',\n      },\n      isExpanded && {\n        transform: 'rotate(-180deg)',\n      },\n      isLink && {\n        top: 0,\n      },\n    ],\n    navItem: [\n      classNames.navItem,\n      {\n        padding: 0,\n      },\n    ],\n    navItems: [\n      classNames.navItems,\n      {\n        listStyleType: 'none',\n        padding: 0,\n        margin: 0, // remove default <UL> styles\n      },\n    ],\n    group: [classNames.group, isExpanded && 'is-expanded'],\n    groupContent: [\n      classNames.groupContent,\n      {\n        display: 'none',\n        marginBottom: '40px',\n      },\n      AnimationClassNames.slideDownIn20,\n      isExpanded && {\n        display: 'block',\n      },\n    ],\n  };\n};\n"]},"metadata":{},"sourceType":"module"}