{"ast":null,"code":"import { isVirtualElement } from './isVirtualElement';\n/**\n * Gets the virtual parent given the child element, if it exists.\n *\n * @public\n */\n\nexport function getVirtualParent(child) {\n  var parent;\n\n  if (child && isVirtualElement(child)) {\n    parent = child._virtual.parent;\n  }\n\n  return parent;\n}","map":{"version":3,"mappings":"AAAA,SAASA,gBAAT,QAAiC,oBAAjC;AACA;;;;;;AAKA,OAAM,SAAUC,gBAAV,CAA2BC,KAA3B,EAA6C;EACjD,IAAIC,MAAJ;;EACA,IAAID,KAAK,IAAIF,gBAAgB,CAACE,KAAD,CAA7B,EAAsC;IACpCC,MAAM,GAAGD,KAAK,CAACE,QAAN,CAAeD,MAAxB;EACD;;EACD,OAAOA,MAAP;AACD","names":["isVirtualElement","getVirtualParent","child","parent","_virtual"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\office-ui-fabric-react\\node_modules\\@fluentui\\dom-utilities\\src\\getVirtualParent.ts"],"sourcesContent":["import { isVirtualElement } from './isVirtualElement';\n/**\n * Gets the virtual parent given the child element, if it exists.\n *\n * @public\n */\nexport function getVirtualParent(child: HTMLElement): HTMLElement | undefined {\n  let parent: HTMLElement | undefined;\n  if (child && isVirtualElement(child)) {\n    parent = child._virtual.parent;\n  }\n  return parent;\n}\n"]},"metadata":{},"sourceType":"module"}