{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { classNamesFunction, initializeComponentRef, KeyCodes } from '../../../Utilities';\nimport { CardCallout } from '../CardCallout/CardCallout';\nvar getClassNames = classNamesFunction();\n\nvar PlainCardBase =\n/** @class */\nfunction (_super) {\n  __extends(PlainCardBase, _super);\n\n  function PlainCardBase(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this._onKeyDown = function (ev) {\n      if (ev.which === KeyCodes.escape) {\n        _this.props.onLeave && _this.props.onLeave(ev);\n      }\n    };\n\n    initializeComponentRef(_this);\n    return _this;\n  }\n\n  PlainCardBase.prototype.render = function () {\n    var _a = this.props,\n        styles = _a.styles,\n        theme = _a.theme,\n        className = _a.className;\n    this._classNames = getClassNames(styles, {\n      theme: theme,\n      className: className\n    });\n    var content = React.createElement(\"div\", {\n      onMouseEnter: this.props.onEnter,\n      onMouseLeave: this.props.onLeave,\n      onKeyDown: this._onKeyDown\n    }, this.props.onRenderPlainCard(this.props.renderData));\n    return React.createElement(CardCallout, __assign({}, this.props, {\n      content: content,\n      className: this._classNames.root\n    }));\n  };\n\n  return PlainCardBase;\n}(React.Component);\n\nexport { PlainCardBase };","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SAASC,kBAAT,EAA6BC,sBAA7B,EAAqDC,QAArD,QAAqE,oBAArE;AAEA,SAASC,WAAT,QAA4B,4BAA5B;AAEA,IAAMC,aAAa,GAAGJ,kBAAkB,EAAxC;;AAEA;AAAA;AAAA;AAAmCK;;AAGjC,yBAAYC,KAAZ,EAAkC;AAAlC,gBACEC,kBAAMD,KAAN,KAAY,IADd;;AAuBQE,uBAAa,UAACC,EAAD,EAAqC;AACxD,UAAIA,EAAE,CAACC,KAAH,KAAaR,QAAQ,CAACS,MAA1B,EAAkC;AAChCH,aAAI,CAACF,KAAL,CAAWM,OAAX,IAAsBJ,KAAI,CAACF,KAAL,CAAWM,OAAX,CAAmBH,EAAnB,CAAtB;AACD;AACF,KAJO;;AApBNR,0BAAsB,CAACO,KAAD,CAAtB;;AACD;;AAEMK,mCAAP;AACQ;AAAA,QAAEC,kBAAF;AAAA,QAAUC,gBAAV;AAAA,QAAiBC,wBAAjB;AAEN,SAAKC,WAAL,GAAmBb,aAAa,CAACU,MAAD,EAAU;AACxCC,WAAK,EAAEA,KADiC;AAExCC,eAAS;AAF+B,KAAV,CAAhC;AAKA,QAAME,OAAO,GACXnB;AAAKoB,kBAAY,EAAE,KAAKb,KAAL,CAAWc,OAA9B;AAAuCC,kBAAY,EAAE,KAAKf,KAAL,CAAWM,OAAhE;AAAyEU,eAAS,EAAE,KAAKC;AAAzF,OACG,KAAKjB,KAAL,CAAWkB,iBAAX,CAA8B,KAAKlB,KAAL,CAAWmB,UAAzC,CADH,CADF;AAMA,WAAO1B,oBAACI,WAAD,EAAYuB,aAAK,KAAKpB,KAAV,EAAe;AAAEY,aAAO,EAAEA,OAAX;AAAoBF,eAAS,EAAE,KAAKC,WAAL,CAAiBU;AAAhD,KAAf,CAAZ,CAAP;AACD,GAfM;;AAsBT;AAAC,CA/BD,CAAmC5B,KAAK,CAAC6B,SAAzC","names":["React","classNamesFunction","initializeComponentRef","KeyCodes","CardCallout","getClassNames","__extends","props","_super","_this","ev","which","escape","onLeave","PlainCardBase","styles","theme","className","_classNames","content","onMouseEnter","onEnter","onMouseLeave","onKeyDown","_onKeyDown","onRenderPlainCard","renderData","__assign","root","Component"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\office-ui-fabric-react\\lib\\components\\HoverCard\\src\\components\\HoverCard\\PlainCard\\PlainCard.base.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { classNamesFunction, initializeComponentRef, KeyCodes } from '../../../Utilities';\nimport { IPlainCardProps, IPlainCardStyles, IPlainCardStyleProps } from './PlainCard.types';\nimport { CardCallout } from '../CardCallout/CardCallout';\n\nconst getClassNames = classNamesFunction<IPlainCardStyleProps, IPlainCardStyles>();\n\nexport class PlainCardBase extends React.Component<IPlainCardProps, {}> {\n  private _classNames: { [key in keyof IPlainCardStyles]: string };\n\n  constructor(props: IPlainCardProps) {\n    super(props);\n\n    initializeComponentRef(this);\n  }\n\n  public render(): JSX.Element {\n    const { styles, theme, className } = this.props;\n\n    this._classNames = getClassNames(styles!, {\n      theme: theme!,\n      className,\n    });\n\n    const content: JSX.Element = (\n      <div onMouseEnter={this.props.onEnter} onMouseLeave={this.props.onLeave} onKeyDown={this._onKeyDown}>\n        {this.props.onRenderPlainCard!(this.props.renderData)}\n      </div>\n    );\n\n    return <CardCallout {...this.props} content={content} className={this._classNames.root} />;\n  }\n\n  private _onKeyDown = (ev: React.KeyboardEvent<HTMLElement>): void => {\n    if (ev.which === KeyCodes.escape) {\n      this.props.onLeave && this.props.onLeave(ev);\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}