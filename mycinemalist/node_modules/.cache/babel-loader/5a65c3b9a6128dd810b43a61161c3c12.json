{"ast":null,"code":"import { extendComponent } from './extendComponent';\n/**\n * Helper to manage componentRef resolution. Internally appends logic to\n * lifetime methods to resolve componentRef to the passed in object.\n *\n * Usage: call initializeComponentRef(this) in the constructor,\n */\n\nexport function initializeComponentRef(obj) {\n  extendComponent(obj, {\n    componentDidMount: _onMount,\n    componentDidUpdate: _onUpdate,\n    componentWillUnmount: _onUnmount\n  });\n}\n\nfunction _onMount() {\n  _setComponentRef(this.props.componentRef, this);\n}\n\nfunction _onUpdate(prevProps) {\n  if (prevProps.componentRef !== this.props.componentRef) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    _setComponentRef(prevProps.componentRef, null);\n\n    _setComponentRef(this.props.componentRef, this);\n  }\n}\n\nfunction _onUnmount() {\n  _setComponentRef(this.props.componentRef, null);\n}\n\nfunction _setComponentRef(componentRef, value) {\n  if (componentRef) {\n    if (typeof componentRef === 'object') {\n      componentRef.current = value;\n    } else if (typeof componentRef === 'function') {\n      componentRef(value);\n    }\n  }\n}","map":{"version":3,"mappings":"AAEA,SAASA,eAAT,QAAgC,mBAAhC;AAEA;;;;;;;AAMA,OAAM,SAAUC,sBAAV,CAAoEC,GAApE,EAAwG;AAC5GF,iBAAe,CAACE,GAAD,EAAM;AACnBC,qBAAiB,EAAEC,QADA;AAEnBC,sBAAkB,EAAEC,SAFD;AAGnBC,wBAAoB,EAAEC;AAHH,GAAN,CAAf;AAKD;;AAED,SAASJ,QAAT,GAAiB;AACfK,kBAAgB,CAAC,KAAKC,KAAL,CAAWC,YAAZ,EAA0B,IAA1B,CAAhB;AACD;;AAED,SAASL,SAAT,CAAmBM,SAAnB,EAAwC;AACtC,MAAIA,SAAS,CAACD,YAAV,KAA2B,KAAKD,KAAL,CAAWC,YAA1C,EAAwD;AACtD;AACAF,oBAAgB,CAAEG,SAAiB,CAACD,YAApB,EAAkC,IAAlC,CAAhB;;AACAF,oBAAgB,CAAC,KAAKC,KAAL,CAAWC,YAAZ,EAA0B,IAA1B,CAAhB;AACD;AACF;;AAED,SAASH,UAAT,GAAmB;AACjBC,kBAAgB,CAAC,KAAKC,KAAL,CAAWC,YAAZ,EAA0B,IAA1B,CAAhB;AACD;;AAED,SAASF,gBAAT,CAAsCE,YAAtC,EAAiFE,KAAjF,EAAyG;AACvG,MAAIF,YAAJ,EAAkB;AAChB,QAAI,OAAOA,YAAP,KAAwB,QAA5B,EAAsC;AACnCA,kBAA+C,CAACG,OAAhD,GAA0DD,KAA1D;AACF,KAFD,MAEO,IAAI,OAAOF,YAAP,KAAwB,UAA5B,EAAwC;AAC5CA,kBAAyB,CAACE,KAAD,CAAzB;AACF;AACF;AACF","names":["extendComponent","initializeComponentRef","obj","componentDidMount","_onMount","componentDidUpdate","_onUpdate","componentWillUnmount","_onUnmount","_setComponentRef","props","componentRef","prevProps","value","current"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\@uifabric\\utilities\\src\\initializeComponentRef.ts"],"sourcesContent":["import * as React from 'react';\nimport { IBaseProps } from './BaseComponent.types';\nimport { extendComponent } from './extendComponent';\n\n/**\n * Helper to manage componentRef resolution. Internally appends logic to\n * lifetime methods to resolve componentRef to the passed in object.\n *\n * Usage: call initializeComponentRef(this) in the constructor,\n */\nexport function initializeComponentRef<TProps extends IBaseProps, TState>(obj: React.Component<TProps, TState>): void {\n  extendComponent(obj, {\n    componentDidMount: _onMount,\n    componentDidUpdate: _onUpdate,\n    componentWillUnmount: _onUnmount,\n  });\n}\n\nfunction _onMount(): void {\n  _setComponentRef(this.props.componentRef, this);\n}\n\nfunction _onUpdate(prevProps: IBaseProps): void {\n  if (prevProps.componentRef !== this.props.componentRef) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    _setComponentRef((prevProps as any).componentRef, null);\n    _setComponentRef(this.props.componentRef, this);\n  }\n}\n\nfunction _onUnmount(): void {\n  _setComponentRef(this.props.componentRef, null);\n}\n\nfunction _setComponentRef<TInterface>(componentRef: React.RefObject<TInterface>, value: TInterface | null): void {\n  if (componentRef) {\n    if (typeof componentRef === 'object') {\n      (componentRef as { current: TInterface | null }).current = value;\n    } else if (typeof componentRef === 'function') {\n      (componentRef as Function)(value);\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}