{"ast":null,"code":"import * as React from 'react';\nimport { styled, classNamesFunction } from '../../../Utilities';\nimport { IconButton } from '../../../Button';\nimport { getStyles } from './TagItem.styles';\nvar getClassNames = classNamesFunction();\n/**\n * {@docCategory TagPicker}\n */\n\nexport var TagItemBase = function (props) {\n  var theme = props.theme,\n      styles = props.styles,\n      selected = props.selected,\n      disabled = props.disabled,\n      enableTagFocusInDisabledPicker = props.enableTagFocusInDisabledPicker,\n      children = props.children,\n      className = props.className,\n      index = props.index,\n      onRemoveItem = props.onRemoveItem,\n      removeButtonAriaLabel = props.removeButtonAriaLabel,\n      _a = props.title,\n      title = _a === void 0 ? typeof props.children === 'string' ? props.children : props.item.name : _a;\n  var classNames = getClassNames(styles, {\n    theme: theme,\n    className: className,\n    selected: selected,\n    disabled: disabled\n  });\n  return React.createElement(\"div\", {\n    className: classNames.root,\n    role: 'listitem',\n    key: index,\n    \"data-selection-index\": index,\n    \"data-is-focusable\": (enableTagFocusInDisabledPicker || !disabled) && true\n  }, React.createElement(\"span\", {\n    className: classNames.text,\n    \"aria-label\": title,\n    title: title\n  }, children), React.createElement(IconButton, {\n    onClick: onRemoveItem,\n    disabled: disabled,\n    iconProps: {\n      iconName: 'Cancel',\n      styles: {\n        root: {\n          fontSize: '12px'\n        }\n      }\n    },\n    className: classNames.close,\n    ariaLabel: removeButtonAriaLabel\n  }));\n};\nexport var TagItem = styled(TagItemBase, getStyles, undefined, {\n  scope: 'TagItem'\n});","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SAASC,MAAT,EAAiBC,kBAAjB,QAA2C,oBAA3C;AACA,SAASC,UAAT,QAA2B,iBAA3B;AAGA,SAASC,SAAT,QAA0B,kBAA1B;AAEA,IAAMC,aAAa,GAAGH,kBAAkB,EAAxC;AAEA;;;;AAGA,OAAO,IAAMI,WAAW,GAAG,UAACC,KAAD,EAAqB;EAE5C;EAAA,IACAC,qBADA;EAAA,IAEAC,yBAFA;EAAA,IAGAC,yBAHA;EAAA,IAIAC,qEAJA;EAAA,IAKAC,yBALA;EAAA,IAMAC,2BANA;EAAA,IAOAC,mBAPA;EAAA,IAQAC,iCARA;EAAA,IASAC,mDATA;EAAA,IAUAC,gBAVA;EAAA,IAUAC,kGAVA;EAaF,IAAMC,UAAU,GAAGd,aAAa,CAACG,MAAD,EAAS;IACvCY,KAAK,EAAEA,KADgC;IAEvCP,SAAS,WAF8B;IAGvCJ,QAAQ,UAH+B;IAIvCC,QAAQ;EAJ+B,CAAT,CAAhC;EAOA,OACEV;IACEa,SAAS,EAAEM,UAAU,CAACE,IADxB;IAEEC,IAAI,EAAE,UAFR;IAGEC,GAAG,EAAET,KAHP;IAGY,wBACYA,KAJxB;IAI6B,qBACR,CAACH,8BAA8B,IAAI,CAACD,QAApC,KAAiD;EALtE,GAOEV;IAAMa,SAAS,EAAEM,UAAU,CAACK,IAA5B;IAAgC,cAAcN,KAA9C;IAAqDA,KAAK,EAAEA;EAA5D,GACGN,QADH,CAPF,EAUEZ,oBAACG,UAAD,EAAW;IACTsB,OAAO,EAAEV,YADA;IAETL,QAAQ,EAAEA,QAFD;IAGTgB,SAAS,EAAE;MAAEC,QAAQ,EAAE,QAAZ;MAAsBnB,MAAM,EAAE;QAAEa,IAAI,EAAE;UAAEO,QAAQ,EAAE;QAAZ;MAAR;IAA9B,CAHF;IAITf,SAAS,EAAEM,UAAU,CAACU,KAJb;IAKTC,SAAS,EAAEd;EALF,CAAX,CAVF,CADF;AAoBD,CA1CM;AA4CP,OAAO,IAAMe,OAAO,GAAG9B,MAAM,CAAoDK,WAApD,EAAiEF,SAAjE,EAA4E4B,SAA5E,EAAuF;EAClHC,KAAK,EAAE;AAD2G,CAAvF,CAAtB","names":["React","styled","classNamesFunction","IconButton","getStyles","getClassNames","TagItemBase","props","styles","selected","disabled","enableTagFocusInDisabledPicker","children","className","index","onRemoveItem","removeButtonAriaLabel","_a","title","classNames","theme","root","role","key","text","onClick","iconProps","iconName","fontSize","close","ariaLabel","TagItem","undefined","scope"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\office-ui-fabric-react\\lib\\components\\pickers\\src\\components\\pickers\\TagPicker\\TagItem.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { styled, classNamesFunction } from '../../../Utilities';\nimport { IconButton } from '../../../Button';\n\nimport { ITagItemProps, ITagItemStyleProps, ITagItemStyles } from './TagPicker.types';\nimport { getStyles } from './TagItem.styles';\n\nconst getClassNames = classNamesFunction<ITagItemStyleProps, ITagItemStyles>();\n\n/**\n * {@docCategory TagPicker}\n */\nexport const TagItemBase = (props: ITagItemProps) => {\n  const {\n    theme,\n    styles,\n    selected,\n    disabled,\n    enableTagFocusInDisabledPicker,\n    children,\n    className,\n    index,\n    onRemoveItem,\n    removeButtonAriaLabel,\n    title = typeof props.children === 'string' ? props.children : props.item.name,\n  } = props;\n\n  const classNames = getClassNames(styles, {\n    theme: theme!,\n    className,\n    selected,\n    disabled,\n  });\n\n  return (\n    <div\n      className={classNames.root}\n      role={'listitem'}\n      key={index}\n      data-selection-index={index}\n      data-is-focusable={(enableTagFocusInDisabledPicker || !disabled) && true}\n    >\n      <span className={classNames.text} aria-label={title} title={title}>\n        {children}\n      </span>\n      <IconButton\n        onClick={onRemoveItem}\n        disabled={disabled}\n        iconProps={{ iconName: 'Cancel', styles: { root: { fontSize: '12px' } } }}\n        className={classNames.close}\n        ariaLabel={removeButtonAriaLabel}\n      />\n    </div>\n  );\n};\n\nexport const TagItem = styled<ITagItemProps, ITagItemStyleProps, ITagItemStyles>(TagItemBase, getStyles, undefined, {\n  scope: 'TagItem',\n});\n"]},"metadata":{},"sourceType":"module"}