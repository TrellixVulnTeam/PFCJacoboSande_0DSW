{"ast":null,"code":"import { AnimationVariables, getGlobalClassNames, ZIndexes } from '../../Styling';\nexport var animationDuration = AnimationVariables.durationValue2;\nvar globalClassNames = {\n  root: 'ms-Modal',\n  main: 'ms-Dialog-main',\n  scrollableContent: 'ms-Modal-scrollableContent',\n  isOpen: 'is-open',\n  layer: 'ms-Modal-Layer'\n};\nexport var getStyles = function (props) {\n  var _a;\n\n  var className = props.className,\n      containerClassName = props.containerClassName,\n      scrollableContentClassName = props.scrollableContentClassName,\n      isOpen = props.isOpen,\n      isVisible = props.isVisible,\n      hasBeenOpened = props.hasBeenOpened,\n      modalRectangleTop = props.modalRectangleTop,\n      theme = props.theme,\n      topOffsetFixed = props.topOffsetFixed,\n      isModeless = props.isModeless,\n      layerClassName = props.layerClassName,\n      isDefaultDragHandle = props.isDefaultDragHandle;\n  var palette = theme.palette,\n      effects = theme.effects,\n      fonts = theme.fonts;\n  var classNames = getGlobalClassNames(globalClassNames, theme);\n  return {\n    root: [classNames.root, fonts.medium, {\n      backgroundColor: 'transparent',\n      position: isModeless ? 'absolute' : 'fixed',\n      height: '100%',\n      width: '100%',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      opacity: 0,\n      pointerEvents: 'none',\n      transition: \"opacity \" + animationDuration\n    }, topOffsetFixed && hasBeenOpened && {\n      alignItems: 'flex-start'\n    }, isOpen && classNames.isOpen, isVisible && {\n      opacity: 1,\n      pointerEvents: 'auto'\n    }, className],\n    main: [classNames.main, {\n      boxShadow: effects.elevation64,\n      borderRadius: effects.roundedCorner2,\n      backgroundColor: palette.white,\n      boxSizing: 'border-box',\n      position: 'relative',\n      textAlign: 'left',\n      outline: '3px solid transparent',\n      maxHeight: 'calc(100% - 32px)',\n      maxWidth: 'calc(100% - 32px)',\n      minHeight: '176px',\n      minWidth: '288px',\n      overflowY: 'auto',\n      zIndex: isModeless ? ZIndexes.Layer : undefined\n    }, topOffsetFixed && hasBeenOpened && {\n      top: modalRectangleTop\n    }, isDefaultDragHandle && {\n      cursor: 'move'\n    }, containerClassName],\n    scrollableContent: [classNames.scrollableContent, {\n      overflowY: 'auto',\n      flexGrow: 1,\n      maxHeight: '100vh',\n      selectors: (_a = {}, _a['@supports (-webkit-overflow-scrolling: touch)'] = {\n        maxHeight: window.innerHeight\n      }, _a)\n    }, scrollableContentClassName],\n    layer: isModeless && [layerClassName, classNames.layer, {\n      position: 'static',\n      width: 'unset',\n      height: 'unset'\n    }],\n    keyboardMoveIconContainer: {\n      position: 'absolute',\n      display: 'flex',\n      justifyContent: 'center',\n      width: '100%',\n      padding: '3px 0px'\n    },\n    keyboardMoveIcon: {\n      // eslint-disable-next-line deprecation/deprecation\n      fontSize: fonts.xLargePlus.fontSize,\n      width: '24px'\n    }\n  };\n};","map":{"version":3,"mappings":"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","names":["AnimationVariables","getGlobalClassNames","ZIndexes","animationDuration","durationValue2","globalClassNames","root","main","scrollableContent","isOpen","layer","getStyles","props","containerClassName","scrollableContentClassName","isVisible","hasBeenOpened","modalRectangleTop","theme","topOffsetFixed","isModeless","layerClassName","isDefaultDragHandle","effects","fonts","classNames","medium","backgroundColor","position","height","width","display","alignItems","justifyContent","opacity","pointerEvents","transition","className","boxShadow","elevation64","borderRadius","roundedCorner2","palette","white","boxSizing","textAlign","outline","maxHeight","maxWidth","minHeight","minWidth","overflowY","zIndex","Layer","undefined","top","cursor","flexGrow","selectors","_a","window","innerHeight","keyboardMoveIconContainer","padding","keyboardMoveIcon","fontSize","xLargePlus"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\office-ui-fabric-react\\lib\\components\\src\\components\\Modal\\Modal.styles.ts"],"sourcesContent":["import { IModalStyleProps, IModalStyles } from './Modal.types';\nimport { AnimationVariables, getGlobalClassNames, ZIndexes } from '../../Styling';\n\nexport const animationDuration = AnimationVariables.durationValue2;\n\nconst globalClassNames = {\n  root: 'ms-Modal',\n  main: 'ms-Dialog-main',\n  scrollableContent: 'ms-Modal-scrollableContent',\n  isOpen: 'is-open',\n  layer: 'ms-Modal-Layer',\n};\n\nexport const getStyles = (props: IModalStyleProps): IModalStyles => {\n  const {\n    className,\n    containerClassName,\n    scrollableContentClassName,\n    isOpen,\n    isVisible,\n    hasBeenOpened,\n    modalRectangleTop,\n    theme,\n    topOffsetFixed,\n    isModeless,\n    layerClassName,\n    isDefaultDragHandle,\n  } = props;\n  const { palette, effects, fonts } = theme;\n\n  const classNames = getGlobalClassNames(globalClassNames, theme);\n\n  return {\n    root: [\n      classNames.root,\n      fonts.medium,\n      {\n        backgroundColor: 'transparent',\n        position: isModeless ? 'absolute' : 'fixed',\n        height: '100%',\n        width: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        opacity: 0,\n        pointerEvents: 'none',\n        transition: `opacity ${animationDuration}`,\n      },\n      topOffsetFixed &&\n        hasBeenOpened && {\n          alignItems: 'flex-start',\n        },\n      isOpen && classNames.isOpen,\n      isVisible && {\n        opacity: 1,\n        pointerEvents: 'auto',\n      },\n      className,\n    ],\n    main: [\n      classNames.main,\n      {\n        boxShadow: effects.elevation64,\n        borderRadius: effects.roundedCorner2,\n        backgroundColor: palette.white,\n        boxSizing: 'border-box',\n        position: 'relative',\n        textAlign: 'left',\n        outline: '3px solid transparent',\n        maxHeight: 'calc(100% - 32px)',\n        maxWidth: 'calc(100% - 32px)',\n        minHeight: '176px',\n        minWidth: '288px',\n        overflowY: 'auto',\n        zIndex: isModeless ? ZIndexes.Layer : undefined,\n      },\n      topOffsetFixed &&\n        hasBeenOpened && {\n          top: modalRectangleTop,\n        },\n      isDefaultDragHandle && {\n        cursor: 'move',\n      },\n      containerClassName,\n    ],\n    scrollableContent: [\n      classNames.scrollableContent,\n      {\n        overflowY: 'auto',\n        flexGrow: 1,\n        maxHeight: '100vh',\n        selectors: {\n          ['@supports (-webkit-overflow-scrolling: touch)']: {\n            maxHeight: window.innerHeight,\n          },\n        },\n      },\n      scrollableContentClassName,\n    ],\n    layer: isModeless && [\n      layerClassName,\n      classNames.layer,\n      {\n        position: 'static',\n        width: 'unset',\n        height: 'unset',\n      },\n    ],\n    keyboardMoveIconContainer: {\n      position: 'absolute',\n      display: 'flex',\n      justifyContent: 'center',\n      width: '100%',\n      padding: '3px 0px',\n    },\n    keyboardMoveIcon: {\n      // eslint-disable-next-line deprecation/deprecation\n      fontSize: fonts.xLargePlus.fontSize,\n      width: '24px',\n    },\n  };\n};\n"]},"metadata":{},"sourceType":"module"}