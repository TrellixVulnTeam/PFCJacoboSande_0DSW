{"ast":null,"code":"import { __assign, __extends } from \"tslib\"; // Utilities\n\nimport * as React from 'react';\nimport { classNamesFunction, elementContains, focusFirstChild, getDocument, KeyCodes, shallowCompare, getRTL, warnDeprecations, EventGroup, Async, initializeComponentRef } from '../../Utilities';\nimport { RectangleEdge, getOppositeEdge } from '../../utilities/positioning'; // Component Dependencies\n\nimport { PositioningContainer } from './PositioningContainer/index';\nimport { Beak, BEAK_HEIGHT, BEAK_WIDTH } from './Beak/Beak';\nimport { DirectionalHint } from '../../common/DirectionalHint';\nimport { COACHMARK_HEIGHT, COACHMARK_WIDTH } from './Coachmark.styles';\nimport { FocusTrapZone } from '../../FocusTrapZone';\nvar getClassNames = classNamesFunction();\nexport var COACHMARK_ATTRIBUTE_NAME = 'data-coachmarkid';\nvar COMPONENT_NAME = 'Coachmark';\n\nvar CoachmarkBase =\n/** @class */\nfunction (_super) {\n  __extends(CoachmarkBase, _super);\n\n  function CoachmarkBase(props) {\n    var _this = _super.call(this, props) || this;\n    /**\n     * The cached HTMLElement reference to the Entity Inner Host\n     * element.\n     */\n\n\n    _this._entityHost = React.createRef();\n    _this._entityInnerHostElement = React.createRef();\n    _this._translateAnimationContainer = React.createRef();\n    _this._ariaAlertContainer = React.createRef();\n    _this._childrenContainer = React.createRef();\n    _this._positioningContainer = React.createRef();\n\n    _this.dismiss = function (ev) {\n      var onDismiss = _this.props.onDismiss;\n\n      if (onDismiss) {\n        onDismiss(ev);\n      }\n    };\n\n    _this._onKeyDown = function (e) {\n      // Open coachmark if user presses ALT + C (arbitrary keypress for now)\n      if (e.altKey && e.which === KeyCodes.c || e.which === KeyCodes.enter && _this._translateAnimationContainer.current && _this._translateAnimationContainer.current.contains(e.target)) {\n        _this._onFocusHandler();\n      }\n    };\n\n    _this._onFocusHandler = function () {\n      if (_this.state.isCollapsed) {\n        _this._openCoachmark();\n      }\n    };\n\n    _this._onPositioned = function (positionData) {\n      _this._async.requestAnimationFrame(function () {\n        _this.setState({\n          targetAlignment: positionData.alignmentEdge,\n          targetPosition: positionData.targetEdge\n        });\n      });\n    };\n\n    _this._setBeakPosition = function () {\n      var beakLeft;\n      var beakTop;\n      var beakRight;\n      var beakBottom;\n      var transformOriginX;\n      var transformOriginY;\n      var targetAlignment = _this.state.targetAlignment;\n      var distanceAdjustment = '3px'; // Adjustment distance for Beak to shift towards Coachmark bubble.\n\n      switch (_this._beakDirection) {\n        // If Beak is pointing Up or Down\n        case RectangleEdge.top:\n        case RectangleEdge.bottom:\n          // If there is no target alignment, then beak is X-axis centered in callout\n          if (!targetAlignment) {\n            beakLeft = \"calc(50% - \" + BEAK_WIDTH / 2 + \"px)\";\n            transformOriginX = 'center';\n          } else {\n            // Beak is aligned to the left of target\n            if (targetAlignment === RectangleEdge.left) {\n              beakLeft = COACHMARK_WIDTH / 2 - BEAK_WIDTH / 2 + \"px\";\n              transformOriginX = 'left';\n            } else {\n              // Beak is aligned to the right of target\n              beakRight = COACHMARK_WIDTH / 2 - BEAK_WIDTH / 2 + \"px\";\n              transformOriginX = 'right';\n            }\n          }\n\n          if (_this._beakDirection === RectangleEdge.top) {\n            beakTop = distanceAdjustment;\n            transformOriginY = 'top';\n          } else {\n            beakBottom = distanceAdjustment;\n            transformOriginY = 'bottom';\n          }\n\n          break;\n        // If Beak is pointing Left or Right\n\n        case RectangleEdge.left:\n        case RectangleEdge.right:\n          // If there is no target alignment, then beak is Y-axis centered in callout\n          if (!targetAlignment) {\n            beakTop = \"calc(50% - \" + BEAK_WIDTH / 2 + \"px)\";\n            transformOriginY = \"center\";\n          } else {\n            // Beak is aligned to the top of target\n            if (targetAlignment === RectangleEdge.top) {\n              beakTop = COACHMARK_WIDTH / 2 - BEAK_WIDTH / 2 + \"px\";\n              transformOriginY = \"top\";\n            } else {\n              // Beak is aligned to the bottom of target\n              beakBottom = COACHMARK_WIDTH / 2 - BEAK_WIDTH / 2 + \"px\";\n              transformOriginY = \"bottom\";\n            }\n          }\n\n          if (_this._beakDirection === RectangleEdge.left) {\n            if (getRTL(_this.props.theme)) {\n              beakRight = distanceAdjustment;\n            } else {\n              beakLeft = distanceAdjustment;\n            }\n\n            transformOriginX = 'left';\n          } else {\n            if (getRTL(_this.props.theme)) {\n              beakLeft = distanceAdjustment;\n            } else {\n              beakRight = distanceAdjustment;\n            }\n\n            transformOriginX = 'right';\n          }\n\n          break;\n      }\n\n      _this.setState({\n        beakLeft: beakLeft,\n        beakRight: beakRight,\n        beakBottom: beakBottom,\n        beakTop: beakTop,\n        transformOrigin: transformOriginX + \" \" + transformOriginY\n      });\n    };\n\n    _this._openCoachmark = function () {\n      _this.setState({\n        isCollapsed: false\n      });\n\n      if (_this.props.onAnimationOpenStart) {\n        _this.props.onAnimationOpenStart();\n      }\n\n      _this._entityInnerHostElement.current && _this._entityInnerHostElement.current.addEventListener('transitionend', function () {\n        // Need setTimeout to trigger narrator\n        _this._async.setTimeout(function () {\n          if (_this._entityInnerHostElement.current) {\n            focusFirstChild(_this._entityInnerHostElement.current);\n          }\n        }, 1000);\n\n        if (_this.props.onAnimationOpenEnd) {\n          _this.props.onAnimationOpenEnd();\n        }\n      });\n    };\n\n    _this._async = new Async(_this);\n    _this._events = new EventGroup(_this);\n    initializeComponentRef(_this);\n    warnDeprecations(COMPONENT_NAME, props, {\n      teachingBubbleRef: undefined,\n      collapsed: 'isCollapsed',\n      beakWidth: undefined,\n      beakHeight: undefined,\n      width: undefined,\n      height: undefined\n    }); // Set defaults for state\n\n    _this.state = {\n      isCollapsed: props.isCollapsed,\n      isBeaconAnimating: true,\n      isMeasuring: true,\n      entityInnerHostRect: {\n        width: 0,\n        height: 0\n      },\n      isMouseInProximity: false,\n      isMeasured: false\n    };\n    return _this;\n  }\n\n  Object.defineProperty(CoachmarkBase.prototype, \"_beakDirection\", {\n    get: function () {\n      var targetPosition = this.state.targetPosition;\n\n      if (targetPosition === undefined) {\n        return RectangleEdge.bottom;\n      }\n\n      return getOppositeEdge(targetPosition);\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  CoachmarkBase.prototype.render = function () {\n    var _a = this.props,\n        beaconColorOne = _a.beaconColorOne,\n        beaconColorTwo = _a.beaconColorTwo,\n        children = _a.children,\n        target = _a.target,\n        color = _a.color,\n        positioningContainerProps = _a.positioningContainerProps,\n        ariaDescribedBy = _a.ariaDescribedBy,\n        ariaDescribedByText = _a.ariaDescribedByText,\n        ariaLabelledBy = _a.ariaLabelledBy,\n        ariaLabelledByText = _a.ariaLabelledByText,\n        ariaAlertText = _a.ariaAlertText,\n        delayBeforeCoachmarkAnimation = _a.delayBeforeCoachmarkAnimation,\n        styles = _a.styles,\n        theme = _a.theme,\n        className = _a.className,\n        persistentBeak = _a.persistentBeak;\n    var _b = this.state,\n        beakLeft = _b.beakLeft,\n        beakTop = _b.beakTop,\n        beakRight = _b.beakRight,\n        beakBottom = _b.beakBottom,\n        isCollapsed = _b.isCollapsed,\n        isBeaconAnimating = _b.isBeaconAnimating,\n        isMeasuring = _b.isMeasuring,\n        entityInnerHostRect = _b.entityInnerHostRect,\n        transformOrigin = _b.transformOrigin,\n        alertText = _b.alertText,\n        isMeasured = _b.isMeasured; // Defaulting the main background before passing it to the styles because it is used for `Beak` too.\n\n    var defaultColor = color;\n\n    if (!defaultColor && theme) {\n      defaultColor = theme.semanticColors.primaryButtonBackground;\n    }\n\n    var classNames = getClassNames(styles, {\n      theme: theme,\n      beaconColorOne: beaconColorOne,\n      beaconColorTwo: beaconColorTwo,\n      className: className,\n      isCollapsed: isCollapsed,\n      isBeaconAnimating: isBeaconAnimating,\n      isMeasuring: isMeasuring,\n      color: defaultColor,\n      transformOrigin: transformOrigin,\n      isMeasured: isMeasured,\n      entityHostHeight: entityInnerHostRect.height + \"px\",\n      entityHostWidth: entityInnerHostRect.width + \"px\",\n      width: COACHMARK_WIDTH + \"px\",\n      height: COACHMARK_HEIGHT + \"px\",\n      delayBeforeCoachmarkAnimation: delayBeforeCoachmarkAnimation + \"ms\"\n    });\n    var finalHeight = isCollapsed ? COACHMARK_HEIGHT : entityInnerHostRect.height;\n    return React.createElement(PositioningContainer, __assign({\n      target: target,\n      offsetFromTarget: BEAK_HEIGHT,\n      componentRef: this._positioningContainer,\n      finalHeight: finalHeight,\n      onPositioned: this._onPositioned,\n      bounds: this._getBounds()\n    }, positioningContainerProps), React.createElement(\"div\", {\n      className: classNames.root\n    }, ariaAlertText && React.createElement(\"div\", {\n      className: classNames.ariaContainer,\n      role: \"alert\",\n      ref: this._ariaAlertContainer,\n      \"aria-hidden\": !isCollapsed\n    }, alertText), React.createElement(\"div\", {\n      className: classNames.pulsingBeacon\n    }), React.createElement(\"div\", {\n      className: classNames.translateAnimationContainer,\n      ref: this._translateAnimationContainer\n    }, React.createElement(\"div\", {\n      className: classNames.scaleAnimationLayer\n    }, React.createElement(\"div\", {\n      className: classNames.rotateAnimationLayer\n    }, this._positioningContainer.current && (isCollapsed || persistentBeak) && React.createElement(Beak, {\n      left: beakLeft,\n      top: beakTop,\n      right: beakRight,\n      bottom: beakBottom,\n      direction: this._beakDirection,\n      color: defaultColor\n    }), React.createElement(\"div\", {\n      className: classNames.entityHost,\n      ref: this._entityHost,\n      tabIndex: -1,\n      \"data-is-focusable\": true,\n      role: \"dialog\",\n      \"aria-labelledby\": ariaLabelledBy,\n      \"aria-describedby\": ariaDescribedBy\n    }, isCollapsed && [ariaLabelledBy && React.createElement(\"p\", {\n      id: ariaLabelledBy,\n      key: 0,\n      className: classNames.ariaContainer\n    }, ariaLabelledByText), ariaDescribedBy && React.createElement(\"p\", {\n      id: ariaDescribedBy,\n      key: 1,\n      className: classNames.ariaContainer\n    }, ariaDescribedByText)], React.createElement(FocusTrapZone, {\n      isClickableOutsideFocusTrap: true,\n      forceFocusInsideTrap: false\n    }, React.createElement(\"div\", {\n      className: classNames.entityInnerHost,\n      ref: this._entityInnerHostElement\n    }, React.createElement(\"div\", {\n      className: classNames.childrenContainer,\n      ref: this._childrenContainer,\n      \"aria-hidden\": isCollapsed\n    }, children)))))))));\n  };\n\n  CoachmarkBase.prototype.UNSAFE_componentWillReceiveProps = function (newProps) {\n    if (this.props.isCollapsed && !newProps.isCollapsed) {\n      // The coachmark is about to open\n      this._openCoachmark();\n    }\n  };\n\n  CoachmarkBase.prototype.shouldComponentUpdate = function (newProps, newState) {\n    return !shallowCompare(newProps, this.props) || !shallowCompare(newState, this.state);\n  };\n\n  CoachmarkBase.prototype.componentDidUpdate = function (prevProps, prevState) {\n    if (prevState.targetAlignment !== this.state.targetAlignment || prevState.targetPosition !== this.state.targetPosition) {\n      this._setBeakPosition();\n    }\n\n    if (prevProps.preventDismissOnLostFocus !== this.props.preventDismissOnLostFocus) {\n      this._addListeners();\n    }\n  };\n\n  CoachmarkBase.prototype.componentDidMount = function () {\n    var _this = this;\n\n    this._async.requestAnimationFrame(function () {\n      if (_this._entityInnerHostElement.current && _this.state.entityInnerHostRect.width + _this.state.entityInnerHostRect.width === 0) {\n        _this.setState({\n          isMeasuring: false,\n          entityInnerHostRect: {\n            width: _this._entityInnerHostElement.current.offsetWidth,\n            height: _this._entityInnerHostElement.current.offsetHeight\n          },\n          isMeasured: true\n        });\n\n        _this._setBeakPosition();\n\n        _this.forceUpdate();\n      }\n\n      _this._addListeners(); // We don't want to the user to immediately trigger the Coachmark when it's opened\n\n\n      _this._async.setTimeout(function () {\n        _this._addProximityHandler(_this.props.mouseProximityOffset);\n      }, _this.props.delayBeforeMouseOpen); // Need to add setTimeout to have narrator read change in alert container\n\n\n      if (_this.props.ariaAlertText) {\n        _this._async.setTimeout(function () {\n          if (_this.props.ariaAlertText && _this._ariaAlertContainer.current) {\n            _this.setState({\n              alertText: _this.props.ariaAlertText\n            });\n          }\n        }, 0);\n      }\n\n      if (!_this.props.preventFocusOnMount) {\n        _this._async.setTimeout(function () {\n          if (_this._entityHost.current) {\n            _this._entityHost.current.focus();\n          }\n        }, 1000);\n      }\n    });\n  };\n\n  CoachmarkBase.prototype.componentWillUnmount = function () {\n    this._async.dispose();\n\n    this._events.dispose();\n  };\n\n  CoachmarkBase.prototype._addListeners = function () {\n    var preventDismissOnLostFocus = this.props.preventDismissOnLostFocus;\n    var currentDoc = getDocument();\n\n    this._events.off();\n\n    if (currentDoc) {\n      this._events.on(currentDoc, 'keydown', this._onKeyDown, true);\n\n      if (!preventDismissOnLostFocus) {\n        this._events.on(currentDoc, 'click', this._dismissOnLostFocus, true);\n\n        this._events.on(currentDoc, 'focus', this._dismissOnLostFocus, true);\n      }\n    }\n  };\n\n  CoachmarkBase.prototype._dismissOnLostFocus = function (ev) {\n    var clickTarget = ev.target;\n    var clickedOutsideCallout = this._translateAnimationContainer.current && !elementContains(this._translateAnimationContainer.current, clickTarget);\n    var target = this.props.target;\n\n    if (clickedOutsideCallout && clickTarget !== target && !elementContains(target, clickTarget)) {\n      this.dismiss(ev);\n    }\n  };\n\n  CoachmarkBase.prototype._getBounds = function () {\n    var _a = this.props,\n        isPositionForced = _a.isPositionForced,\n        positioningContainerProps = _a.positioningContainerProps;\n\n    if (isPositionForced) {\n      // If directionalHint direction is the top or bottom auto edge, then we want to set the left/right bounds\n      // to the window x-axis to have auto positioning work correctly.\n      if (positioningContainerProps && (positioningContainerProps.directionalHint === DirectionalHint.topAutoEdge || positioningContainerProps.directionalHint === DirectionalHint.bottomAutoEdge)) {\n        return {\n          left: 0,\n          top: -Infinity,\n          bottom: Infinity,\n          right: window.innerWidth,\n          width: window.innerWidth,\n          height: Infinity\n        };\n      } else {\n        return {\n          left: -Infinity,\n          top: -Infinity,\n          bottom: Infinity,\n          right: Infinity,\n          width: Infinity,\n          height: Infinity\n        };\n      }\n    } else {\n      return undefined;\n    }\n  };\n\n  CoachmarkBase.prototype._addProximityHandler = function (mouseProximityOffset) {\n    var _this = this;\n\n    if (mouseProximityOffset === void 0) {\n      mouseProximityOffset = 0;\n    }\n    /**\n     * An array of cached ids returned when setTimeout runs during\n     * the window resize event trigger.\n     */\n\n\n    var timeoutIds = []; // Take the initial measure out of the initial render to prevent\n    // an unnecessary render.\n\n    this._async.setTimeout(function () {\n      _this._setTargetElementRect(); // When the window resizes we want to async\n      // get the bounding client rectangle.\n      // Every time the event is triggered we want to\n      // setTimeout and then clear any previous instances\n      // of setTimeout.\n\n\n      _this._events.on(window, 'resize', function () {\n        timeoutIds.forEach(function (value) {\n          clearInterval(value);\n        });\n        timeoutIds.push(_this._async.setTimeout(function () {\n          _this._setTargetElementRect();\n        }, 100));\n      });\n    }, 10); // Every time the document's mouse move is triggered\n    // we want to check if inside of an element and\n    // set the state with the result.\n\n\n    this._events.on(document, 'mousemove', function (e) {\n      if (_this.state.isCollapsed) {\n        var mouseY = e.clientY;\n        var mouseX = e.clientX;\n\n        _this._setTargetElementRect();\n\n        var isMouseInProximity = _this._isInsideElement(mouseX, mouseY, mouseProximityOffset);\n\n        if (isMouseInProximity !== _this.state.isMouseInProximity) {\n          _this._openCoachmark();\n        }\n      }\n\n      if (_this.props.onMouseMove) {\n        _this.props.onMouseMove(e);\n      }\n    });\n  };\n\n  CoachmarkBase.prototype._setTargetElementRect = function () {\n    if (this._translateAnimationContainer && this._translateAnimationContainer.current) {\n      this._targetElementRect = this._translateAnimationContainer.current.getBoundingClientRect();\n    }\n  };\n\n  CoachmarkBase.prototype._isInsideElement = function (mouseX, mouseY, mouseProximityOffset) {\n    if (mouseProximityOffset === void 0) {\n      mouseProximityOffset = 0;\n    }\n\n    return mouseX > this._targetElementRect.left - mouseProximityOffset && mouseX < this._targetElementRect.left + this._targetElementRect.width + mouseProximityOffset && mouseY > this._targetElementRect.top - mouseProximityOffset && mouseY < this._targetElementRect.top + this._targetElementRect.height + mouseProximityOffset;\n  };\n\n  CoachmarkBase.defaultProps = {\n    isCollapsed: true,\n    mouseProximityOffset: 10,\n    delayBeforeMouseOpen: 3600,\n    delayBeforeCoachmarkAnimation: 0,\n    isPositionForced: true,\n    positioningContainerProps: {\n      directionalHint: DirectionalHint.bottomAutoEdge\n    }\n  };\n  return CoachmarkBase;\n}(React.Component);\n\nexport { CoachmarkBase };","map":{"version":3,"mappings":"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","names":["React","classNamesFunction","elementContains","focusFirstChild","getDocument","KeyCodes","shallowCompare","getRTL","warnDeprecations","EventGroup","Async","initializeComponentRef","RectangleEdge","getOppositeEdge","PositioningContainer","Beak","BEAK_HEIGHT","BEAK_WIDTH","DirectionalHint","COACHMARK_HEIGHT","COACHMARK_WIDTH","FocusTrapZone","getClassNames","COACHMARK_ATTRIBUTE_NAME","COMPONENT_NAME","__extends","props","_super","_this","createRef","ev","onDismiss","e","altKey","which","c","enter","_translateAnimationContainer","current","contains","target","_onFocusHandler","state","isCollapsed","_openCoachmark","positionData","_async","requestAnimationFrame","setState","targetAlignment","alignmentEdge","targetPosition","targetEdge","beakLeft","beakTop","beakRight","beakBottom","transformOriginX","transformOriginY","distanceAdjustment","_beakDirection","top","bottom","left","right","theme","transformOrigin","onAnimationOpenStart","_entityInnerHostElement","addEventListener","setTimeout","onAnimationOpenEnd","_events","teachingBubbleRef","undefined","collapsed","beakWidth","beakHeight","width","height","isBeaconAnimating","isMeasuring","entityInnerHostRect","isMouseInProximity","isMeasured","Object","CoachmarkBase","beaconColorOne","beaconColorTwo","children","color","positioningContainerProps","ariaDescribedBy","ariaDescribedByText","ariaLabelledBy","ariaLabelledByText","ariaAlertText","delayBeforeCoachmarkAnimation","styles","className","persistentBeak","alertText","defaultColor","semanticColors","primaryButtonBackground","classNames","entityHostHeight","entityHostWidth","finalHeight","__assign","offsetFromTarget","componentRef","_positioningContainer","onPositioned","_onPositioned","bounds","_getBounds","root","ariaContainer","role","ref","_ariaAlertContainer","pulsingBeacon","translateAnimationContainer","scaleAnimationLayer","rotateAnimationLayer","direction","entityHost","_entityHost","tabIndex","id","key","isClickableOutsideFocusTrap","forceFocusInsideTrap","entityInnerHost","childrenContainer","_childrenContainer","newProps","newState","prevProps","prevState","_setBeakPosition","preventDismissOnLostFocus","_addListeners","offsetWidth","offsetHeight","forceUpdate","_addProximityHandler","mouseProximityOffset","delayBeforeMouseOpen","preventFocusOnMount","focus","dispose","currentDoc","off","on","_onKeyDown","_dismissOnLostFocus","clickTarget","clickedOutsideCallout","dismiss","isPositionForced","directionalHint","topAutoEdge","bottomAutoEdge","Infinity","window","innerWidth","timeoutIds","_setTargetElementRect","forEach","value","clearInterval","push","document","mouseY","clientY","mouseX","clientX","_isInsideElement","onMouseMove","_targetElementRect","getBoundingClientRect","Component"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\office-ui-fabric-react\\lib\\components\\src\\components\\Coachmark\\Coachmark.base.tsx"],"sourcesContent":["// Utilities\nimport * as React from 'react';\nimport {\n  classNamesFunction,\n  elementContains,\n  focusFirstChild,\n  getDocument,\n  IRectangle,\n  KeyCodes,\n  shallowCompare,\n  getRTL,\n  warnDeprecations,\n  EventGroup,\n  Async,\n  initializeComponentRef,\n} from '../../Utilities';\nimport { IPositionedData, RectangleEdge, getOppositeEdge } from '../../utilities/positioning';\n\n// Component Dependencies\nimport { PositioningContainer, IPositioningContainer } from './PositioningContainer/index';\nimport { Beak, BEAK_HEIGHT, BEAK_WIDTH } from './Beak/Beak';\nimport { DirectionalHint } from '../../common/DirectionalHint';\n\n// Coachmark\nimport { ICoachmark, ICoachmarkProps, ICoachmarkStyles, ICoachmarkStyleProps } from './Coachmark.types';\nimport { COACHMARK_HEIGHT, COACHMARK_WIDTH } from './Coachmark.styles';\nimport { FocusTrapZone } from '../../FocusTrapZone';\n\nconst getClassNames = classNamesFunction<ICoachmarkStyleProps, ICoachmarkStyles>();\n\nexport const COACHMARK_ATTRIBUTE_NAME = 'data-coachmarkid';\n\n/**\n * An interface for the cached dimensions of entity inner host.\n */\nexport interface IEntityRect {\n  width: number;\n  height: number;\n}\n\nexport interface ICoachmarkState {\n  /**\n   * Is the Coachmark currently collapsed into\n   * a tear drop shape\n   */\n  isCollapsed: boolean;\n\n  /**\n   * Enables/Disables the beacon that radiates\n   * from the center of the coachmark.\n   */\n  isBeaconAnimating: boolean;\n\n  /**\n   * Is the teaching bubble currently retreiving the\n   * original dimensions of the hosted entity.\n   */\n  isMeasuring: boolean;\n\n  /**\n   * Is the Coachmark done measuring the hosted entity\n   */\n  isMeasured: boolean;\n\n  /**\n   * Cached width and height of _entityInnerHostElement\n   */\n  entityInnerHostRect: IEntityRect;\n\n  /**\n   * Is the mouse in proximity of the default target element\n   */\n  isMouseInProximity: boolean;\n\n  /**\n   * The left position of the beak\n   */\n  beakLeft?: string;\n\n  /**\n   * The right position of the beak\n   */\n  beakTop?: string;\n\n  /**\n   * The right position of the beak\n   */\n  beakRight?: string;\n\n  /**\n   * The bottom position of the beak\n   */\n  beakBottom?: string;\n\n  /**\n   * Alignment edge of callout in relation to target\n   */\n  targetAlignment?: RectangleEdge;\n\n  /**\n   * Position of Coachmark/TeachingBubble in relation to target\n   */\n  targetPosition?: RectangleEdge;\n\n  /**\n   * Transform origin of teaching bubble callout\n   */\n  transformOrigin?: string;\n\n  /**\n   * ARIA alert text to read aloud with Narrator once the Coachmark is mounted\n   */\n  alertText?: string;\n}\n\nconst COMPONENT_NAME = 'Coachmark';\n\nexport class CoachmarkBase extends React.Component<ICoachmarkProps, ICoachmarkState> implements ICoachmark {\n  public static defaultProps: Partial<ICoachmarkProps> = {\n    isCollapsed: true,\n    mouseProximityOffset: 10,\n    delayBeforeMouseOpen: 3600, // The approximate time the coachmark shows up\n    delayBeforeCoachmarkAnimation: 0,\n    isPositionForced: true,\n    positioningContainerProps: {\n      directionalHint: DirectionalHint.bottomAutoEdge,\n    },\n  };\n\n  private _async: Async;\n  private _events: EventGroup;\n\n  /**\n   * The cached HTMLElement reference to the Entity Inner Host\n   * element.\n   */\n  private _entityHost = React.createRef<HTMLDivElement>();\n  private _entityInnerHostElement = React.createRef<HTMLDivElement>();\n  private _translateAnimationContainer = React.createRef<HTMLDivElement>();\n  private _ariaAlertContainer = React.createRef<HTMLDivElement>();\n  private _childrenContainer = React.createRef<HTMLDivElement>();\n  private _positioningContainer = React.createRef<IPositioningContainer>();\n\n  /**\n   * The target element the mouse would be in\n   * proximity to\n   */\n  private _targetElementRect: ClientRect;\n\n  constructor(props: ICoachmarkProps) {\n    super(props);\n\n    this._async = new Async(this);\n    this._events = new EventGroup(this);\n    initializeComponentRef(this);\n\n    warnDeprecations(COMPONENT_NAME, props, {\n      teachingBubbleRef: undefined,\n      collapsed: 'isCollapsed',\n      beakWidth: undefined,\n      beakHeight: undefined,\n      width: undefined,\n      height: undefined,\n    });\n\n    // Set defaults for state\n    this.state = {\n      isCollapsed: props.isCollapsed!,\n      isBeaconAnimating: true,\n      isMeasuring: true,\n      entityInnerHostRect: {\n        width: 0,\n        height: 0,\n      },\n      isMouseInProximity: false,\n      isMeasured: false,\n    };\n  }\n\n  private get _beakDirection(): RectangleEdge {\n    const { targetPosition } = this.state;\n    if (targetPosition === undefined) {\n      return RectangleEdge.bottom;\n    }\n\n    return getOppositeEdge(targetPosition);\n  }\n\n  public render(): JSX.Element {\n    const {\n      beaconColorOne,\n      beaconColorTwo,\n      children,\n      target,\n      color,\n      positioningContainerProps,\n      ariaDescribedBy,\n      ariaDescribedByText,\n      ariaLabelledBy,\n      ariaLabelledByText,\n      ariaAlertText,\n      delayBeforeCoachmarkAnimation,\n      styles,\n      theme,\n      className,\n      persistentBeak,\n    } = this.props;\n\n    const {\n      beakLeft,\n      beakTop,\n      beakRight,\n      beakBottom,\n      isCollapsed,\n      isBeaconAnimating,\n      isMeasuring,\n      entityInnerHostRect,\n      transformOrigin,\n      alertText,\n      isMeasured,\n    } = this.state;\n\n    // Defaulting the main background before passing it to the styles because it is used for `Beak` too.\n    let defaultColor = color;\n    if (!defaultColor && theme) {\n      defaultColor = theme.semanticColors.primaryButtonBackground;\n    }\n\n    const classNames = getClassNames(styles, {\n      theme,\n      beaconColorOne,\n      beaconColorTwo,\n      className,\n      isCollapsed,\n      isBeaconAnimating,\n      isMeasuring,\n      color: defaultColor,\n      transformOrigin,\n      isMeasured,\n      entityHostHeight: `${entityInnerHostRect.height}px`,\n      entityHostWidth: `${entityInnerHostRect.width}px`,\n      width: `${COACHMARK_WIDTH}px`,\n      height: `${COACHMARK_HEIGHT}px`,\n      delayBeforeCoachmarkAnimation: `${delayBeforeCoachmarkAnimation}ms`,\n    });\n\n    const finalHeight: number = isCollapsed ? COACHMARK_HEIGHT : entityInnerHostRect.height;\n\n    return (\n      <PositioningContainer\n        target={target}\n        offsetFromTarget={BEAK_HEIGHT}\n        componentRef={this._positioningContainer}\n        finalHeight={finalHeight}\n        onPositioned={this._onPositioned}\n        bounds={this._getBounds()}\n        {...positioningContainerProps}\n      >\n        <div className={classNames.root}>\n          {ariaAlertText && (\n            <div\n              className={classNames.ariaContainer}\n              role=\"alert\"\n              ref={this._ariaAlertContainer}\n              aria-hidden={!isCollapsed}\n            >\n              {alertText}\n            </div>\n          )}\n          <div className={classNames.pulsingBeacon} />\n          <div className={classNames.translateAnimationContainer} ref={this._translateAnimationContainer}>\n            <div className={classNames.scaleAnimationLayer}>\n              <div className={classNames.rotateAnimationLayer}>\n                {this._positioningContainer.current && (isCollapsed || persistentBeak) && (\n                  <Beak\n                    left={beakLeft}\n                    top={beakTop}\n                    right={beakRight}\n                    bottom={beakBottom}\n                    direction={this._beakDirection}\n                    color={defaultColor}\n                  />\n                )}\n                <div\n                  className={classNames.entityHost}\n                  ref={this._entityHost}\n                  tabIndex={-1}\n                  data-is-focusable={true}\n                  role=\"dialog\"\n                  aria-labelledby={ariaLabelledBy}\n                  aria-describedby={ariaDescribedBy}\n                >\n                  {isCollapsed && [\n                    ariaLabelledBy && (\n                      <p id={ariaLabelledBy} key={0} className={classNames.ariaContainer}>\n                        {ariaLabelledByText}\n                      </p>\n                    ),\n                    ariaDescribedBy && (\n                      <p id={ariaDescribedBy} key={1} className={classNames.ariaContainer}>\n                        {ariaDescribedByText}\n                      </p>\n                    ),\n                  ]}\n                  <FocusTrapZone isClickableOutsideFocusTrap={true} forceFocusInsideTrap={false}>\n                    <div className={classNames.entityInnerHost} ref={this._entityInnerHostElement}>\n                      <div\n                        className={classNames.childrenContainer}\n                        ref={this._childrenContainer}\n                        aria-hidden={isCollapsed}\n                      >\n                        {children}\n                      </div>\n                    </div>\n                  </FocusTrapZone>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </PositioningContainer>\n    );\n  }\n\n  public UNSAFE_componentWillReceiveProps(newProps: ICoachmarkProps): void {\n    if (this.props.isCollapsed && !newProps.isCollapsed) {\n      // The coachmark is about to open\n      this._openCoachmark();\n    }\n  }\n\n  public shouldComponentUpdate(newProps: ICoachmarkProps, newState: ICoachmarkState): boolean {\n    return !shallowCompare(newProps, this.props) || !shallowCompare(newState, this.state);\n  }\n\n  public componentDidUpdate(prevProps: ICoachmarkProps, prevState: ICoachmarkState): void {\n    if (\n      prevState.targetAlignment !== this.state.targetAlignment ||\n      prevState.targetPosition !== this.state.targetPosition\n    ) {\n      this._setBeakPosition();\n    }\n    if (prevProps.preventDismissOnLostFocus !== this.props.preventDismissOnLostFocus) {\n      this._addListeners();\n    }\n  }\n\n  public componentDidMount(): void {\n    this._async.requestAnimationFrame((): void => {\n      if (\n        this._entityInnerHostElement.current &&\n        this.state.entityInnerHostRect.width + this.state.entityInnerHostRect.width === 0\n      ) {\n        this.setState({\n          isMeasuring: false,\n          entityInnerHostRect: {\n            width: this._entityInnerHostElement.current.offsetWidth,\n            height: this._entityInnerHostElement.current.offsetHeight,\n          },\n          isMeasured: true,\n        });\n        this._setBeakPosition();\n        this.forceUpdate();\n      }\n\n      this._addListeners();\n\n      // We don't want to the user to immediately trigger the Coachmark when it's opened\n      this._async.setTimeout(() => {\n        this._addProximityHandler(this.props.mouseProximityOffset);\n      }, this.props.delayBeforeMouseOpen!);\n\n      // Need to add setTimeout to have narrator read change in alert container\n      if (this.props.ariaAlertText) {\n        this._async.setTimeout(() => {\n          if (this.props.ariaAlertText && this._ariaAlertContainer.current) {\n            this.setState({\n              alertText: this.props.ariaAlertText,\n            });\n          }\n        }, 0);\n      }\n\n      if (!this.props.preventFocusOnMount) {\n        this._async.setTimeout(() => {\n          if (this._entityHost.current) {\n            this._entityHost.current.focus();\n          }\n        }, 1000);\n      }\n    });\n  }\n\n  public componentWillUnmount(): void {\n    this._async.dispose();\n    this._events.dispose();\n  }\n\n  public dismiss = (ev?: Event | React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>): void => {\n    const { onDismiss } = this.props;\n\n    if (onDismiss) {\n      onDismiss(ev);\n    }\n  };\n\n  private _addListeners(): void {\n    const { preventDismissOnLostFocus } = this.props;\n    const currentDoc: Document = getDocument()!;\n\n    this._events.off();\n\n    if (currentDoc) {\n      this._events.on(currentDoc, 'keydown', this._onKeyDown, true);\n\n      if (!preventDismissOnLostFocus) {\n        this._events.on(currentDoc, 'click', this._dismissOnLostFocus, true);\n        this._events.on(currentDoc, 'focus', this._dismissOnLostFocus, true);\n      }\n    }\n  }\n\n  private _dismissOnLostFocus(ev: Event) {\n    const clickTarget = ev.target as HTMLElement;\n    const clickedOutsideCallout =\n      this._translateAnimationContainer.current &&\n      !elementContains(this._translateAnimationContainer.current, clickTarget);\n    const { target } = this.props;\n\n    if (clickedOutsideCallout && clickTarget !== target && !elementContains(target as HTMLElement, clickTarget)) {\n      this.dismiss(ev);\n    }\n  }\n\n  private _onKeyDown = (e: any): void => {\n    // Open coachmark if user presses ALT + C (arbitrary keypress for now)\n    if (\n      (e.altKey && e.which === KeyCodes.c) ||\n      (e.which === KeyCodes.enter &&\n        this._translateAnimationContainer.current &&\n        this._translateAnimationContainer.current.contains(e.target))\n    ) {\n      this._onFocusHandler();\n    }\n  };\n\n  private _onFocusHandler = (): void => {\n    if (this.state.isCollapsed) {\n      this._openCoachmark();\n    }\n  };\n\n  private _onPositioned = (positionData: IPositionedData): void => {\n    this._async.requestAnimationFrame((): void => {\n      this.setState({\n        targetAlignment: positionData.alignmentEdge,\n        targetPosition: positionData.targetEdge,\n      });\n    });\n  };\n\n  private _getBounds(): IRectangle | undefined {\n    const { isPositionForced, positioningContainerProps } = this.props;\n    if (isPositionForced) {\n      // If directionalHint direction is the top or bottom auto edge, then we want to set the left/right bounds\n      // to the window x-axis to have auto positioning work correctly.\n      if (\n        positioningContainerProps &&\n        (positioningContainerProps.directionalHint === DirectionalHint.topAutoEdge ||\n          positioningContainerProps.directionalHint === DirectionalHint.bottomAutoEdge)\n      ) {\n        return {\n          left: 0,\n          top: -Infinity,\n          bottom: Infinity,\n          right: window.innerWidth,\n          width: window.innerWidth,\n          height: Infinity,\n        };\n      } else {\n        return {\n          left: -Infinity,\n          top: -Infinity,\n          bottom: Infinity,\n          right: Infinity,\n          width: Infinity,\n          height: Infinity,\n        };\n      }\n    } else {\n      return undefined;\n    }\n  }\n\n  private _setBeakPosition = (): void => {\n    let beakLeft;\n    let beakTop;\n    let beakRight;\n    let beakBottom;\n    let transformOriginX;\n    let transformOriginY;\n\n    const { targetAlignment } = this.state;\n    const distanceAdjustment = '3px'; // Adjustment distance for Beak to shift towards Coachmark bubble.\n\n    switch (this._beakDirection) {\n      // If Beak is pointing Up or Down\n      case RectangleEdge.top:\n      case RectangleEdge.bottom:\n        // If there is no target alignment, then beak is X-axis centered in callout\n        if (!targetAlignment) {\n          beakLeft = `calc(50% - ${BEAK_WIDTH / 2}px)`;\n          transformOriginX = 'center';\n        } else {\n          // Beak is aligned to the left of target\n          if (targetAlignment === RectangleEdge.left) {\n            beakLeft = `${COACHMARK_WIDTH / 2 - BEAK_WIDTH / 2}px`;\n            transformOriginX = 'left';\n          } else {\n            // Beak is aligned to the right of target\n            beakRight = `${COACHMARK_WIDTH / 2 - BEAK_WIDTH / 2}px`;\n            transformOriginX = 'right';\n          }\n        }\n\n        if (this._beakDirection === RectangleEdge.top) {\n          beakTop = distanceAdjustment;\n          transformOriginY = 'top';\n        } else {\n          beakBottom = distanceAdjustment;\n          transformOriginY = 'bottom';\n        }\n        break;\n      // If Beak is pointing Left or Right\n      case RectangleEdge.left:\n      case RectangleEdge.right:\n        // If there is no target alignment, then beak is Y-axis centered in callout\n        if (!targetAlignment) {\n          beakTop = `calc(50% - ${BEAK_WIDTH / 2}px)`;\n          transformOriginY = `center`;\n        } else {\n          // Beak is aligned to the top of target\n          if (targetAlignment === RectangleEdge.top) {\n            beakTop = `${COACHMARK_WIDTH / 2 - BEAK_WIDTH / 2}px`;\n            transformOriginY = `top`;\n          } else {\n            // Beak is aligned to the bottom of target\n            beakBottom = `${COACHMARK_WIDTH / 2 - BEAK_WIDTH / 2}px`;\n            transformOriginY = `bottom`;\n          }\n        }\n\n        if (this._beakDirection === RectangleEdge.left) {\n          if (getRTL(this.props.theme)) {\n            beakRight = distanceAdjustment;\n          } else {\n            beakLeft = distanceAdjustment;\n          }\n          transformOriginX = 'left';\n        } else {\n          if (getRTL(this.props.theme)) {\n            beakLeft = distanceAdjustment;\n          } else {\n            beakRight = distanceAdjustment;\n          }\n          transformOriginX = 'right';\n        }\n        break;\n    }\n\n    this.setState({\n      beakLeft: beakLeft,\n      beakRight: beakRight,\n      beakBottom: beakBottom,\n      beakTop: beakTop,\n      transformOrigin: `${transformOriginX} ${transformOriginY}`,\n    });\n  };\n\n  private _openCoachmark = (): void => {\n    this.setState({\n      isCollapsed: false,\n    });\n\n    if (this.props.onAnimationOpenStart) {\n      this.props.onAnimationOpenStart();\n    }\n\n    this._entityInnerHostElement.current &&\n      this._entityInnerHostElement.current.addEventListener('transitionend', (): void => {\n        // Need setTimeout to trigger narrator\n        this._async.setTimeout(() => {\n          if (this._entityInnerHostElement.current) {\n            focusFirstChild(this._entityInnerHostElement.current);\n          }\n        }, 1000);\n\n        if (this.props.onAnimationOpenEnd) {\n          this.props.onAnimationOpenEnd();\n        }\n      });\n  };\n\n  private _addProximityHandler(mouseProximityOffset: number = 0): void {\n    /**\n     * An array of cached ids returned when setTimeout runs during\n     * the window resize event trigger.\n     */\n    const timeoutIds: number[] = [];\n\n    // Take the initial measure out of the initial render to prevent\n    // an unnecessary render.\n    this._async.setTimeout(() => {\n      this._setTargetElementRect();\n\n      // When the window resizes we want to async\n      // get the bounding client rectangle.\n      // Every time the event is triggered we want to\n      // setTimeout and then clear any previous instances\n      // of setTimeout.\n      this._events.on(window, 'resize', (): void => {\n        timeoutIds.forEach((value: number): void => {\n          clearInterval(value);\n        });\n\n        timeoutIds.push(\n          this._async.setTimeout((): void => {\n            this._setTargetElementRect();\n          }, 100),\n        );\n      });\n    }, 10);\n\n    // Every time the document's mouse move is triggered\n    // we want to check if inside of an element and\n    // set the state with the result.\n    this._events.on(document, 'mousemove', (e: MouseEvent) => {\n      if (this.state.isCollapsed) {\n        const mouseY = e.clientY;\n        const mouseX = e.clientX;\n        this._setTargetElementRect();\n        const isMouseInProximity = this._isInsideElement(mouseX, mouseY, mouseProximityOffset);\n\n        if (isMouseInProximity !== this.state.isMouseInProximity) {\n          this._openCoachmark();\n        }\n      }\n\n      if (this.props.onMouseMove) {\n        this.props.onMouseMove(e);\n      }\n    });\n  }\n\n  private _setTargetElementRect(): void {\n    if (this._translateAnimationContainer && this._translateAnimationContainer.current) {\n      this._targetElementRect = this._translateAnimationContainer!.current!.getBoundingClientRect();\n    }\n  }\n\n  private _isInsideElement(mouseX: number, mouseY: number, mouseProximityOffset: number = 0): boolean {\n    return (\n      mouseX > this._targetElementRect.left - mouseProximityOffset &&\n      mouseX < this._targetElementRect.left + this._targetElementRect.width + mouseProximityOffset &&\n      mouseY > this._targetElementRect.top - mouseProximityOffset &&\n      mouseY < this._targetElementRect.top + this._targetElementRect.height + mouseProximityOffset\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}