{"ast":null,"code":"import { HighContrastSelector, getGlobalClassNames, IconFontSizes } from '../../Styling';\nimport { getRTL } from '../../Utilities';\nexport var CheckGlobalClassNames = {\n  root: 'ms-Check',\n  circle: 'ms-Check-circle',\n  check: 'ms-Check-check',\n\n  /** Must be manually applied to the parent element of the check. */\n  checkHost: 'ms-Check-checkHost'\n};\nexport var getStyles = function getStyles(props) {\n  var _a, _b, _c, _d, _e; // eslint-disable-next-line deprecation/deprecation\n\n\n  var _f = props.height,\n      height = _f === void 0 ? props.checkBoxHeight || '18px' : _f,\n      checked = props.checked,\n      className = props.className,\n      theme = props.theme;\n  var palette = theme.palette,\n      semanticColors = theme.semanticColors,\n      fonts = theme.fonts;\n  var isRTL = getRTL(theme);\n  var classNames = getGlobalClassNames(CheckGlobalClassNames, theme);\n  var sharedCircleCheck = {\n    fontSize: height,\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    width: height,\n    height: height,\n    textAlign: 'center',\n    verticalAlign: 'middle'\n  };\n  return {\n    root: [classNames.root, fonts.medium, {\n      // lineHeight currently needs to be a string to output without 'px'\n      lineHeight: '1',\n      width: height,\n      height: height,\n      verticalAlign: 'top',\n      position: 'relative',\n      userSelect: 'none',\n      selectors: (_a = {\n        ':before': {\n          content: '\"\"',\n          position: 'absolute',\n          top: '1px',\n          right: '1px',\n          bottom: '1px',\n          left: '1px',\n          borderRadius: '50%',\n          opacity: 1,\n          background: semanticColors.bodyBackground\n        }\n      }, _a[\".\" + classNames.checkHost + \":hover &, .\" + classNames.checkHost + \":focus &, &:hover, &:focus\"] = {\n        opacity: 1\n      }, _a)\n    }, checked && ['is-checked', {\n      selectors: {\n        ':before': {\n          background: palette.themePrimary,\n          opacity: 1,\n          selectors: (_b = {}, _b[HighContrastSelector] = {\n            background: 'Window'\n          }, _b)\n        }\n      }\n    }], className],\n    circle: [classNames.circle, sharedCircleCheck, {\n      color: palette.neutralSecondary,\n      selectors: (_c = {}, _c[HighContrastSelector] = {\n        color: 'WindowText'\n      }, _c)\n    }, checked && {\n      color: palette.white\n    }],\n    check: [classNames.check, sharedCircleCheck, {\n      opacity: 0,\n      color: palette.neutralSecondary,\n      fontSize: IconFontSizes.medium,\n      left: isRTL ? '-0.5px' : '.5px',\n      selectors: (_d = {\n        ':hover': {\n          opacity: 1\n        }\n      }, _d[HighContrastSelector] = {\n        MsHighContrastAdjust: 'none'\n      }, _d)\n    }, checked && {\n      opacity: 1,\n      color: palette.white,\n      fontWeight: 900,\n      selectors: (_e = {}, _e[HighContrastSelector] = {\n        border: 'none',\n        color: 'WindowText'\n      }, _e)\n    }],\n    checkHost: classNames.checkHost\n  };\n};","map":{"version":3,"mappings":"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","names":["HighContrastSelector","getGlobalClassNames","IconFontSizes","getRTL","CheckGlobalClassNames","root","circle","check","checkHost","getStyles","props","checked","className","theme","semanticColors","fonts","isRTL","classNames","sharedCircleCheck","fontSize","height","position","left","top","width","textAlign","verticalAlign","medium","lineHeight","userSelect","selectors","content","right","bottom","borderRadius","opacity","background","bodyBackground","_a","palette","themePrimary","_b","color","neutralSecondary","_c","white","_d","MsHighContrastAdjust","fontWeight","_e","border"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\office-ui-fabric-react\\lib\\components\\src\\components\\Check\\Check.styles.ts"],"sourcesContent":["import { ICheckStyleProps, ICheckStyles } from './Check.types';\nimport { HighContrastSelector, IStyle, getGlobalClassNames, IconFontSizes } from '../../Styling';\nimport { getRTL } from '../../Utilities';\n\nexport const CheckGlobalClassNames = {\n  root: 'ms-Check',\n  circle: 'ms-Check-circle',\n  check: 'ms-Check-check',\n  /** Must be manually applied to the parent element of the check. */\n  checkHost: 'ms-Check-checkHost',\n};\n\nexport const getStyles = (props: ICheckStyleProps): ICheckStyles => {\n  // eslint-disable-next-line deprecation/deprecation\n  const { height = props.checkBoxHeight || '18px', checked, className, theme } = props;\n\n  const { palette, semanticColors, fonts } = theme;\n  const isRTL = getRTL(theme);\n\n  const classNames = getGlobalClassNames(CheckGlobalClassNames, theme);\n\n  const sharedCircleCheck: IStyle = {\n    fontSize: height,\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    width: height,\n    height: height,\n    textAlign: 'center',\n    verticalAlign: 'middle',\n  };\n\n  return {\n    root: [\n      classNames.root,\n      fonts.medium,\n      {\n        // lineHeight currently needs to be a string to output without 'px'\n        lineHeight: '1',\n        width: height,\n        height: height,\n        verticalAlign: 'top',\n        position: 'relative',\n        userSelect: 'none',\n\n        selectors: {\n          ':before': {\n            content: '\"\"',\n            position: 'absolute',\n            top: '1px',\n            right: '1px',\n            bottom: '1px',\n            left: '1px',\n            borderRadius: '50%',\n            opacity: 1,\n            background: semanticColors.bodyBackground,\n          },\n\n          [`.${classNames.checkHost}:hover &, .${classNames.checkHost}:focus &, &:hover, &:focus`]: {\n            opacity: 1,\n          },\n        },\n      },\n\n      checked && [\n        'is-checked',\n        {\n          selectors: {\n            ':before': {\n              background: palette.themePrimary,\n              opacity: 1,\n              selectors: {\n                [HighContrastSelector]: {\n                  background: 'Window',\n                },\n              },\n            },\n          },\n        },\n      ],\n      className,\n    ],\n\n    circle: [\n      classNames.circle,\n      sharedCircleCheck,\n\n      {\n        color: palette.neutralSecondary,\n\n        selectors: {\n          [HighContrastSelector]: {\n            color: 'WindowText',\n          },\n        },\n      },\n\n      checked && {\n        color: palette.white,\n      },\n    ],\n\n    check: [\n      classNames.check,\n      sharedCircleCheck,\n\n      {\n        opacity: 0,\n        color: palette.neutralSecondary,\n        fontSize: IconFontSizes.medium,\n        left: isRTL ? '-0.5px' : '.5px', // for centering the check icon inside the circle.\n\n        selectors: {\n          ':hover': {\n            opacity: 1,\n          },\n\n          [HighContrastSelector]: {\n            MsHighContrastAdjust: 'none',\n          },\n        },\n      },\n\n      checked && {\n        opacity: 1,\n        color: palette.white,\n        fontWeight: 900,\n\n        selectors: {\n          [HighContrastSelector]: {\n            border: 'none',\n            color: 'WindowText',\n          },\n        },\n      },\n    ],\n\n    checkHost: classNames.checkHost,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}