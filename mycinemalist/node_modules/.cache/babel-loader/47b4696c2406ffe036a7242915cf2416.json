{"ast":null,"code":"/* eslint-disable no-console */\nvar _warningCallback = undefined;\n/**\n * Sends a warning to console, if the api is present.\n *\n * @public\n * @param message - Warning message.\n */\n\nexport function warn(message) {\n  if (_warningCallback && process.env.NODE_ENV !== 'production') {\n    _warningCallback(message);\n  } else if (console && console.warn) {\n    console.warn(message);\n  }\n}\n/**\n * Configures the warning callback. Passing in undefined will reset it to use the default\n * console.warn function.\n *\n * @public\n * @param warningCallback - Callback to override the generated warnings.\n */\n\nexport function setWarningCallback(warningCallback) {\n  _warningCallback = warningCallback;\n}","map":{"version":3,"mappings":"AAAA;AAEA,IAAIA,gBAAgB,GAA4CC,SAAhE;AAIA;;;;;;;AAMA,OAAM,SAAUC,IAAV,CAAeC,OAAf,EAA8B;AAClC,MAAIH,gBAAgB,IAAII,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAjD,EAA+D;AAC7DN,oBAAgB,CAACG,OAAD,CAAhB;AACD,GAFD,MAEO,IAAII,OAAO,IAAIA,OAAO,CAACL,IAAvB,EAA6B;AAClCK,WAAO,CAACL,IAAR,CAAaC,OAAb;AACD;AACF;AAED;;;;;;;;AAOA,OAAM,SAAUK,kBAAV,CAA6BC,eAA7B,EAAwE;AAC5ET,kBAAgB,GAAGS,eAAnB;AACD","names":["_warningCallback","undefined","warn","message","process","env","NODE_ENV","console","setWarningCallback","warningCallback"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\@uifabric\\utilities\\lib\\src\\warn\\warn.ts"],"sourcesContent":["/* eslint-disable no-console */\n\nlet _warningCallback: ((message: string) => void) | undefined = undefined;\n\nexport type ISettingsMap<T> = { [P in keyof T]?: string };\n\n/**\n * Sends a warning to console, if the api is present.\n *\n * @public\n * @param message - Warning message.\n */\nexport function warn(message: string): void {\n  if (_warningCallback && process.env.NODE_ENV !== 'production') {\n    _warningCallback(message);\n  } else if (console && console.warn) {\n    console.warn(message);\n  }\n}\n\n/**\n * Configures the warning callback. Passing in undefined will reset it to use the default\n * console.warn function.\n *\n * @public\n * @param warningCallback - Callback to override the generated warnings.\n */\nexport function setWarningCallback(warningCallback?: (message: string) => void): void {\n  _warningCallback = warningCallback;\n}\n"]},"metadata":{},"sourceType":"module"}