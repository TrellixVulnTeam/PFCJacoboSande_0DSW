{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { HighContrastSelector, keyframes, noWrap, getGlobalClassNames, getEdgeChromiumNoHighContrastAdjustSelector } from '../../Styling';\nimport { getRTL, memoizeFunction } from '../../Utilities';\nvar GlobalClassNames = {\n  root: 'ms-ProgressIndicator',\n  itemName: 'ms-ProgressIndicator-itemName',\n  itemDescription: 'ms-ProgressIndicator-itemDescription',\n  itemProgress: 'ms-ProgressIndicator-itemProgress',\n  progressTrack: 'ms-ProgressIndicator-progressTrack',\n  progressBar: 'ms-ProgressIndicator-progressBar'\n};\nvar IndeterminateProgress = memoizeFunction(function () {\n  return keyframes({\n    '0%': {\n      left: '-30%'\n    },\n    '100%': {\n      left: '100%'\n    }\n  });\n});\nvar IndeterminateProgressRTL = memoizeFunction(function () {\n  return keyframes({\n    '100%': {\n      right: '-30%'\n    },\n    '0%': {\n      right: '100%'\n    }\n  });\n});\nexport var getStyles = function (props) {\n  var _a, _b, _c;\n\n  var isRTL = getRTL(props.theme);\n  var className = props.className,\n      indeterminate = props.indeterminate,\n      theme = props.theme,\n      _d = props.barHeight,\n      barHeight = _d === void 0 ? 2 : _d;\n  var palette = theme.palette,\n      semanticColors = theme.semanticColors,\n      fonts = theme.fonts;\n  var classNames = getGlobalClassNames(GlobalClassNames, theme);\n  var marginBetweenText = 8;\n  var textHeight = 18;\n  var progressTrackColor = palette.neutralLight;\n  return {\n    root: [classNames.root, fonts.medium, className],\n    itemName: [classNames.itemName, noWrap, {\n      color: semanticColors.bodyText,\n      paddingTop: marginBetweenText / 2,\n      lineHeight: textHeight + 2\n    }],\n    itemDescription: [classNames.itemDescription, {\n      color: semanticColors.bodySubtext,\n      fontSize: fonts.small.fontSize,\n      lineHeight: textHeight\n    }],\n    itemProgress: [classNames.itemProgress, {\n      position: 'relative',\n      overflow: 'hidden',\n      height: barHeight,\n      padding: marginBetweenText + \"px 0\"\n    }],\n    progressTrack: [classNames.progressTrack, {\n      position: 'absolute',\n      width: '100%',\n      height: barHeight,\n      backgroundColor: progressTrackColor,\n      selectors: (_a = {}, _a[HighContrastSelector] = {\n        borderBottom: '1px solid WindowText'\n      }, _a)\n    }],\n    progressBar: [{\n      backgroundColor: palette.themePrimary,\n      height: barHeight,\n      position: 'absolute',\n      transition: 'width .3s ease',\n      width: 0,\n      selectors: __assign((_b = {}, _b[HighContrastSelector] = {\n        backgroundColor: 'highlight'\n      }, _b), getEdgeChromiumNoHighContrastAdjustSelector())\n    }, indeterminate ? {\n      position: 'absolute',\n      minWidth: '33%',\n      background: \"linear-gradient(to right, \" + progressTrackColor + \" 0%, \" + (palette.themePrimary + \" 50%, \" + progressTrackColor + \" 100%)\"),\n      animation: (isRTL ? IndeterminateProgressRTL() : IndeterminateProgress()) + \" 3s infinite\",\n      selectors: (_c = {}, _c[HighContrastSelector] = {\n        background: \"highlight\"\n      }, _c)\n    } : {\n      transition: 'width .15s linear'\n    }, classNames.progressBar]\n  };\n};","map":{"version":3,"mappings":";AAAA,SACEA,oBADF,EAEEC,SAFF,EAGEC,MAHF,EAIEC,mBAJF,EAMEC,2CANF,QAOO,eAPP;AAQA,SAASC,MAAT,EAAiBC,eAAjB,QAAwC,iBAAxC;AAGA,IAAMC,gBAAgB,GAAG;EACvBC,IAAI,EAAE,sBADiB;EAEvBC,QAAQ,EAAE,+BAFa;EAGvBC,eAAe,EAAE,sCAHM;EAIvBC,YAAY,EAAE,mCAJS;EAKvBC,aAAa,EAAE,oCALQ;EAMvBC,WAAW,EAAE;AANU,CAAzB;AASA,IAAMC,qBAAqB,GAAGR,eAAe,CAAC;EAC5C,gBAAS,CAAC;IACR,MAAM;MACJS,IAAI,EAAE;IADF,CADE;IAIR,QAAQ;MACNA,IAAI,EAAE;IADA;EAJA,CAAD,CAAT;AAOE,CARyC,CAA7C;AAWA,IAAMC,wBAAwB,GAAGV,eAAe,CAAC;EAC/C,gBAAS,CAAC;IACR,QAAQ;MACNW,KAAK,EAAE;IADD,CADA;IAIR,MAAM;MACJA,KAAK,EAAE;IADH;EAJE,CAAD,CAAT;AAOE,CAR4C,CAAhD;AAWA,OAAO,IAAMC,SAAS,GAAG,UAACC,KAAD,EAAoC;;;EAC3D,IAAMC,KAAK,GAAGf,MAAM,CAACc,KAAK,CAACE,KAAP,CAApB;EACQ;EAAA,IAAWC,mCAAX;EAAA,IAA0BD,mBAA1B;EAAA,IAAiCE,oBAAjC;EAAA,IAAiCC,kCAAjC;EAEA;EAAA,IAASC,qCAAT;EAAA,IAAyBC,mBAAzB;EACR,IAAMC,UAAU,GAAGxB,mBAAmB,CAACI,gBAAD,EAAmBc,KAAnB,CAAtC;EAEA,IAAMO,iBAAiB,GAAG,CAA1B;EACA,IAAMC,UAAU,GAAG,EAAnB;EACA,IAAMC,kBAAkB,GAAGC,OAAO,CAACC,YAAnC;EAEA,OAAO;IACLxB,IAAI,EAAE,CAACmB,UAAU,CAACnB,IAAZ,EAAkBkB,KAAK,CAACO,MAAxB,EAAgCC,SAAhC,CADD;IAGLzB,QAAQ,EAAE,CACRkB,UAAU,CAAClB,QADH,EAERP,MAFQ,EAGR;MACEiC,KAAK,EAAEV,cAAc,CAACW,QADxB;MAEEC,UAAU,EAAET,iBAAiB,GAAG,CAFlC;MAGEU,UAAU,EAAET,UAAU,GAAG;IAH3B,CAHQ,CAHL;IAaLnB,eAAe,EAAE,CACfiB,UAAU,CAACjB,eADI,EAEf;MACEyB,KAAK,EAAEV,cAAc,CAACc,WADxB;MAEEC,QAAQ,EAAEd,KAAK,CAACe,KAAN,CAAYD,QAFxB;MAGEF,UAAU,EAAET;IAHd,CAFe,CAbZ;IAsBLlB,YAAY,EAAE,CACZgB,UAAU,CAAChB,YADC,EAEZ;MACE+B,QAAQ,EAAE,UADZ;MAEEC,QAAQ,EAAE,QAFZ;MAGEC,MAAM,EAAEpB,SAHV;MAIEqB,OAAO,EAAKjB,iBAAiB;IAJ/B,CAFY,CAtBT;IAgCLhB,aAAa,EAAE,CACbe,UAAU,CAACf,aADE,EAEb;MACE8B,QAAQ,EAAE,UADZ;MAEEI,KAAK,EAAE,MAFT;MAGEF,MAAM,EAAEpB,SAHV;MAIEuB,eAAe,EAAEjB,kBAJnB;MAMEkB,SAAS,YACPC,GAACjD,oBAAD,IAAwB;QACtBkD,YAAY,EAAE;MADQ,CADjB;IANX,CAFa,CAhCV;IAgDLrC,WAAW,EAAE,CACX;MACEkC,eAAe,EAAEhB,OAAO,CAACoB,YAD3B;MAEEP,MAAM,EAAEpB,SAFV;MAGEkB,QAAQ,EAAE,UAHZ;MAIEU,UAAU,EAAE,gBAJd;MAKEN,KAAK,EAAE,CALT;MAOEE,SAAS,wBACNhD,oBADM,IACiB;QACtB+C,eAAe,EAAE;MADK,CADjB,EAGNM,EAHM,GAIJjD,2CAA2C,EAJvC;IAPX,CADW,EAgBXkB,aAAa,GACR;MACCoB,QAAQ,EAAE,UADX;MAECY,QAAQ,EAAE,KAFX;MAGCC,UAAU,EACR,+BAA6BzB,kBAA7B,GAA+C,OAA/C,IACGC,OAAO,CAACoB,YAAR,GAAoB,QAApB,GAA6BrB,kBAA7B,GAA+C,QADlD,CAJH;MAMC0B,SAAS,EAAE,CAAGpC,KAAK,GAAGJ,wBAAwB,EAA3B,GAAgCF,qBAAqB,EAA7D,IAA+D,cAN3E;MAOCkC,SAAS,YACPS,GAACzD,oBAAD,IAAwB;QACtBuD,UAAU,EAAE;MADU,CADjB;IAPV,CADQ,GAcR;MACCH,UAAU,EAAE;IADb,CA9BM,EAiCXzB,UAAU,CAACd,WAjCA;EAhDR,CAAP;AAoFD,CA/FM","names":["HighContrastSelector","keyframes","noWrap","getGlobalClassNames","getEdgeChromiumNoHighContrastAdjustSelector","getRTL","memoizeFunction","GlobalClassNames","root","itemName","itemDescription","itemProgress","progressTrack","progressBar","IndeterminateProgress","left","IndeterminateProgressRTL","right","getStyles","props","isRTL","theme","indeterminate","_d","barHeight","semanticColors","fonts","classNames","marginBetweenText","textHeight","progressTrackColor","palette","neutralLight","medium","className","color","bodyText","paddingTop","lineHeight","bodySubtext","fontSize","small","position","overflow","height","padding","width","backgroundColor","selectors","_a","borderBottom","themePrimary","transition","_b","minWidth","background","animation","_c"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\office-ui-fabric-react\\lib\\components\\src\\components\\ProgressIndicator\\ProgressIndicator.styles.ts"],"sourcesContent":["import {\n  HighContrastSelector,\n  keyframes,\n  noWrap,\n  getGlobalClassNames,\n  IRawStyle,\n  getEdgeChromiumNoHighContrastAdjustSelector,\n} from '../../Styling';\nimport { getRTL, memoizeFunction } from '../../Utilities';\nimport { IProgressIndicatorStyleProps, IProgressIndicatorStyles } from './ProgressIndicator.types';\n\nconst GlobalClassNames = {\n  root: 'ms-ProgressIndicator',\n  itemName: 'ms-ProgressIndicator-itemName',\n  itemDescription: 'ms-ProgressIndicator-itemDescription',\n  itemProgress: 'ms-ProgressIndicator-itemProgress',\n  progressTrack: 'ms-ProgressIndicator-progressTrack',\n  progressBar: 'ms-ProgressIndicator-progressBar',\n};\n\nconst IndeterminateProgress = memoizeFunction(() =>\n  keyframes({\n    '0%': {\n      left: '-30%',\n    },\n    '100%': {\n      left: '100%',\n    },\n  }),\n);\n\nconst IndeterminateProgressRTL = memoizeFunction(() =>\n  keyframes({\n    '100%': {\n      right: '-30%',\n    },\n    '0%': {\n      right: '100%',\n    },\n  }),\n);\n\nexport const getStyles = (props: IProgressIndicatorStyleProps): IProgressIndicatorStyles => {\n  const isRTL = getRTL(props.theme);\n  const { className, indeterminate, theme, barHeight = 2 } = props;\n\n  const { palette, semanticColors, fonts } = theme;\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  const marginBetweenText = 8;\n  const textHeight = 18;\n  const progressTrackColor = palette.neutralLight;\n\n  return {\n    root: [classNames.root, fonts.medium, className],\n\n    itemName: [\n      classNames.itemName,\n      noWrap,\n      {\n        color: semanticColors.bodyText,\n        paddingTop: marginBetweenText / 2,\n        lineHeight: textHeight + 2,\n      },\n    ],\n\n    itemDescription: [\n      classNames.itemDescription,\n      {\n        color: semanticColors.bodySubtext,\n        fontSize: fonts.small.fontSize,\n        lineHeight: textHeight,\n      },\n    ],\n\n    itemProgress: [\n      classNames.itemProgress,\n      {\n        position: 'relative',\n        overflow: 'hidden',\n        height: barHeight,\n        padding: `${marginBetweenText}px 0`,\n      },\n    ],\n\n    progressTrack: [\n      classNames.progressTrack,\n      {\n        position: 'absolute',\n        width: '100%',\n        height: barHeight,\n        backgroundColor: progressTrackColor,\n\n        selectors: {\n          [HighContrastSelector]: {\n            borderBottom: '1px solid WindowText',\n          },\n        },\n      },\n    ],\n\n    progressBar: [\n      {\n        backgroundColor: palette.themePrimary,\n        height: barHeight,\n        position: 'absolute',\n        transition: 'width .3s ease',\n        width: 0,\n\n        selectors: {\n          [HighContrastSelector]: {\n            backgroundColor: 'highlight',\n          },\n          ...getEdgeChromiumNoHighContrastAdjustSelector(),\n        },\n      },\n\n      indeterminate\n        ? ({\n            position: 'absolute',\n            minWidth: '33%',\n            background:\n              `linear-gradient(to right, ${progressTrackColor} 0%, ` +\n              `${palette.themePrimary} 50%, ${progressTrackColor} 100%)`,\n            animation: `${isRTL ? IndeterminateProgressRTL() : IndeterminateProgress()} 3s infinite`,\n            selectors: {\n              [HighContrastSelector]: {\n                background: `highlight`,\n              },\n            },\n          } as IRawStyle)\n        : ({\n            transition: 'width .15s linear',\n          } as IRawStyle),\n      classNames.progressBar,\n    ],\n  };\n};\n"]},"metadata":{},"sourceType":"module"}