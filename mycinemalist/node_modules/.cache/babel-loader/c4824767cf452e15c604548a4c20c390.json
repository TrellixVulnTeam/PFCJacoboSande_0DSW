{"ast":null,"code":"import { extendComponent } from './extendComponent';\n/**\n * Generates a function to be attached to a React component, which can be called\n * as a replacement to RAF. In-flight async calls will be auto canceled if the component\n * is unmounting before the async code is executed, preventing bugs where code\n * accesses things within the component after being unmounted.\n */\n\nexport var safeRequestAnimationFrame = function (component) {\n  var activeTimeouts;\n  return function (cb) {\n    if (!activeTimeouts) {\n      activeTimeouts = new Set();\n      extendComponent(component, {\n        componentWillUnmount: function () {\n          activeTimeouts.forEach(function (id) {\n            return cancelAnimationFrame(id);\n          });\n        }\n      });\n    }\n\n    var timeoutId = requestAnimationFrame(function () {\n      activeTimeouts.delete(timeoutId);\n      cb();\n    });\n    activeTimeouts.add(timeoutId);\n  };\n};","map":{"version":3,"mappings":"AACA,SAASA,eAAT,QAAgC,mBAAhC;AAEA;;;;;;;AAMA,OAAO,IAAMC,yBAAyB,GAAG,UAACC,SAAD,EAA2B;EAClE,IAAIC,cAAJ;EAEA,OAAO,UAACC,EAAD,EAAa;IAClB,IAAI,CAACD,cAAL,EAAqB;MACnBA,cAAc,GAAG,IAAIE,GAAJ,EAAjB;MAEAL,eAAe,CAACE,SAAD,EAAY;QACzBI,oBAAoB,EAAE;UACpBH,cAAc,CAACI,OAAf,CAAuB,UAACC,EAAD,EAAW;YAAK,2BAAoB,CAACA,EAAD,CAApB;UAAwB,CAA/D;QACD;MAHwB,CAAZ,CAAf;IAKD;;IAED,IAAMC,SAAS,GAAGC,qBAAqB,CAAC;MACtCP,cAAc,CAACQ,MAAf,CAAsBF,SAAtB;MACAL,EAAE;IACH,CAHsC,CAAvC;IAKAD,cAAc,CAACS,GAAf,CAAmBH,SAAnB;EACD,CAjBD;AAkBD,CArBM","names":["extendComponent","safeRequestAnimationFrame","component","activeTimeouts","cb","Set","componentWillUnmount","forEach","id","timeoutId","requestAnimationFrame","delete","add"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\office-ui-fabric-react\\node_modules\\@uifabric\\utilities\\src\\safeRequestAnimationFrame.ts"],"sourcesContent":["import * as React from 'react';\r\nimport { extendComponent } from './extendComponent';\r\n\r\n/**\r\n * Generates a function to be attached to a React component, which can be called\r\n * as a replacement to RAF. In-flight async calls will be auto canceled if the component\r\n * is unmounting before the async code is executed, preventing bugs where code\r\n * accesses things within the component after being unmounted.\r\n */\r\nexport const safeRequestAnimationFrame = (component: React.Component): ((cb: Function) => void) => {\r\n  let activeTimeouts: Set<number>;\r\n\r\n  return (cb: Function) => {\r\n    if (!activeTimeouts) {\r\n      activeTimeouts = new Set<number>();\r\n\r\n      extendComponent(component, {\r\n        componentWillUnmount: () => {\r\n          activeTimeouts.forEach((id: number) => cancelAnimationFrame(id));\r\n        },\r\n      });\r\n    }\r\n\r\n    const timeoutId = requestAnimationFrame(() => {\r\n      activeTimeouts.delete(timeoutId);\r\n      cb();\r\n    });\r\n\r\n    activeTimeouts.add(timeoutId);\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}