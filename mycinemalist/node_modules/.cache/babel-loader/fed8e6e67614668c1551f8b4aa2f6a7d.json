{"ast":null,"code":"import { MAX_COLOR_ALPHA } from './consts';\nimport { hsv2rgb } from './hsv2rgb';\nimport { hsv2hex } from './hsv2hex';\nimport { _rgbaOrHexString } from './_rgbaOrHexString';\n/**\n * Converts an HSV color (and optional alpha value) to a color object.\n * If `a` is not given, a default of 100 is used.\n * Hex in the returned value will *not* be prefixed with #.\n * If `a` is unspecified or 100, the result's `str` property will contain a hex value\n * (*not* prefixed with #)\n */\n\nexport function getColorFromHSV(hsv, a) {\n  var h = hsv.h,\n      s = hsv.s,\n      v = hsv.v;\n  a = typeof a === 'number' ? a : MAX_COLOR_ALPHA;\n\n  var _a = hsv2rgb(h, s, v),\n      r = _a.r,\n      g = _a.g,\n      b = _a.b;\n\n  var hex = hsv2hex(h, s, v);\n\n  var str = _rgbaOrHexString(r, g, b, a, hex);\n\n  var t = MAX_COLOR_ALPHA - a;\n  return {\n    a: a,\n    b: b,\n    g: g,\n    h: h,\n    hex: hex,\n    r: r,\n    s: s,\n    str: str,\n    v: v,\n    t: t\n  };\n}","map":{"version":3,"mappings":"AACA,SAASA,eAAT,QAAgC,UAAhC;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AAEA;;;;;;;;AAOA,OAAM,SAAUC,eAAV,CAA0BC,GAA1B,EAAqCC,CAArC,EAA+C;EAC3C;EAAA,IAAGC,SAAH;EAAA,IAAMC,SAAN;EACRF,CAAC,GAAG,OAAOA,CAAP,KAAa,QAAb,GAAwBA,CAAxB,GAA4BN,eAAhC;;EAEM;EAAA,IAAES,QAAF;EAAA,IAAKC,QAAL;EAAA,IAAQC,QAAR;;EACN,IAAMC,GAAG,GAAGV,OAAO,CAACW,CAAD,EAAIN,CAAJ,EAAOC,CAAP,CAAnB;;EACA,IAAMM,GAAG,GAAGX,gBAAgB,CAACM,CAAD,EAAIC,CAAJ,EAAOC,CAAP,EAAUL,CAAV,EAAaM,GAAb,CAA5B;;EACA,IAAMG,CAAC,GAAGf,eAAe,GAAGM,CAA5B;EAEA,OAAO;IAAEA,CAAC,GAAH;IAAKK,CAAC,GAAN;IAAQD,CAAC,GAAT;IAAWG,CAAC,GAAZ;IAAcD,GAAG,KAAjB;IAAmBH,CAAC,GAApB;IAAsBF,CAAC,GAAvB;IAAyBO,GAAG,KAA5B;IAA8BN,CAAC,GAA/B;IAAiCO,CAAC;EAAlC,CAAP;AACD","names":["MAX_COLOR_ALPHA","hsv2rgb","hsv2hex","_rgbaOrHexString","getColorFromHSV","hsv","a","s","v","r","g","b","hex","h","str","t"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\office-ui-fabric-react\\lib\\utilities\\src\\utilities\\color\\getColorFromHSV.ts"],"sourcesContent":["import { IHSV, IColor } from './interfaces';\nimport { MAX_COLOR_ALPHA } from './consts';\nimport { hsv2rgb } from './hsv2rgb';\nimport { hsv2hex } from './hsv2hex';\nimport { _rgbaOrHexString } from './_rgbaOrHexString';\n\n/**\n * Converts an HSV color (and optional alpha value) to a color object.\n * If `a` is not given, a default of 100 is used.\n * Hex in the returned value will *not* be prefixed with #.\n * If `a` is unspecified or 100, the result's `str` property will contain a hex value\n * (*not* prefixed with #)\n */\nexport function getColorFromHSV(hsv: IHSV, a?: number): IColor {\n  const { h, s, v } = hsv;\n  a = typeof a === 'number' ? a : MAX_COLOR_ALPHA;\n\n  const { r, g, b } = hsv2rgb(h, s, v);\n  const hex = hsv2hex(h, s, v);\n  const str = _rgbaOrHexString(r, g, b, a, hex);\n  const t = MAX_COLOR_ALPHA - a;\n\n  return { a, b, g, h, hex, r, s, str, v, t };\n}\n"]},"metadata":{},"sourceType":"module"}