{"ast":null,"code":"import { mergeStyles } from '../MergeStyles';\n/**\n * Builds a class names object from a given map.\n *\n * @param styles - Map of unprocessed styles.\n * @returns Map of property name to class name.\n */\n\nexport function buildClassMap(styles) {\n  var classes = {};\n\n  var _loop_1 = function (styleName) {\n    if (styles.hasOwnProperty(styleName)) {\n      var className_1;\n      Object.defineProperty(classes, styleName, {\n        get: function () {\n          if (className_1 === undefined) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            className_1 = mergeStyles(styles[styleName]).toString();\n          }\n\n          return className_1;\n        },\n        enumerable: true,\n        configurable: true\n      });\n    }\n  };\n\n  for (var styleName in styles) {\n    _loop_1(styleName);\n  }\n\n  return classes;\n}","map":{"version":3,"mappings":"AAAA,SAASA,WAAT,QAA4B,gBAA5B;AAEA;;;;;;;AAMA,OAAM,SAAUC,aAAV,CAA0CC,MAA1C,EAAmD;EACvD,IAAIC,OAAO,GAAkC,EAA7C;;0BAESC,WAAS;IAChB,IAAIF,MAAM,CAACG,cAAP,CAAsBD,SAAtB,CAAJ,EAAsC;MACpC,IAAIE,WAAJ;MAEAC,MAAM,CAACC,cAAP,CAAsBL,OAAtB,EAA+BC,SAA/B,EAA0C;QACxCK,GAAG,EAAE;UACH,IAAIH,WAAS,KAAKI,SAAlB,EAA6B;YAC3B;YACAJ,WAAS,GAAGN,WAAW,CAACE,MAAM,CAACE,SAAD,CAAP,CAAX,CAAsCO,QAAtC,EAAZ;UACD;;UACD,OAAOL,WAAP;QACD,CAPuC;QAQxCM,UAAU,EAAE,IAR4B;QASxCC,YAAY,EAAE;MAT0B,CAA1C;IAWD;;;EAfH,KAAK,IAAIT,SAAT,IAAsBF,MAAtB,EAA4B;YAAnBE;EAgBR;;EAED,OAAOD,OAAP;AACD","names":["mergeStyles","buildClassMap","styles","classes","styleName","hasOwnProperty","className_1","Object","defineProperty","get","undefined","toString","enumerable","configurable"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\office-ui-fabric-react\\node_modules\\@uifabric\\styling\\lib\\src\\utilities\\buildClassMap.ts"],"sourcesContent":["import { mergeStyles } from '../MergeStyles';\n\n/**\n * Builds a class names object from a given map.\n *\n * @param styles - Map of unprocessed styles.\n * @returns Map of property name to class name.\n */\nexport function buildClassMap<T extends Object>(styles: T): { [key in keyof T]?: string } {\n  let classes: { [key in keyof T]?: string } = {};\n\n  for (let styleName in styles) {\n    if (styles.hasOwnProperty(styleName)) {\n      let className: string;\n\n      Object.defineProperty(classes, styleName, {\n        get: (): string => {\n          if (className === undefined) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            className = mergeStyles(styles[styleName] as any).toString();\n          }\n          return className;\n        },\n        enumerable: true,\n        configurable: true,\n      });\n    }\n  }\n\n  return classes;\n}\n"]},"metadata":{},"sourceType":"module"}