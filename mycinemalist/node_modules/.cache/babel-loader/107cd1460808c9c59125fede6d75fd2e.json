{"ast":null,"code":"import { memoizeFunction } from '../../Utilities';\nimport { mergeStyleSets } from '../../Styling';\nimport { getGlobalClassNames } from '../../Styling';\nexport var ButtonGlobalClassNames = {\n  msButton: 'ms-Button',\n  msButtonHasMenu: 'ms-Button--hasMenu',\n  msButtonIcon: 'ms-Button-icon',\n  msButtonMenuIcon: 'ms-Button-menuIcon',\n  msButtonLabel: 'ms-Button-label',\n  msButtonDescription: 'ms-Button-description',\n  msButtonScreenReaderText: 'ms-Button-screenReaderText',\n  msButtonFlexContainer: 'ms-Button-flexContainer',\n  msButtonTextContainer: 'ms-Button-textContainer'\n};\nexport var getBaseButtonClassNames = memoizeFunction(function (theme, styles, className, variantClassName, iconClassName, menuIconClassName, disabled, hasMenu, checked, expanded, isSplit) {\n  var _a, _b;\n\n  var classNames = getGlobalClassNames(ButtonGlobalClassNames, theme || {});\n  var isExpanded = expanded && !isSplit;\n  return mergeStyleSets({\n    root: [classNames.msButton, styles.root, variantClassName, checked && ['is-checked', styles.rootChecked], isExpanded && ['is-expanded', styles.rootExpanded, {\n      selectors: (_a = {}, _a[\":hover .\" + classNames.msButtonIcon] = styles.iconExpandedHovered, // menuIcon falls back to rootExpandedHovered to support original behavior\n      _a[\":hover .\" + classNames.msButtonMenuIcon] = styles.menuIconExpandedHovered || styles.rootExpandedHovered, _a[':hover'] = styles.rootExpandedHovered, _a)\n    }], hasMenu && [ButtonGlobalClassNames.msButtonHasMenu, styles.rootHasMenu], disabled && ['is-disabled', styles.rootDisabled], !disabled && !isExpanded && !checked && {\n      selectors: (_b = {\n        ':hover': styles.rootHovered\n      }, _b[\":hover .\" + classNames.msButtonLabel] = styles.labelHovered, _b[\":hover .\" + classNames.msButtonIcon] = styles.iconHovered, _b[\":hover .\" + classNames.msButtonDescription] = styles.descriptionHovered, _b[\":hover .\" + classNames.msButtonMenuIcon] = styles.menuIconHovered, _b[':focus'] = styles.rootFocused, _b[':active'] = styles.rootPressed, _b[\":active .\" + classNames.msButtonIcon] = styles.iconPressed, _b[\":active .\" + classNames.msButtonDescription] = styles.descriptionPressed, _b[\":active .\" + classNames.msButtonMenuIcon] = styles.menuIconPressed, _b)\n    }, disabled && checked && [styles.rootCheckedDisabled], !disabled && checked && {\n      selectors: {\n        ':hover': styles.rootCheckedHovered,\n        ':active': styles.rootCheckedPressed\n      }\n    }, className],\n    flexContainer: [classNames.msButtonFlexContainer, styles.flexContainer],\n    textContainer: [classNames.msButtonTextContainer, styles.textContainer],\n    icon: [classNames.msButtonIcon, iconClassName, styles.icon, isExpanded && styles.iconExpanded, checked && styles.iconChecked, disabled && styles.iconDisabled],\n    label: [classNames.msButtonLabel, styles.label, checked && styles.labelChecked, disabled && styles.labelDisabled],\n    menuIcon: [classNames.msButtonMenuIcon, menuIconClassName, styles.menuIcon, checked && styles.menuIconChecked, disabled && !isSplit && styles.menuIconDisabled, !disabled && !isExpanded && !checked && {\n      selectors: {\n        ':hover': styles.menuIconHovered,\n        ':active': styles.menuIconPressed\n      }\n    }, isExpanded && ['is-expanded', styles.menuIconExpanded]],\n    description: [classNames.msButtonDescription, styles.description, checked && styles.descriptionChecked, disabled && styles.descriptionDisabled],\n    screenReaderText: [classNames.msButtonScreenReaderText, styles.screenReaderText]\n  });\n});","map":{"version":3,"mappings":"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","names":["memoizeFunction","mergeStyleSets","getGlobalClassNames","ButtonGlobalClassNames","msButton","msButtonHasMenu","msButtonIcon","msButtonMenuIcon","msButtonLabel","msButtonDescription","msButtonScreenReaderText","msButtonFlexContainer","msButtonTextContainer","getBaseButtonClassNames","theme","styles","className","variantClassName","iconClassName","menuIconClassName","disabled","hasMenu","checked","expanded","isSplit","classNames","isExpanded","root","rootChecked","rootExpanded","selectors","_a","iconExpandedHovered","menuIconExpandedHovered","rootExpandedHovered","rootHasMenu","rootDisabled","rootHovered","_b","labelHovered","iconHovered","descriptionHovered","menuIconHovered","rootFocused","rootPressed","iconPressed","descriptionPressed","menuIconPressed","rootCheckedDisabled","rootCheckedHovered","rootCheckedPressed","flexContainer","textContainer","icon","iconExpanded","iconChecked","iconDisabled","label","labelChecked","labelDisabled","menuIcon","menuIconChecked","menuIconDisabled","menuIconExpanded","description","descriptionChecked","descriptionDisabled","screenReaderText"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\office-ui-fabric-react\\lib\\components\\src\\components\\Button\\BaseButton.classNames.ts"],"sourcesContent":["import { memoizeFunction } from '../../Utilities';\nimport { ITheme, mergeStyleSets } from '../../Styling';\nimport { IButtonStyles } from './Button.types';\nimport { getGlobalClassNames } from '../../Styling';\n\nexport interface IButtonClassNames {\n  root?: string;\n  flexContainer?: string;\n  textContainer?: string;\n  icon?: string;\n  label?: string;\n  menuIcon?: string;\n  description?: string;\n  screenReaderText?: string;\n}\n\nexport const ButtonGlobalClassNames = {\n  msButton: 'ms-Button',\n  msButtonHasMenu: 'ms-Button--hasMenu',\n  msButtonIcon: 'ms-Button-icon',\n  msButtonMenuIcon: 'ms-Button-menuIcon',\n  msButtonLabel: 'ms-Button-label',\n  msButtonDescription: 'ms-Button-description',\n  msButtonScreenReaderText: 'ms-Button-screenReaderText',\n  msButtonFlexContainer: 'ms-Button-flexContainer',\n  msButtonTextContainer: 'ms-Button-textContainer',\n};\n\nexport const getBaseButtonClassNames = memoizeFunction(\n  (\n    theme: ITheme,\n    styles: IButtonStyles,\n    className: string,\n    variantClassName: string,\n    iconClassName: string | undefined,\n    menuIconClassName: string | undefined,\n    disabled: boolean,\n    hasMenu: boolean,\n    checked: boolean,\n    expanded: boolean,\n    isSplit: boolean | undefined,\n  ): IButtonClassNames => {\n    const classNames = getGlobalClassNames(ButtonGlobalClassNames, theme || {});\n\n    const isExpanded = expanded && !isSplit;\n    return mergeStyleSets({\n      root: [\n        classNames.msButton,\n        styles.root,\n        variantClassName,\n        checked && ['is-checked', styles.rootChecked],\n        isExpanded && [\n          'is-expanded',\n          styles.rootExpanded,\n          {\n            selectors: {\n              [`:hover .${classNames.msButtonIcon}`]: styles.iconExpandedHovered,\n              // menuIcon falls back to rootExpandedHovered to support original behavior\n              [`:hover .${classNames.msButtonMenuIcon}`]: styles.menuIconExpandedHovered || styles.rootExpandedHovered,\n              ':hover': styles.rootExpandedHovered,\n            },\n          },\n        ],\n        hasMenu && [ButtonGlobalClassNames.msButtonHasMenu, styles.rootHasMenu],\n        disabled && ['is-disabled', styles.rootDisabled],\n        !disabled &&\n          !isExpanded &&\n          !checked && {\n            selectors: {\n              ':hover': styles.rootHovered,\n              [`:hover .${classNames.msButtonLabel}`]: styles.labelHovered,\n              [`:hover .${classNames.msButtonIcon}`]: styles.iconHovered,\n              [`:hover .${classNames.msButtonDescription}`]: styles.descriptionHovered,\n              [`:hover .${classNames.msButtonMenuIcon}`]: styles.menuIconHovered,\n              ':focus': styles.rootFocused,\n              ':active': styles.rootPressed,\n              [`:active .${classNames.msButtonIcon}`]: styles.iconPressed,\n              [`:active .${classNames.msButtonDescription}`]: styles.descriptionPressed,\n              [`:active .${classNames.msButtonMenuIcon}`]: styles.menuIconPressed,\n            },\n          },\n        disabled && checked && [styles.rootCheckedDisabled],\n        !disabled &&\n          checked && {\n            selectors: {\n              ':hover': styles.rootCheckedHovered,\n              ':active': styles.rootCheckedPressed,\n            },\n          },\n        className,\n      ],\n      flexContainer: [classNames.msButtonFlexContainer, styles.flexContainer],\n      textContainer: [classNames.msButtonTextContainer, styles.textContainer],\n      icon: [\n        classNames.msButtonIcon,\n        iconClassName,\n        styles.icon,\n        isExpanded && styles.iconExpanded,\n        checked && styles.iconChecked,\n        disabled && styles.iconDisabled,\n      ],\n      label: [classNames.msButtonLabel, styles.label, checked && styles.labelChecked, disabled && styles.labelDisabled],\n      menuIcon: [\n        classNames.msButtonMenuIcon,\n        menuIconClassName,\n        styles.menuIcon,\n        checked && styles.menuIconChecked,\n        disabled && !isSplit && styles.menuIconDisabled,\n        !disabled &&\n          !isExpanded &&\n          !checked && {\n            selectors: {\n              ':hover': styles.menuIconHovered,\n              ':active': styles.menuIconPressed,\n            },\n          },\n        isExpanded && ['is-expanded', styles.menuIconExpanded],\n      ],\n      description: [\n        classNames.msButtonDescription,\n        styles.description,\n        checked && styles.descriptionChecked,\n        disabled && styles.descriptionDisabled,\n      ],\n      screenReaderText: [classNames.msButtonScreenReaderText, styles.screenReaderText],\n    });\n  },\n);\n"]},"metadata":{},"sourceType":"module"}