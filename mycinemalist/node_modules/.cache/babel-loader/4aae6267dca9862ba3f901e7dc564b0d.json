{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { SpinnerSize } from './Spinner.types';\nimport { hiddenContentStyle, keyframes, HighContrastSelector, getGlobalClassNames, getEdgeChromiumNoHighContrastAdjustSelector } from '../../Styling';\nimport { memoizeFunction } from '../../Utilities';\nvar GlobalClassNames = {\n  root: 'ms-Spinner',\n  circle: 'ms-Spinner-circle',\n  label: 'ms-Spinner-label'\n};\nvar spinAnimation = memoizeFunction(function () {\n  return keyframes({\n    '0%': {\n      transform: 'rotate(0deg)'\n    },\n    '100%': {\n      transform: 'rotate(360deg)'\n    }\n  });\n});\nexport var getStyles = function getStyles(props) {\n  var _a;\n\n  var theme = props.theme,\n      size = props.size,\n      className = props.className,\n      labelPosition = props.labelPosition;\n  var palette = theme.palette;\n  var classNames = getGlobalClassNames(GlobalClassNames, theme);\n  return {\n    root: [classNames.root, {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center'\n    }, labelPosition === 'top' && {\n      flexDirection: 'column-reverse'\n    }, labelPosition === 'right' && {\n      flexDirection: 'row'\n    }, labelPosition === 'left' && {\n      flexDirection: 'row-reverse'\n    }, className],\n    circle: [classNames.circle, {\n      boxSizing: 'border-box',\n      borderRadius: '50%',\n      border: '1.5px solid ' + palette.themeLight,\n      borderTopColor: palette.themePrimary,\n      animationName: spinAnimation(),\n      animationDuration: '1.3s',\n      animationIterationCount: 'infinite',\n      animationTimingFunction: 'cubic-bezier(.53,.21,.29,.67)',\n      selectors: __assign((_a = {}, _a[HighContrastSelector] = {\n        borderTopColor: 'Highlight'\n      }, _a), getEdgeChromiumNoHighContrastAdjustSelector())\n    }, size === SpinnerSize.xSmall && ['ms-Spinner--xSmall', {\n      width: 12,\n      height: 12\n    }], size === SpinnerSize.small && ['ms-Spinner--small', {\n      width: 16,\n      height: 16\n    }], size === SpinnerSize.medium && ['ms-Spinner--medium', {\n      width: 20,\n      height: 20\n    }], size === SpinnerSize.large && ['ms-Spinner--large', {\n      width: 28,\n      height: 28\n    }]],\n    label: [classNames.label, theme.fonts.small, {\n      color: palette.themePrimary,\n      margin: '8px 0 0',\n      textAlign: 'center'\n    }, labelPosition === 'top' && {\n      margin: '0 0 8px'\n    }, labelPosition === 'right' && {\n      margin: '0 0 0 8px'\n    }, labelPosition === 'left' && {\n      margin: '0 8px 0 0'\n    }],\n    screenReaderText: hiddenContentStyle\n  };\n};","map":{"version":3,"mappings":"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","names":["SpinnerSize","hiddenContentStyle","keyframes","HighContrastSelector","getGlobalClassNames","getEdgeChromiumNoHighContrastAdjustSelector","memoizeFunction","GlobalClassNames","root","circle","label","spinAnimation","transform","getStyles","props","size","className","labelPosition","classNames","theme","display","flexDirection","alignItems","justifyContent","boxSizing","borderRadius","border","palette","themeLight","borderTopColor","themePrimary","animationName","animationDuration","animationIterationCount","animationTimingFunction","selectors","_a","xSmall","width","height","small","medium","large","fonts","color","margin","textAlign","screenReaderText"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\office-ui-fabric-react\\lib\\components\\src\\components\\Spinner\\Spinner.styles.tsx"],"sourcesContent":["import { ISpinnerStyleProps, ISpinnerStyles, SpinnerSize } from './Spinner.types';\nimport {\n  hiddenContentStyle,\n  keyframes,\n  HighContrastSelector,\n  getGlobalClassNames,\n  getEdgeChromiumNoHighContrastAdjustSelector,\n} from '../../Styling';\nimport { memoizeFunction } from '../../Utilities';\n\nconst GlobalClassNames = {\n  root: 'ms-Spinner',\n  circle: 'ms-Spinner-circle',\n  label: 'ms-Spinner-label',\n};\n\nconst spinAnimation = memoizeFunction(() =>\n  keyframes({\n    '0%': {\n      transform: 'rotate(0deg)',\n    },\n    '100%': {\n      transform: 'rotate(360deg)',\n    },\n  }),\n);\n\nexport const getStyles = (props: ISpinnerStyleProps): ISpinnerStyles => {\n  const { theme, size, className, labelPosition } = props;\n\n  const { palette } = theme;\n\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  return {\n    root: [\n      classNames.root,\n      {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n      },\n      labelPosition === 'top' && {\n        flexDirection: 'column-reverse',\n      },\n      labelPosition === 'right' && {\n        flexDirection: 'row',\n      },\n      labelPosition === 'left' && {\n        flexDirection: 'row-reverse',\n      },\n      className,\n    ],\n    circle: [\n      classNames.circle,\n      {\n        boxSizing: 'border-box',\n        borderRadius: '50%',\n        border: '1.5px solid ' + palette.themeLight,\n        borderTopColor: palette.themePrimary,\n        animationName: spinAnimation(),\n        animationDuration: '1.3s',\n        animationIterationCount: 'infinite',\n        animationTimingFunction: 'cubic-bezier(.53,.21,.29,.67)',\n        selectors: {\n          [HighContrastSelector]: {\n            borderTopColor: 'Highlight',\n          },\n          ...getEdgeChromiumNoHighContrastAdjustSelector(),\n        },\n      },\n      size === SpinnerSize.xSmall && [\n        'ms-Spinner--xSmall',\n        {\n          width: 12,\n          height: 12,\n        },\n      ],\n      size === SpinnerSize.small && [\n        'ms-Spinner--small',\n        {\n          width: 16,\n          height: 16,\n        },\n      ],\n      size === SpinnerSize.medium && [\n        'ms-Spinner--medium',\n        {\n          width: 20,\n          height: 20,\n        },\n      ],\n      size === SpinnerSize.large && [\n        'ms-Spinner--large',\n        {\n          width: 28,\n          height: 28,\n        },\n      ],\n    ],\n    label: [\n      classNames.label,\n      theme.fonts.small,\n      {\n        color: palette.themePrimary,\n        margin: '8px 0 0',\n        textAlign: 'center',\n      },\n      labelPosition === 'top' && {\n        margin: '0 0 8px',\n      },\n      labelPosition === 'right' && {\n        margin: '0 0 0 8px',\n      },\n      labelPosition === 'left' && {\n        margin: '0 8px 0 0',\n      },\n    ],\n    screenReaderText: hiddenContentStyle,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}