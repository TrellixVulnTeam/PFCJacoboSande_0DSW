{"ast":null,"code":"import { merge } from '@uifabric/utilities';\nimport { getSemanticColors } from './utilities/makeSemanticColors';\n/**\n * Merge a partial/full theme into a full theme and returns a merged full theme.\n */\n\nexport function mergeThemes(theme, partialTheme) {\n  if (partialTheme === void 0) {\n    partialTheme = {};\n  }\n\n  var _a, _b, _c, _d;\n\n  var mergedTheme = merge({}, theme, partialTheme, {\n    semanticColors: getSemanticColors(partialTheme.palette, partialTheme.effects, partialTheme.semanticColors, partialTheme.isInverted === undefined ? theme.isInverted : partialTheme.isInverted)\n  });\n\n  if (((_a = partialTheme.palette) === null || _a === void 0 ? void 0 : _a.themePrimary) && !((_b = partialTheme.palette) === null || _b === void 0 ? void 0 : _b.accent)) {\n    mergedTheme.palette.accent = partialTheme.palette.themePrimary;\n  }\n\n  if (partialTheme.defaultFontStyle) {\n    for (var _i = 0, _e = Object.keys(mergedTheme.fonts); _i < _e.length; _i++) {\n      var fontStyle = _e[_i];\n      mergedTheme.fonts[fontStyle] = merge(mergedTheme.fonts[fontStyle], partialTheme.defaultFontStyle, (_d = (_c = partialTheme) === null || _c === void 0 ? void 0 : _c.fonts) === null || _d === void 0 ? void 0 : _d[fontStyle]);\n    }\n  }\n\n  if (partialTheme.stylesheets) {\n    mergedTheme.stylesheets = (theme.stylesheets || []).concat(partialTheme.stylesheets);\n  }\n\n  return mergedTheme;\n}","map":{"version":3,"mappings":"AAAA,SAASA,KAAT,QAAsB,qBAAtB;AAEA,SAASC,iBAAT,QAAkC,gCAAlC;AAEA;;;;AAGA,OAAM,SAAUC,WAAV,CAAsBC,KAAtB,EAAoCC,YAApC,EAAmE;EAA/B;IAAAA;EAA+B;;;;EACvE,IAAMC,WAAW,GAAGL,KAAK,CAAuB,EAAvB,EAA2BG,KAA3B,EAAkCC,YAAlC,EAAgD;IACvEE,cAAc,EAAEL,iBAAiB,CAC/BG,YAAY,CAACG,OADkB,EAE/BH,YAAY,CAACI,OAFkB,EAG/BJ,YAAY,CAACE,cAHkB,EAI/BF,YAAY,CAACK,UAAb,KAA4BC,SAA5B,GAAwCP,KAAK,CAACM,UAA9C,GAA2DL,YAAY,CAACK,UAJzC;EADsC,CAAhD,CAAzB;;EASA,IAAI,mBAAY,CAACF,OAAb,MAAoB,IAApB,IAAoBI,aAApB,GAAoB,MAApB,GAAoBA,GAAEC,YAAtB,KAAsC,QAACR,YAAY,CAACG,OAAd,MAAqB,IAArB,IAAqBM,aAArB,GAAqB,MAArB,GAAqBA,GAAEC,MAAvB,CAA1C,EAAyE;IACvET,WAAW,CAACE,OAAZ,CAAoBO,MAApB,GAA6BV,YAAY,CAACG,OAAb,CAAqBK,YAAlD;EACD;;EAED,IAAIR,YAAY,CAACW,gBAAjB,EAAmC;IACjC,KAAwB,uBAAM,CAACC,IAAP,CAAYX,WAAW,CAACY,KAAxB,CAAxB,EAAwBC,cAAxB,EAAwBA,IAAxB,EAAiF;MAA5E,IAAMC,SAAS,SAAf;MACHd,WAAW,CAACY,KAAZ,CAAkBE,SAAlB,IAA+BnB,KAAK,CAClCK,WAAW,CAACY,KAAZ,CAAkBE,SAAlB,CADkC,EAElCf,YAAY,CAACW,gBAFqB,EAEL,YAC7BX,YAD6B,MACjB,IADiB,IACjBgB,aADiB,GACjB,MADiB,GACjBA,GAAEH,KADe,MACV,IADU,IACVI,aADU,GACV,MADU,GACVA,GAAGF,SAAH,CAHe,CAApC;IAKD;EACF;;EAED,IAAIf,YAAY,CAACkB,WAAjB,EAA8B;IAC5BjB,WAAW,CAACiB,WAAZ,GAA0B,CAACnB,KAAK,CAACmB,WAAN,IAAqB,EAAtB,EAA0BC,MAA1B,CAAiCnB,YAAY,CAACkB,WAA9C,CAA1B;EACD;;EAED,OAAOjB,WAAP;AACD","names":["merge","getSemanticColors","mergeThemes","theme","partialTheme","mergedTheme","semanticColors","palette","effects","isInverted","undefined","_a","themePrimary","_b","accent","defaultFontStyle","keys","fonts","_i","fontStyle","_c","_d","stylesheets","concat"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\office-ui-fabric-react\\node_modules\\@fluentui\\theme\\src\\mergeThemes.ts"],"sourcesContent":["import { merge } from '@uifabric/utilities';\nimport { IFontStyles, PartialTheme, Theme } from './types/index';\nimport { getSemanticColors } from './utilities/makeSemanticColors';\n\n/**\n * Merge a partial/full theme into a full theme and returns a merged full theme.\n */\nexport function mergeThemes(theme: Theme, partialTheme: PartialTheme = {}): Theme {\n  const mergedTheme = merge<Theme | PartialTheme>({}, theme, partialTheme, {\n    semanticColors: getSemanticColors(\n      partialTheme.palette,\n      partialTheme.effects,\n      partialTheme.semanticColors,\n      partialTheme.isInverted === undefined ? theme.isInverted : partialTheme.isInverted,\n    ),\n  }) as Theme;\n\n  if (partialTheme.palette?.themePrimary && !partialTheme.palette?.accent) {\n    mergedTheme.palette.accent = partialTheme.palette.themePrimary;\n  }\n\n  if (partialTheme.defaultFontStyle) {\n    for (const fontStyle of Object.keys(mergedTheme.fonts) as (keyof IFontStyles)[]) {\n      mergedTheme.fonts[fontStyle] = merge(\n        mergedTheme.fonts[fontStyle],\n        partialTheme.defaultFontStyle,\n        partialTheme?.fonts?.[fontStyle],\n      );\n    }\n  }\n\n  if (partialTheme.stylesheets) {\n    mergedTheme.stylesheets = (theme.stylesheets || []).concat(partialTheme.stylesheets);\n  }\n\n  return mergedTheme;\n}\n"]},"metadata":{},"sourceType":"module"}