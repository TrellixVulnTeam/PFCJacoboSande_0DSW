{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { HighContrastSelector, getGlobalClassNames, getEdgeChromiumNoHighContrastAdjustSelector } from '../../../Styling';\nimport { IsFocusVisibleClassName } from '../../../Utilities';\nvar GlobalClassNames = {\n  root: 'ms-ChoiceField',\n  choiceFieldWrapper: 'ms-ChoiceField-wrapper',\n  input: 'ms-ChoiceField-input',\n  field: 'ms-ChoiceField-field',\n  innerField: 'ms-ChoiceField-innerField',\n  imageWrapper: 'ms-ChoiceField-imageWrapper',\n  iconWrapper: 'ms-ChoiceField-iconWrapper',\n  labelWrapper: 'ms-ChoiceField-labelWrapper',\n  checked: 'is-checked'\n};\nvar labelWrapperLineHeight = 15;\nvar labelWrapperHeight = labelWrapperLineHeight * 2 + 2; // adding 2px height to ensure text doesn't get cutoff\n\nvar iconSize = 32;\nvar choiceFieldSize = 20;\nvar choiceFieldTransitionDuration = '200ms';\nvar choiceFieldTransitionTiming = 'cubic-bezier(.4, 0, .23, 1)';\nvar radioButtonSpacing = 3;\nvar radioButtonInnerSize = 5;\n\nfunction getChoiceGroupFocusStyle(focusBorderColor, hasIconOrImage) {\n  var _a, _b;\n\n  return ['is-inFocus', {\n    selectors: (_a = {}, _a[\".\" + IsFocusVisibleClassName + \" &\"] = {\n      position: 'relative',\n      outline: 'transparent',\n      selectors: {\n        '::-moz-focus-inner': {\n          border: 0\n        },\n        ':after': {\n          content: '\"\"',\n          top: -2,\n          right: -2,\n          bottom: -2,\n          left: -2,\n          pointerEvents: 'none',\n          border: \"1px solid \" + focusBorderColor,\n          position: 'absolute',\n          selectors: (_b = {}, _b[HighContrastSelector] = {\n            borderColor: 'WindowText',\n            borderWidth: hasIconOrImage ? 1 : 2\n          }, _b)\n        }\n      }\n    }, _a)\n  }];\n}\n\nfunction getImageWrapperStyle(isSelectedImageWrapper, className, checked) {\n  return [className, {\n    paddingBottom: 2,\n    transitionProperty: 'opacity',\n    transitionDuration: choiceFieldTransitionDuration,\n    transitionTimingFunction: 'ease',\n    selectors: {\n      '.ms-Image': {\n        display: 'inline-block',\n        borderStyle: 'none'\n      }\n    }\n  }, (checked ? !isSelectedImageWrapper : isSelectedImageWrapper) && ['is-hidden', {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    width: '100%',\n    height: '100%',\n    overflow: 'hidden',\n    opacity: 0\n  }]];\n}\n\nexport var getStyles = function getStyles(props) {\n  var _a, _b, _c, _d, _e;\n\n  var theme = props.theme,\n      hasIcon = props.hasIcon,\n      hasImage = props.hasImage,\n      checked = props.checked,\n      disabled = props.disabled,\n      imageIsLarge = props.imageIsLarge,\n      focused = props.focused,\n      imageSize = props.imageSize;\n  var palette = theme.palette,\n      semanticColors = theme.semanticColors,\n      fonts = theme.fonts;\n  var classNames = getGlobalClassNames(GlobalClassNames, theme); // Tokens\n  // TODO: after updating the semanticColors slots mapping this needs to be semanticColors.smallInputBorder\n\n  var circleBorderColor = palette.neutralPrimary;\n  var circleHoveredBorderColor = semanticColors.inputBorderHovered;\n  var circleCheckedBorderColor = semanticColors.inputBackgroundChecked; // TODO: after updating the semanticColors slots mapping this needs to be semanticColors.inputBackgroundCheckedHovered\n\n  var circleCheckedHoveredBorderColor = palette.themeDark;\n  var circleDisabledBorderColor = semanticColors.disabledBodySubtext;\n  var circleBackgroundColor = semanticColors.bodyBackground;\n  var dotUncheckedHoveredColor = palette.neutralSecondary;\n  var dotCheckedColor = semanticColors.inputBackgroundChecked; // TODO: after updating the semanticColors slots mapping this needs to be semanticColors.inputBackgroundCheckedHovered\n\n  var dotCheckedHoveredColor = palette.themeDark;\n  var dotDisabledColor = semanticColors.disabledBodySubtext; // TODO: after updating the semanticColors slots mapping this needs to be semanticColors.bodyTextChecked\n\n  var labelHoverFocusColor = palette.neutralDark;\n  var focusBorderColor = semanticColors.focusBorder;\n  var iconOrImageChoiceBorderUncheckedHoveredColor = semanticColors.inputBorderHovered; // TODO: after updating the semanticColors slots mapping this needs to be semanticColors.inputBackgroundCheckedHovered\n\n  var iconOrImageChoiceBorderCheckedColor = semanticColors.inputBackgroundChecked;\n  var iconOrImageChoiceBorderCheckedHoveredColor = palette.themeDark;\n  var iconOrImageChoiceBackgroundColor = palette.neutralLighter;\n  var fieldHoverOrFocusProperties = {\n    selectors: {\n      '.ms-ChoiceFieldLabel': {\n        color: labelHoverFocusColor\n      },\n      ':before': {\n        borderColor: checked ? circleCheckedHoveredBorderColor : circleHoveredBorderColor\n      },\n      ':after': [!hasIcon && !hasImage && !checked && {\n        content: '\"\"',\n        transitionProperty: 'background-color',\n        left: 5,\n        top: 5,\n        width: 10,\n        height: 10,\n        backgroundColor: dotUncheckedHoveredColor\n      }, checked && {\n        borderColor: dotCheckedHoveredColor\n      }]\n    }\n  };\n  var enabledFieldWithImageHoverOrFocusProperties = {\n    borderColor: checked ? iconOrImageChoiceBorderCheckedHoveredColor : iconOrImageChoiceBorderUncheckedHoveredColor,\n    selectors: {\n      ':before': {\n        opacity: 1,\n        borderColor: checked ? circleCheckedHoveredBorderColor : circleHoveredBorderColor\n      }\n    }\n  };\n  var circleAreaProperties = [{\n    content: '\"\"',\n    display: 'inline-block',\n    backgroundColor: circleBackgroundColor,\n    borderWidth: 1,\n    borderStyle: 'solid',\n    borderColor: circleBorderColor,\n    width: choiceFieldSize,\n    height: choiceFieldSize,\n    fontWeight: 'normal',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    boxSizing: 'border-box',\n    transitionProperty: 'border-color',\n    transitionDuration: choiceFieldTransitionDuration,\n    transitionTimingFunction: choiceFieldTransitionTiming,\n    borderRadius: '50%'\n  }, disabled && {\n    borderColor: circleDisabledBorderColor,\n    selectors: __assign((_a = {}, _a[HighContrastSelector] = {\n      borderColor: 'GrayText',\n      background: 'Window'\n    }, _a), getEdgeChromiumNoHighContrastAdjustSelector())\n  }, checked && {\n    borderColor: disabled ? circleDisabledBorderColor : circleCheckedBorderColor,\n    selectors: __assign((_b = {}, _b[HighContrastSelector] = {\n      borderColor: 'Highlight',\n      background: 'Window'\n    }, _b), getEdgeChromiumNoHighContrastAdjustSelector())\n  }, (hasIcon || hasImage) && {\n    top: radioButtonSpacing,\n    right: radioButtonSpacing,\n    left: 'auto',\n    opacity: checked ? 1 : 0\n  }];\n  var dotAreaProperties = [{\n    content: '\"\"',\n    width: 0,\n    height: 0,\n    borderRadius: '50%',\n    position: 'absolute',\n    left: choiceFieldSize / 2,\n    right: 0,\n    transitionProperty: 'border-width',\n    transitionDuration: choiceFieldTransitionDuration,\n    transitionTimingFunction: choiceFieldTransitionTiming,\n    boxSizing: 'border-box'\n  }, checked && {\n    borderWidth: 5,\n    borderStyle: 'solid',\n    borderColor: disabled ? dotDisabledColor : dotCheckedColor,\n    left: 5,\n    top: 5,\n    width: 10,\n    height: 10,\n    selectors: __assign((_c = {}, _c[HighContrastSelector] = {\n      borderColor: 'Highlight'\n    }, _c), getEdgeChromiumNoHighContrastAdjustSelector())\n  }, checked && (hasIcon || hasImage) && {\n    top: radioButtonSpacing + radioButtonInnerSize,\n    right: radioButtonSpacing + radioButtonInnerSize,\n    left: 'auto'\n  }];\n  return {\n    root: [classNames.root, theme.fonts.medium, {\n      display: 'flex',\n      alignItems: 'center',\n      boxSizing: 'border-box',\n      color: semanticColors.bodyText,\n      minHeight: 26,\n      border: 'none',\n      position: 'relative',\n      marginTop: 8,\n      selectors: {\n        '.ms-ChoiceFieldLabel': {\n          display: 'inline-block'\n        }\n      }\n    }, !hasIcon && !hasImage && {\n      selectors: {\n        '.ms-ChoiceFieldLabel': {\n          paddingLeft: '26px'\n        }\n      }\n    }, hasImage && 'ms-ChoiceField--image', hasIcon && 'ms-ChoiceField--icon', (hasIcon || hasImage) && {\n      display: 'inline-flex',\n      fontSize: 0,\n      margin: '0 4px 4px 0',\n      paddingLeft: 0,\n      backgroundColor: iconOrImageChoiceBackgroundColor,\n      height: '100%'\n    }],\n    choiceFieldWrapper: [classNames.choiceFieldWrapper, focused && getChoiceGroupFocusStyle(focusBorderColor, hasIcon || hasImage)],\n    // The hidden input\n    input: [classNames.input, {\n      position: 'absolute',\n      opacity: 0,\n      top: 0,\n      right: 0,\n      width: '100%',\n      height: '100%',\n      margin: 0\n    }, disabled && 'is-disabled'],\n    field: [classNames.field, checked && classNames.checked, {\n      display: 'inline-block',\n      cursor: 'pointer',\n      marginTop: 0,\n      position: 'relative',\n      verticalAlign: 'top',\n      userSelect: 'none',\n      minHeight: 20,\n      selectors: {\n        ':hover': !disabled && fieldHoverOrFocusProperties,\n        ':focus': !disabled && fieldHoverOrFocusProperties,\n        // The circle\n        ':before': circleAreaProperties,\n        // The dot\n        ':after': dotAreaProperties\n      }\n    }, hasIcon && 'ms-ChoiceField--icon', hasImage && 'ms-ChoiceField-field--image', (hasIcon || hasImage) && {\n      boxSizing: 'content-box',\n      cursor: 'pointer',\n      paddingTop: 22,\n      margin: 0,\n      textAlign: 'center',\n      transitionProperty: 'all',\n      transitionDuration: choiceFieldTransitionDuration,\n      transitionTimingFunction: 'ease',\n      border: '1px solid transparent',\n      justifyContent: 'center',\n      alignItems: 'center',\n      display: 'flex',\n      flexDirection: 'column'\n    }, checked && {\n      borderColor: iconOrImageChoiceBorderCheckedColor\n    }, (hasIcon || hasImage) && !disabled && {\n      selectors: {\n        ':hover': enabledFieldWithImageHoverOrFocusProperties,\n        ':focus': enabledFieldWithImageHoverOrFocusProperties\n      }\n    }, disabled && {\n      cursor: 'default',\n      selectors: {\n        '.ms-ChoiceFieldLabel': {\n          color: semanticColors.disabledBodyText,\n          selectors: __assign((_d = {}, _d[HighContrastSelector] = {\n            color: 'GrayText'\n          }, _d), getEdgeChromiumNoHighContrastAdjustSelector())\n        }\n      }\n    }, checked && disabled && {\n      borderColor: iconOrImageChoiceBackgroundColor\n    }],\n    innerField: [classNames.innerField, hasImage && {\n      // using non-null assertion because we have a default in `ChoiceGroupOptionBase` class.\n      height: imageSize.height,\n      width: imageSize.width\n    }, (hasIcon || hasImage) && {\n      position: 'relative',\n      display: 'inline-block',\n      paddingLeft: 30,\n      paddingRight: 30\n    }, (hasIcon || hasImage) && imageIsLarge && {\n      paddingLeft: 24,\n      paddingRight: 24\n    }, (hasIcon || hasImage) && disabled && {\n      opacity: 0.25,\n      selectors: (_e = {}, _e[HighContrastSelector] = {\n        color: 'GrayText',\n        opacity: 1\n      }, _e)\n    }],\n    imageWrapper: getImageWrapperStyle(false, classNames.imageWrapper, checked),\n    selectedImageWrapper: getImageWrapperStyle(true, classNames.imageWrapper, checked),\n    iconWrapper: [classNames.iconWrapper, {\n      fontSize: iconSize,\n      lineHeight: iconSize,\n      height: iconSize\n    }],\n    labelWrapper: [classNames.labelWrapper, fonts.medium, (hasIcon || hasImage) && {\n      display: 'block',\n      position: 'relative',\n      margin: '4px 8px 2px 8px',\n      height: labelWrapperHeight,\n      lineHeight: labelWrapperLineHeight,\n      // using non-null assertion because we have a default in `ChoiceGroupOptionBase` class.\n      maxWidth: imageSize.width * 2,\n      overflow: 'hidden',\n      whiteSpace: 'pre-wrap'\n    }]\n  };\n};","map":{"version":3,"mappings":"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","names":["HighContrastSelector","getGlobalClassNames","getEdgeChromiumNoHighContrastAdjustSelector","IsFocusVisibleClassName","GlobalClassNames","root","choiceFieldWrapper","input","field","innerField","imageWrapper","iconWrapper","labelWrapper","checked","labelWrapperLineHeight","labelWrapperHeight","iconSize","choiceFieldSize","choiceFieldTransitionDuration","choiceFieldTransitionTiming","radioButtonSpacing","radioButtonInnerSize","getChoiceGroupFocusStyle","focusBorderColor","hasIconOrImage","selectors","_a","position","outline","border","content","top","right","bottom","left","pointerEvents","_b","borderColor","borderWidth","getImageWrapperStyle","isSelectedImageWrapper","className","paddingBottom","transitionProperty","transitionDuration","transitionTimingFunction","display","borderStyle","width","height","overflow","opacity","getStyles","props","hasIcon","hasImage","disabled","imageIsLarge","focused","imageSize","semanticColors","fonts","classNames","theme","circleBorderColor","palette","neutralPrimary","circleHoveredBorderColor","inputBorderHovered","circleCheckedBorderColor","inputBackgroundChecked","circleCheckedHoveredBorderColor","themeDark","circleDisabledBorderColor","disabledBodySubtext","circleBackgroundColor","bodyBackground","dotUncheckedHoveredColor","neutralSecondary","dotCheckedColor","dotCheckedHoveredColor","dotDisabledColor","labelHoverFocusColor","neutralDark","focusBorder","iconOrImageChoiceBorderUncheckedHoveredColor","iconOrImageChoiceBorderCheckedColor","iconOrImageChoiceBorderCheckedHoveredColor","iconOrImageChoiceBackgroundColor","neutralLighter","fieldHoverOrFocusProperties","color","backgroundColor","enabledFieldWithImageHoverOrFocusProperties","circleAreaProperties","fontWeight","boxSizing","borderRadius","background","dotAreaProperties","_c","medium","alignItems","bodyText","minHeight","marginTop","paddingLeft","fontSize","margin","cursor","verticalAlign","userSelect","paddingTop","textAlign","justifyContent","flexDirection","disabledBodyText","_d","paddingRight","_e","selectedImageWrapper","lineHeight","maxWidth","whiteSpace"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\office-ui-fabric-react\\lib\\components\\ChoiceGroup\\src\\components\\ChoiceGroup\\ChoiceGroupOption\\ChoiceGroupOption.styles.ts"],"sourcesContent":["import {\n  HighContrastSelector,\n  IStyle,\n  getGlobalClassNames,\n  getEdgeChromiumNoHighContrastAdjustSelector,\n} from '../../../Styling';\nimport { IsFocusVisibleClassName } from '../../../Utilities';\nimport { IChoiceGroupOptionStyleProps, IChoiceGroupOptionStyles } from './ChoiceGroupOption.types';\n\nconst GlobalClassNames = {\n  root: 'ms-ChoiceField',\n  choiceFieldWrapper: 'ms-ChoiceField-wrapper',\n  input: 'ms-ChoiceField-input',\n  field: 'ms-ChoiceField-field',\n  innerField: 'ms-ChoiceField-innerField',\n  imageWrapper: 'ms-ChoiceField-imageWrapper',\n  iconWrapper: 'ms-ChoiceField-iconWrapper',\n  labelWrapper: 'ms-ChoiceField-labelWrapper',\n  checked: 'is-checked',\n};\n\nconst labelWrapperLineHeight = 15;\nconst labelWrapperHeight = labelWrapperLineHeight * 2 + 2; // adding 2px height to ensure text doesn't get cutoff\nconst iconSize = 32;\nconst choiceFieldSize = 20;\nconst choiceFieldTransitionDuration = '200ms';\nconst choiceFieldTransitionTiming = 'cubic-bezier(.4, 0, .23, 1)';\nconst radioButtonSpacing = 3;\nconst radioButtonInnerSize = 5;\n\nfunction getChoiceGroupFocusStyle(focusBorderColor: string, hasIconOrImage?: boolean): IStyle {\n  return [\n    'is-inFocus',\n    {\n      selectors: {\n        [`.${IsFocusVisibleClassName} &`]: {\n          position: 'relative',\n          outline: 'transparent',\n          selectors: {\n            '::-moz-focus-inner': {\n              border: 0,\n            },\n            ':after': {\n              content: '\"\"',\n              top: -2,\n              right: -2,\n              bottom: -2,\n              left: -2,\n              pointerEvents: 'none',\n              border: `1px solid ${focusBorderColor}`,\n              position: 'absolute',\n              selectors: {\n                [HighContrastSelector]: {\n                  borderColor: 'WindowText',\n                  borderWidth: hasIconOrImage ? 1 : 2,\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  ];\n}\n\nfunction getImageWrapperStyle(isSelectedImageWrapper: boolean, className?: string, checked?: boolean): IStyle {\n  return [\n    className,\n    {\n      paddingBottom: 2,\n      transitionProperty: 'opacity',\n      transitionDuration: choiceFieldTransitionDuration,\n      transitionTimingFunction: 'ease',\n      selectors: {\n        '.ms-Image': {\n          display: 'inline-block',\n          borderStyle: 'none',\n        },\n      },\n    },\n    (checked ? !isSelectedImageWrapper : isSelectedImageWrapper) && [\n      'is-hidden',\n      {\n        position: 'absolute',\n        left: 0,\n        top: 0,\n        width: '100%',\n        height: '100%',\n        overflow: 'hidden',\n        opacity: 0,\n      },\n    ],\n  ];\n}\n\nexport const getStyles = (props: IChoiceGroupOptionStyleProps): IChoiceGroupOptionStyles => {\n  const { theme, hasIcon, hasImage, checked, disabled, imageIsLarge, focused, imageSize } = props;\n  const { palette, semanticColors, fonts } = theme;\n\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  // Tokens\n  // TODO: after updating the semanticColors slots mapping this needs to be semanticColors.smallInputBorder\n  const circleBorderColor = palette.neutralPrimary;\n  const circleHoveredBorderColor = semanticColors.inputBorderHovered;\n  const circleCheckedBorderColor = semanticColors.inputBackgroundChecked;\n  // TODO: after updating the semanticColors slots mapping this needs to be semanticColors.inputBackgroundCheckedHovered\n  const circleCheckedHoveredBorderColor = palette.themeDark;\n  const circleDisabledBorderColor = semanticColors.disabledBodySubtext;\n  const circleBackgroundColor = semanticColors.bodyBackground;\n  const dotUncheckedHoveredColor = palette.neutralSecondary;\n  const dotCheckedColor = semanticColors.inputBackgroundChecked;\n  // TODO: after updating the semanticColors slots mapping this needs to be semanticColors.inputBackgroundCheckedHovered\n  const dotCheckedHoveredColor = palette.themeDark;\n  const dotDisabledColor = semanticColors.disabledBodySubtext;\n  // TODO: after updating the semanticColors slots mapping this needs to be semanticColors.bodyTextChecked\n  const labelHoverFocusColor = palette.neutralDark;\n  const focusBorderColor = semanticColors.focusBorder;\n  const iconOrImageChoiceBorderUncheckedHoveredColor = semanticColors.inputBorderHovered;\n  // TODO: after updating the semanticColors slots mapping this needs to be semanticColors.inputBackgroundCheckedHovered\n  const iconOrImageChoiceBorderCheckedColor = semanticColors.inputBackgroundChecked;\n  const iconOrImageChoiceBorderCheckedHoveredColor = palette.themeDark;\n  const iconOrImageChoiceBackgroundColor = palette.neutralLighter;\n\n  const fieldHoverOrFocusProperties = {\n    selectors: {\n      '.ms-ChoiceFieldLabel': {\n        color: labelHoverFocusColor,\n      },\n      ':before': {\n        borderColor: checked ? circleCheckedHoveredBorderColor : circleHoveredBorderColor,\n      },\n      ':after': [\n        !hasIcon &&\n          !hasImage &&\n          !checked && {\n            content: '\"\"',\n            transitionProperty: 'background-color',\n            left: 5,\n            top: 5,\n            width: 10,\n            height: 10,\n            backgroundColor: dotUncheckedHoveredColor,\n          },\n        checked && {\n          borderColor: dotCheckedHoveredColor,\n        },\n      ],\n    },\n  };\n\n  const enabledFieldWithImageHoverOrFocusProperties = {\n    borderColor: checked ? iconOrImageChoiceBorderCheckedHoveredColor : iconOrImageChoiceBorderUncheckedHoveredColor,\n    selectors: {\n      ':before': {\n        opacity: 1,\n        borderColor: checked ? circleCheckedHoveredBorderColor : circleHoveredBorderColor,\n      },\n    },\n  };\n\n  const circleAreaProperties: IStyle = [\n    {\n      content: '\"\"',\n      display: 'inline-block',\n      backgroundColor: circleBackgroundColor,\n      borderWidth: 1,\n      borderStyle: 'solid',\n      borderColor: circleBorderColor,\n      width: choiceFieldSize,\n      height: choiceFieldSize,\n      fontWeight: 'normal',\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      boxSizing: 'border-box',\n      transitionProperty: 'border-color',\n      transitionDuration: choiceFieldTransitionDuration,\n      transitionTimingFunction: choiceFieldTransitionTiming,\n      borderRadius: '50%',\n    },\n    disabled && {\n      borderColor: circleDisabledBorderColor,\n      selectors: {\n        [HighContrastSelector]: {\n          borderColor: 'GrayText',\n          background: 'Window',\n        },\n        ...getEdgeChromiumNoHighContrastAdjustSelector(),\n      },\n    },\n    checked && {\n      borderColor: disabled ? circleDisabledBorderColor : circleCheckedBorderColor,\n      selectors: {\n        [HighContrastSelector]: {\n          borderColor: 'Highlight',\n          background: 'Window',\n        },\n        ...getEdgeChromiumNoHighContrastAdjustSelector(),\n      },\n    },\n    (hasIcon || hasImage) && {\n      top: radioButtonSpacing,\n      right: radioButtonSpacing,\n      left: 'auto', // To reset the value of 'left' to its default value, so that 'right' works\n      opacity: checked ? 1 : 0,\n    },\n  ];\n\n  const dotAreaProperties: IStyle = [\n    {\n      content: '\"\"',\n      width: 0,\n      height: 0,\n      borderRadius: '50%',\n      position: 'absolute',\n      left: choiceFieldSize / 2,\n      right: 0,\n      transitionProperty: 'border-width',\n      transitionDuration: choiceFieldTransitionDuration,\n      transitionTimingFunction: choiceFieldTransitionTiming,\n      boxSizing: 'border-box',\n    },\n    checked && {\n      borderWidth: 5,\n      borderStyle: 'solid',\n      borderColor: disabled ? dotDisabledColor : dotCheckedColor,\n      left: 5,\n      top: 5,\n      width: 10,\n      height: 10,\n      selectors: {\n        [HighContrastSelector]: {\n          borderColor: 'Highlight',\n        },\n        ...getEdgeChromiumNoHighContrastAdjustSelector(),\n      },\n    },\n    checked &&\n      (hasIcon || hasImage) && {\n        top: radioButtonSpacing + radioButtonInnerSize,\n        right: radioButtonSpacing + radioButtonInnerSize,\n        left: 'auto', // To reset the value of 'left' to its default value, so that 'right' works\n      },\n  ];\n\n  return {\n    root: [\n      classNames.root,\n      theme.fonts.medium,\n      {\n        display: 'flex',\n        alignItems: 'center',\n        boxSizing: 'border-box',\n        color: semanticColors.bodyText,\n        minHeight: 26,\n        border: 'none',\n        position: 'relative',\n        marginTop: 8,\n        selectors: {\n          '.ms-ChoiceFieldLabel': {\n            display: 'inline-block',\n          },\n        },\n      },\n      !hasIcon &&\n        !hasImage && {\n          selectors: {\n            '.ms-ChoiceFieldLabel': {\n              paddingLeft: '26px',\n            },\n          },\n        },\n      hasImage && 'ms-ChoiceField--image',\n      hasIcon && 'ms-ChoiceField--icon',\n      (hasIcon || hasImage) && {\n        display: 'inline-flex',\n        fontSize: 0,\n        margin: '0 4px 4px 0',\n        paddingLeft: 0,\n        backgroundColor: iconOrImageChoiceBackgroundColor,\n        height: '100%',\n      },\n    ],\n    choiceFieldWrapper: [\n      classNames.choiceFieldWrapper,\n      focused && getChoiceGroupFocusStyle(focusBorderColor, hasIcon || hasImage),\n    ],\n    // The hidden input\n    input: [\n      classNames.input,\n      {\n        position: 'absolute',\n        opacity: 0,\n        top: 0,\n        right: 0,\n        width: '100%',\n        height: '100%',\n        margin: 0,\n      },\n      disabled && 'is-disabled',\n    ],\n    field: [\n      classNames.field,\n      checked && classNames.checked,\n      {\n        display: 'inline-block',\n        cursor: 'pointer',\n        marginTop: 0,\n        position: 'relative',\n        verticalAlign: 'top',\n        userSelect: 'none',\n        minHeight: 20,\n        selectors: {\n          ':hover': !disabled && fieldHoverOrFocusProperties,\n          ':focus': !disabled && fieldHoverOrFocusProperties,\n\n          // The circle\n          ':before': circleAreaProperties,\n\n          // The dot\n          ':after': dotAreaProperties,\n        },\n      },\n      hasIcon && 'ms-ChoiceField--icon',\n      hasImage && 'ms-ChoiceField-field--image',\n      (hasIcon || hasImage) && {\n        boxSizing: 'content-box',\n        cursor: 'pointer',\n        paddingTop: 22,\n        margin: 0,\n        textAlign: 'center',\n        transitionProperty: 'all',\n        transitionDuration: choiceFieldTransitionDuration,\n        transitionTimingFunction: 'ease',\n        border: '1px solid transparent',\n        justifyContent: 'center',\n        alignItems: 'center',\n        display: 'flex',\n        flexDirection: 'column',\n      },\n      checked && {\n        borderColor: iconOrImageChoiceBorderCheckedColor,\n      },\n      (hasIcon || hasImage) &&\n        !disabled && {\n          selectors: {\n            ':hover': enabledFieldWithImageHoverOrFocusProperties,\n            ':focus': enabledFieldWithImageHoverOrFocusProperties,\n          },\n        },\n      disabled && {\n        cursor: 'default',\n        selectors: {\n          '.ms-ChoiceFieldLabel': {\n            color: semanticColors.disabledBodyText,\n            selectors: {\n              [HighContrastSelector]: {\n                color: 'GrayText',\n              },\n              ...getEdgeChromiumNoHighContrastAdjustSelector(),\n            },\n          },\n        },\n      },\n      checked &&\n        disabled && {\n          borderColor: iconOrImageChoiceBackgroundColor,\n        },\n    ],\n    innerField: [\n      classNames.innerField,\n      hasImage && {\n        // using non-null assertion because we have a default in `ChoiceGroupOptionBase` class.\n        height: imageSize!.height,\n        width: imageSize!.width,\n      },\n      (hasIcon || hasImage) && {\n        position: 'relative',\n        display: 'inline-block',\n        paddingLeft: 30,\n        paddingRight: 30,\n      },\n      (hasIcon || hasImage) &&\n        imageIsLarge && {\n          paddingLeft: 24,\n          paddingRight: 24,\n        },\n      (hasIcon || hasImage) &&\n        disabled && {\n          opacity: 0.25,\n          selectors: {\n            [HighContrastSelector]: {\n              color: 'GrayText',\n              opacity: 1,\n            },\n          },\n        },\n    ],\n    imageWrapper: getImageWrapperStyle(false, classNames.imageWrapper, checked),\n    selectedImageWrapper: getImageWrapperStyle(true, classNames.imageWrapper, checked),\n    iconWrapper: [\n      classNames.iconWrapper,\n      {\n        fontSize: iconSize,\n        lineHeight: iconSize,\n        height: iconSize,\n      },\n    ],\n    labelWrapper: [\n      classNames.labelWrapper,\n      fonts.medium,\n      (hasIcon || hasImage) && {\n        display: 'block',\n        position: 'relative',\n        margin: '4px 8px 2px 8px',\n        height: labelWrapperHeight,\n        lineHeight: labelWrapperLineHeight,\n        // using non-null assertion because we have a default in `ChoiceGroupOptionBase` class.\n        maxWidth: imageSize!.width * 2,\n        overflow: 'hidden',\n        whiteSpace: 'pre-wrap',\n      },\n    ],\n  };\n};\n"]},"metadata":{},"sourceType":"module"}