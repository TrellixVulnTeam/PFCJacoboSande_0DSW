{"ast":null,"code":"var _a, _b;\n\nimport { __assign } from \"tslib\";\nimport { FontWeights, concatStyleSets, getFocusStyle, HighContrastSelector, getPlaceholderStyles, hiddenContentStyle, getInputFocusStyle, getEdgeChromiumNoHighContrastAdjustSelector } from '../../Styling';\nimport { memoizeFunction } from '../../Utilities';\nvar ComboBoxHeight = 32;\nvar ComboBoxLineHeight = 30;\nvar ComboBoxCaretDownWidth = 32;\nvar ComboBoxOptionHeight = 36;\nvar getDisabledStyles = memoizeFunction(function (theme) {\n  var _a;\n\n  var semanticColors = theme.semanticColors;\n  return {\n    backgroundColor: semanticColors.disabledBackground,\n    color: semanticColors.disabledText,\n    cursor: 'default',\n    selectors: (_a = {\n      ':after': {\n        borderColor: semanticColors.disabledBackground\n      }\n    }, _a[HighContrastSelector] = {\n      color: 'GrayText',\n      selectors: {\n        ':after': {\n          borderColor: 'GrayText'\n        }\n      }\n    }, _a)\n  };\n});\nvar listOptionHighContrastStyles = {\n  selectors: (_a = {}, _a[HighContrastSelector] = {\n    backgroundColor: 'Highlight',\n    borderColor: 'Highlight',\n    color: 'HighlightText',\n    MsHighContrastAdjust: 'none'\n  }, _a)\n};\nvar inputHighContrastStyles = {\n  selectors: (_b = {}, _b[HighContrastSelector] = {\n    color: 'WindowText',\n    backgroundColor: 'Window',\n    MsHighContrastAdjust: 'none'\n  }, _b)\n};\nexport var getOptionStyles = memoizeFunction(function (theme, customStylesForAllOptions, customOptionStylesForCurrentOption, isPending, isHidden) {\n  var _a;\n\n  var palette = theme.palette,\n      semanticColors = theme.semanticColors;\n  var option = {\n    textHoveredColor: semanticColors.menuItemTextHovered,\n    textSelectedColor: palette.neutralDark,\n    textDisabledColor: semanticColors.disabledText,\n    backgroundHoveredColor: semanticColors.menuItemBackgroundHovered,\n    backgroundPressedColor: semanticColors.menuItemBackgroundPressed\n  };\n  var optionStyles = {\n    root: [theme.fonts.medium, {\n      backgroundColor: isPending ? option.backgroundHoveredColor : 'transparent',\n      boxSizing: 'border-box',\n      cursor: 'pointer',\n      display: isHidden ? 'none' : 'block',\n      width: '100%',\n      height: 'auto',\n      minHeight: ComboBoxOptionHeight,\n      lineHeight: '20px',\n      padding: '0 8px',\n      position: 'relative',\n      borderWidth: '1px',\n      borderStyle: 'solid',\n      borderColor: 'transparent',\n      borderRadius: 0,\n      wordWrap: 'break-word',\n      overflowWrap: 'break-word',\n      textAlign: 'left',\n      selectors: (_a = {}, _a[HighContrastSelector] = {\n        border: 'none',\n        borderColor: 'Background'\n      }, _a['&.ms-Checkbox'] = {\n        display: 'flex',\n        alignItems: 'center'\n      }, _a['&.ms-Button--command:hover:active'] = {\n        backgroundColor: option.backgroundPressedColor\n      }, _a['.ms-Checkbox-label'] = {\n        width: '100%'\n      }, _a)\n    }],\n    rootHovered: {\n      backgroundColor: option.backgroundHoveredColor,\n      color: option.textHoveredColor\n    },\n    rootFocused: {\n      backgroundColor: option.backgroundHoveredColor\n    },\n    rootChecked: [{\n      backgroundColor: 'transparent',\n      color: option.textSelectedColor,\n      selectors: {\n        ':hover': [{\n          backgroundColor: option.backgroundHoveredColor\n        }, listOptionHighContrastStyles]\n      }\n    }, getFocusStyle(theme, {\n      inset: -1,\n      isFocusedOnly: false\n    }), listOptionHighContrastStyles],\n    rootDisabled: {\n      color: option.textDisabledColor,\n      cursor: 'default'\n    },\n    optionText: {\n      overflow: 'hidden',\n      whiteSpace: 'nowrap',\n      textOverflow: 'ellipsis',\n      minWidth: '0px',\n      maxWidth: '100%',\n      wordWrap: 'break-word',\n      overflowWrap: 'break-word',\n      display: 'inline-block'\n    },\n    optionTextWrapper: {\n      maxWidth: '100%',\n      display: 'flex',\n      alignItems: 'center'\n    }\n  };\n  return concatStyleSets(optionStyles, customStylesForAllOptions, customOptionStylesForCurrentOption);\n});\nexport var getCaretDownButtonStyles = memoizeFunction(function (theme, customStyles) {\n  var _a, _b;\n\n  var semanticColors = theme.semanticColors,\n      fonts = theme.fonts;\n  var caret = {\n    buttonTextColor: semanticColors.bodySubtext,\n    buttonTextHoveredCheckedColor: semanticColors.buttonTextChecked,\n    buttonBackgroundHoveredColor: semanticColors.listItemBackgroundHovered,\n    buttonBackgroundCheckedColor: semanticColors.listItemBackgroundChecked,\n    buttonBackgroundCheckedHoveredColor: semanticColors.listItemBackgroundCheckedHovered\n  };\n  var buttonHighContrastStyles = {\n    selectors: (_a = {}, _a[HighContrastSelector] = {\n      backgroundColor: 'Highlight',\n      borderColor: 'Highlight',\n      color: 'HighlightText',\n      MsHighContrastAdjust: 'none'\n    }, _a)\n  };\n  var styles = {\n    root: {\n      color: caret.buttonTextColor,\n      fontSize: fonts.small.fontSize,\n      position: 'absolute',\n      top: 0,\n      height: '100%',\n      lineHeight: ComboBoxLineHeight,\n      width: ComboBoxCaretDownWidth,\n      textAlign: 'center',\n      cursor: 'default',\n      selectors: (_b = {}, _b[HighContrastSelector] = {\n        backgroundColor: 'ButtonFace',\n        borderColor: 'ButtonText',\n        color: 'ButtonText',\n        MsHighContrastAdjust: 'none'\n      }, _b)\n    },\n    icon: {\n      fontSize: fonts.small.fontSize\n    },\n    rootHovered: [{\n      backgroundColor: caret.buttonBackgroundHoveredColor,\n      color: caret.buttonTextHoveredCheckedColor,\n      cursor: 'pointer'\n    }, buttonHighContrastStyles],\n    rootPressed: [{\n      backgroundColor: caret.buttonBackgroundCheckedColor,\n      color: caret.buttonTextHoveredCheckedColor\n    }, buttonHighContrastStyles],\n    rootChecked: [{\n      backgroundColor: caret.buttonBackgroundCheckedColor,\n      color: caret.buttonTextHoveredCheckedColor\n    }, buttonHighContrastStyles],\n    rootCheckedHovered: [{\n      backgroundColor: caret.buttonBackgroundCheckedHoveredColor,\n      color: caret.buttonTextHoveredCheckedColor\n    }, buttonHighContrastStyles],\n    rootDisabled: [getDisabledStyles(theme), {\n      position: 'absolute'\n    }]\n  };\n  return concatStyleSets(styles, customStyles);\n});\nexport var getStyles = memoizeFunction(function (theme, customStyles, comboBoxOptionWidth) {\n  var _a, _b, _c, _d, _e, _f;\n\n  var semanticColors = theme.semanticColors,\n      fonts = theme.fonts,\n      effects = theme.effects;\n  var root = {\n    textColor: semanticColors.inputText,\n    borderColor: semanticColors.inputBorder,\n    borderHoveredColor: semanticColors.inputBorderHovered,\n    borderPressedColor: semanticColors.inputFocusBorderAlt,\n    borderFocusedColor: semanticColors.inputFocusBorderAlt,\n    backgroundColor: semanticColors.inputBackground,\n    erroredColor: semanticColors.errorText\n  };\n  var option = {\n    headerTextColor: semanticColors.menuHeader,\n    dividerBorderColor: semanticColors.bodyDivider\n  }; // placeholder style variables\n\n  var placeholderHighContrastStyles = {\n    selectors: (_a = {}, _a[HighContrastSelector] = {\n      color: 'GrayText'\n    }, _a)\n  };\n  var placeholderStyles = [{\n    color: semanticColors.inputPlaceholderText\n  }, placeholderHighContrastStyles];\n  var placeholderStylesHovered = [{\n    color: semanticColors.inputTextHovered\n  }, placeholderHighContrastStyles];\n  var disabledPlaceholderStyles = [{\n    color: semanticColors.disabledText\n  }, placeholderHighContrastStyles];\n  var ComboBoxRootHighContrastFocused = {\n    color: 'HighlightText',\n    backgroundColor: 'Window',\n    MsHighContrastAdjust: 'none',\n    selectors: {\n      ':after': {\n        borderColor: 'Highlight'\n      }\n    }\n  };\n  var focusBorderStyles = getInputFocusStyle(root.borderPressedColor, effects.roundedCorner2, 'border', 0);\n  var styles = {\n    container: {},\n    label: {},\n    labelDisabled: {},\n    root: [theme.fonts.medium, {\n      boxShadow: 'none',\n      marginLeft: '0',\n      paddingRight: ComboBoxCaretDownWidth,\n      paddingLeft: 9,\n      color: root.textColor,\n      position: 'relative',\n      outline: '0',\n      userSelect: 'none',\n      backgroundColor: root.backgroundColor,\n      cursor: 'text',\n      display: 'block',\n      height: ComboBoxHeight,\n      whiteSpace: 'nowrap',\n      textOverflow: 'ellipsis',\n      boxSizing: 'border-box',\n      selectors: {\n        '.ms-Label': {\n          display: 'inline-block',\n          marginBottom: '8px'\n        },\n        '&.is-open': {\n          selectors: (_b = {}, _b[HighContrastSelector] = ComboBoxRootHighContrastFocused, _b)\n        },\n        // setting border using pseudo-element here in order to\n        // prevent chevron button to overlap ComboBox border under certain resolutions\n        ':after': {\n          pointerEvents: 'none',\n          content: \"''\",\n          position: 'absolute',\n          left: 0,\n          top: 0,\n          bottom: 0,\n          right: 0,\n          borderWidth: '1px',\n          borderStyle: 'solid',\n          borderColor: root.borderColor,\n          borderRadius: effects.roundedCorner2\n        }\n      }\n    }],\n    rootHovered: {\n      selectors: (_c = {\n        ':after': {\n          borderColor: root.borderHoveredColor\n        },\n        '.ms-ComboBox-Input': [{\n          color: semanticColors.inputTextHovered\n        }, getPlaceholderStyles(placeholderStylesHovered), inputHighContrastStyles]\n      }, _c[HighContrastSelector] = {\n        color: 'HighlightText',\n        backgroundColor: 'Window',\n        MsHighContrastAdjust: 'none',\n        selectors: {\n          ':after': {\n            borderColor: 'Highlight'\n          }\n        }\n      }, _c)\n    },\n    rootPressed: [{\n      position: 'relative',\n      selectors: (_d = {}, _d[HighContrastSelector] = ComboBoxRootHighContrastFocused, _d)\n    }],\n    rootFocused: [{\n      selectors: (_e = {\n        '.ms-ComboBox-Input': [{\n          color: semanticColors.inputTextHovered\n        }, inputHighContrastStyles]\n      }, _e[HighContrastSelector] = ComboBoxRootHighContrastFocused, _e)\n    }, focusBorderStyles],\n    rootDisabled: getDisabledStyles(theme),\n    rootError: {\n      selectors: {\n        ':after': {\n          borderColor: root.erroredColor\n        },\n        ':hover:after': {\n          borderColor: semanticColors.inputBorderHovered\n        }\n      }\n    },\n    rootDisallowFreeForm: {},\n    input: [getPlaceholderStyles(placeholderStyles), {\n      backgroundColor: root.backgroundColor,\n      color: root.textColor,\n      boxSizing: 'border-box',\n      width: '100%',\n      height: '100%',\n      borderStyle: 'none',\n      outline: 'none',\n      font: 'inherit',\n      textOverflow: 'ellipsis',\n      padding: '0',\n      selectors: {\n        '::-ms-clear': {\n          display: 'none'\n        }\n      }\n    }, inputHighContrastStyles],\n    inputDisabled: [getDisabledStyles(theme), getPlaceholderStyles(disabledPlaceholderStyles)],\n    errorMessage: [theme.fonts.small, {\n      color: root.erroredColor,\n      marginTop: '5px'\n    }],\n    callout: {\n      boxShadow: effects.elevation8\n    },\n    optionsContainerWrapper: {\n      width: comboBoxOptionWidth\n    },\n    optionsContainer: {\n      display: 'block'\n    },\n    screenReaderText: hiddenContentStyle,\n    header: [fonts.medium, {\n      fontWeight: FontWeights.semibold,\n      color: option.headerTextColor,\n      backgroundColor: 'none',\n      borderStyle: 'none',\n      height: ComboBoxOptionHeight,\n      lineHeight: ComboBoxOptionHeight,\n      cursor: 'default',\n      padding: '0 8px',\n      userSelect: 'none',\n      textAlign: 'left',\n      selectors: __assign((_f = {}, _f[HighContrastSelector] = {\n        color: 'GrayText'\n      }, _f), getEdgeChromiumNoHighContrastAdjustSelector())\n    }],\n    divider: {\n      height: 1,\n      backgroundColor: option.dividerBorderColor\n    }\n  };\n  return concatStyleSets(styles, customStyles);\n});","map":{"version":3,"mappings":"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","names":["FontWeights","concatStyleSets","getFocusStyle","HighContrastSelector","getPlaceholderStyles","hiddenContentStyle","getInputFocusStyle","getEdgeChromiumNoHighContrastAdjustSelector","memoizeFunction","ComboBoxHeight","ComboBoxLineHeight","ComboBoxCaretDownWidth","ComboBoxOptionHeight","getDisabledStyles","theme","backgroundColor","semanticColors","disabledBackground","color","disabledText","cursor","selectors","borderColor","_a","listOptionHighContrastStyles","MsHighContrastAdjust","inputHighContrastStyles","_b","getOptionStyles","customStylesForAllOptions","customOptionStylesForCurrentOption","isPending","isHidden","option","textHoveredColor","menuItemTextHovered","textSelectedColor","palette","neutralDark","textDisabledColor","backgroundHoveredColor","menuItemBackgroundHovered","backgroundPressedColor","menuItemBackgroundPressed","optionStyles","root","fonts","medium","boxSizing","display","width","height","minHeight","lineHeight","padding","position","borderWidth","borderStyle","borderRadius","wordWrap","overflowWrap","textAlign","border","alignItems","rootHovered","rootFocused","rootChecked","inset","isFocusedOnly","rootDisabled","optionText","overflow","whiteSpace","textOverflow","minWidth","maxWidth","optionTextWrapper","getCaretDownButtonStyles","customStyles","caret","buttonTextColor","bodySubtext","buttonTextHoveredCheckedColor","buttonTextChecked","buttonBackgroundHoveredColor","listItemBackgroundHovered","buttonBackgroundCheckedColor","listItemBackgroundChecked","buttonBackgroundCheckedHoveredColor","listItemBackgroundCheckedHovered","buttonHighContrastStyles","styles","fontSize","small","top","icon","rootPressed","rootCheckedHovered","getStyles","comboBoxOptionWidth","effects","textColor","inputText","inputBorder","borderHoveredColor","inputBorderHovered","borderPressedColor","inputFocusBorderAlt","borderFocusedColor","inputBackground","erroredColor","errorText","headerTextColor","menuHeader","dividerBorderColor","bodyDivider","placeholderHighContrastStyles","placeholderStyles","inputPlaceholderText","placeholderStylesHovered","inputTextHovered","disabledPlaceholderStyles","ComboBoxRootHighContrastFocused","focusBorderStyles","roundedCorner2","container","label","labelDisabled","boxShadow","marginLeft","paddingRight","paddingLeft","outline","userSelect","marginBottom","pointerEvents","content","left","bottom","right","_c","_d","_e","rootError","rootDisallowFreeForm","input","font","inputDisabled","errorMessage","marginTop","callout","elevation8","optionsContainerWrapper","optionsContainer","screenReaderText","header","fontWeight","semibold","_f","divider"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\office-ui-fabric-react\\lib\\components\\src\\components\\ComboBox\\ComboBox.styles.ts"],"sourcesContent":["import {\r\n  FontWeights,\r\n  IRawStyle,\r\n  ITheme,\r\n  concatStyleSets,\r\n  getFocusStyle,\r\n  HighContrastSelector,\r\n  IStyle,\r\n  getPlaceholderStyles,\r\n  hiddenContentStyle,\r\n  getInputFocusStyle,\r\n  getEdgeChromiumNoHighContrastAdjustSelector,\r\n} from '../../Styling';\r\nimport { IComboBoxOptionStyles, IComboBoxStyles } from './ComboBox.types';\r\n\r\nimport { IButtonStyles } from '../../Button';\r\nimport { memoizeFunction } from '../../Utilities';\r\n\r\nconst ComboBoxHeight = 32;\r\nconst ComboBoxLineHeight = 30;\r\nconst ComboBoxCaretDownWidth = 32;\r\nconst ComboBoxOptionHeight = 36;\r\n\r\nconst getDisabledStyles = memoizeFunction(\r\n  (theme: ITheme): IRawStyle => {\r\n    const { semanticColors } = theme;\r\n\r\n    return {\r\n      backgroundColor: semanticColors.disabledBackground,\r\n      color: semanticColors.disabledText,\r\n      cursor: 'default',\r\n      selectors: {\r\n        ':after': {\r\n          borderColor: semanticColors.disabledBackground,\r\n        },\r\n        [HighContrastSelector]: {\r\n          color: 'GrayText',\r\n          selectors: {\r\n            ':after': {\r\n              borderColor: 'GrayText',\r\n            },\r\n          },\r\n        },\r\n      },\r\n    };\r\n  },\r\n);\r\n\r\nconst listOptionHighContrastStyles: IRawStyle = {\r\n  selectors: {\r\n    [HighContrastSelector]: {\r\n      backgroundColor: 'Highlight',\r\n      borderColor: 'Highlight',\r\n      color: 'HighlightText',\r\n      MsHighContrastAdjust: 'none',\r\n    },\r\n  },\r\n};\r\n\r\nconst inputHighContrastStyles: IRawStyle = {\r\n  selectors: {\r\n    [HighContrastSelector]: {\r\n      color: 'WindowText',\r\n      backgroundColor: 'Window',\r\n      MsHighContrastAdjust: 'none',\r\n    },\r\n  },\r\n};\r\n\r\nexport const getOptionStyles = memoizeFunction(\r\n  (\r\n    theme: ITheme,\r\n    customStylesForAllOptions?: Partial<IComboBoxOptionStyles>,\r\n    customOptionStylesForCurrentOption?: Partial<IComboBoxOptionStyles>,\r\n    isPending?: boolean,\r\n    isHidden?: boolean,\r\n  ): Partial<IComboBoxOptionStyles> => {\r\n    const { palette, semanticColors } = theme;\r\n\r\n    const option = {\r\n      textHoveredColor: semanticColors.menuItemTextHovered,\r\n      textSelectedColor: palette.neutralDark,\r\n      textDisabledColor: semanticColors.disabledText,\r\n      backgroundHoveredColor: semanticColors.menuItemBackgroundHovered,\r\n      backgroundPressedColor: semanticColors.menuItemBackgroundPressed,\r\n    };\r\n\r\n    const optionStyles: IComboBoxOptionStyles = {\r\n      root: [\r\n        theme.fonts.medium,\r\n        {\r\n          backgroundColor: isPending ? option.backgroundHoveredColor : 'transparent',\r\n          boxSizing: 'border-box',\r\n          cursor: 'pointer',\r\n          display: isHidden ? 'none' : 'block',\r\n          width: '100%',\r\n          height: 'auto',\r\n          minHeight: ComboBoxOptionHeight,\r\n          lineHeight: '20px',\r\n          padding: '0 8px',\r\n          position: 'relative',\r\n          borderWidth: '1px',\r\n          borderStyle: 'solid',\r\n          borderColor: 'transparent',\r\n          borderRadius: 0,\r\n          wordWrap: 'break-word',\r\n          overflowWrap: 'break-word',\r\n          textAlign: 'left',\r\n          selectors: {\r\n            [HighContrastSelector]: {\r\n              border: 'none',\r\n              borderColor: 'Background',\r\n            },\r\n            '&.ms-Checkbox': {\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n            },\r\n            '&.ms-Button--command:hover:active': {\r\n              backgroundColor: option.backgroundPressedColor,\r\n            },\r\n            '.ms-Checkbox-label': {\r\n              width: '100%',\r\n            },\r\n          },\r\n        },\r\n      ],\r\n      rootHovered: {\r\n        backgroundColor: option.backgroundHoveredColor,\r\n        color: option.textHoveredColor,\r\n      },\r\n      rootFocused: {\r\n        backgroundColor: option.backgroundHoveredColor,\r\n      },\r\n      rootChecked: [\r\n        {\r\n          backgroundColor: 'transparent',\r\n          color: option.textSelectedColor,\r\n          selectors: {\r\n            ':hover': [\r\n              {\r\n                backgroundColor: option.backgroundHoveredColor,\r\n              },\r\n              listOptionHighContrastStyles,\r\n            ],\r\n          },\r\n        },\r\n        getFocusStyle(theme, { inset: -1, isFocusedOnly: false }),\r\n        listOptionHighContrastStyles,\r\n      ],\r\n      rootDisabled: {\r\n        color: option.textDisabledColor,\r\n        cursor: 'default',\r\n      },\r\n      optionText: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        minWidth: '0px',\r\n        maxWidth: '100%',\r\n        wordWrap: 'break-word',\r\n        overflowWrap: 'break-word',\r\n        display: 'inline-block',\r\n      },\r\n      optionTextWrapper: {\r\n        maxWidth: '100%',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n      },\r\n    };\r\n\r\n    return concatStyleSets(optionStyles, customStylesForAllOptions, customOptionStylesForCurrentOption);\r\n  },\r\n);\r\n\r\nexport const getCaretDownButtonStyles = memoizeFunction(\r\n  (theme: ITheme, customStyles?: Partial<IButtonStyles>): IButtonStyles => {\r\n    const { semanticColors, fonts } = theme;\r\n\r\n    const caret = {\r\n      buttonTextColor: semanticColors.bodySubtext,\r\n      buttonTextHoveredCheckedColor: semanticColors.buttonTextChecked,\r\n      buttonBackgroundHoveredColor: semanticColors.listItemBackgroundHovered,\r\n      buttonBackgroundCheckedColor: semanticColors.listItemBackgroundChecked,\r\n      buttonBackgroundCheckedHoveredColor: semanticColors.listItemBackgroundCheckedHovered,\r\n    };\r\n\r\n    const buttonHighContrastStyles: IStyle = {\r\n      selectors: {\r\n        [HighContrastSelector]: {\r\n          backgroundColor: 'Highlight',\r\n          borderColor: 'Highlight',\r\n          color: 'HighlightText',\r\n          MsHighContrastAdjust: 'none',\r\n        },\r\n      },\r\n    };\r\n\r\n    const styles: IButtonStyles = {\r\n      root: {\r\n        color: caret.buttonTextColor,\r\n        fontSize: fonts.small.fontSize,\r\n        position: 'absolute',\r\n        top: 0,\r\n        height: '100%',\r\n        lineHeight: ComboBoxLineHeight,\r\n        width: ComboBoxCaretDownWidth,\r\n        textAlign: 'center',\r\n        cursor: 'default',\r\n        selectors: {\r\n          [HighContrastSelector]: {\r\n            backgroundColor: 'ButtonFace',\r\n            borderColor: 'ButtonText',\r\n            color: 'ButtonText',\r\n            MsHighContrastAdjust: 'none',\r\n          },\r\n        },\r\n      },\r\n      icon: {\r\n        fontSize: fonts.small.fontSize,\r\n      },\r\n      rootHovered: [\r\n        {\r\n          backgroundColor: caret.buttonBackgroundHoveredColor,\r\n          color: caret.buttonTextHoveredCheckedColor,\r\n          cursor: 'pointer',\r\n        },\r\n        buttonHighContrastStyles,\r\n      ],\r\n      rootPressed: [\r\n        {\r\n          backgroundColor: caret.buttonBackgroundCheckedColor,\r\n          color: caret.buttonTextHoveredCheckedColor,\r\n        },\r\n        buttonHighContrastStyles,\r\n      ],\r\n      rootChecked: [\r\n        {\r\n          backgroundColor: caret.buttonBackgroundCheckedColor,\r\n          color: caret.buttonTextHoveredCheckedColor,\r\n        },\r\n        buttonHighContrastStyles,\r\n      ],\r\n      rootCheckedHovered: [\r\n        {\r\n          backgroundColor: caret.buttonBackgroundCheckedHoveredColor,\r\n          color: caret.buttonTextHoveredCheckedColor,\r\n        },\r\n        buttonHighContrastStyles,\r\n      ],\r\n      rootDisabled: [\r\n        getDisabledStyles(theme),\r\n        {\r\n          position: 'absolute',\r\n        },\r\n      ],\r\n    };\r\n    return concatStyleSets(styles, customStyles);\r\n  },\r\n);\r\n\r\nexport const getStyles = memoizeFunction(\r\n  (theme: ITheme, customStyles?: Partial<IComboBoxStyles>, comboBoxOptionWidth?: string): Partial<IComboBoxStyles> => {\r\n    const { semanticColors, fonts, effects } = theme;\r\n\r\n    const root = {\r\n      textColor: semanticColors.inputText,\r\n      borderColor: semanticColors.inputBorder,\r\n      borderHoveredColor: semanticColors.inputBorderHovered,\r\n      borderPressedColor: semanticColors.inputFocusBorderAlt,\r\n      borderFocusedColor: semanticColors.inputFocusBorderAlt,\r\n      backgroundColor: semanticColors.inputBackground,\r\n      erroredColor: semanticColors.errorText,\r\n    };\r\n\r\n    const option = {\r\n      headerTextColor: semanticColors.menuHeader,\r\n      dividerBorderColor: semanticColors.bodyDivider,\r\n    };\r\n\r\n    // placeholder style variables\r\n    const placeholderHighContrastStyles: IRawStyle = {\r\n      selectors: {\r\n        [HighContrastSelector]: {\r\n          color: 'GrayText',\r\n        },\r\n      },\r\n    };\r\n    const placeholderStyles: IStyle = [\r\n      {\r\n        color: semanticColors.inputPlaceholderText,\r\n      },\r\n      placeholderHighContrastStyles,\r\n    ];\r\n    const placeholderStylesHovered: IStyle = [\r\n      {\r\n        color: semanticColors.inputTextHovered,\r\n      },\r\n      placeholderHighContrastStyles,\r\n    ];\r\n    const disabledPlaceholderStyles: IStyle = [\r\n      {\r\n        color: semanticColors.disabledText,\r\n      },\r\n      placeholderHighContrastStyles,\r\n    ];\r\n\r\n    const ComboBoxRootHighContrastFocused = {\r\n      color: 'HighlightText',\r\n      backgroundColor: 'Window',\r\n      MsHighContrastAdjust: 'none',\r\n      selectors: {\r\n        ':after': {\r\n          borderColor: 'Highlight',\r\n        },\r\n      },\r\n    };\r\n\r\n    const focusBorderStyles: IStyle = getInputFocusStyle(root.borderPressedColor, effects.roundedCorner2, 'border', 0);\r\n\r\n    const styles: IComboBoxStyles = {\r\n      container: {},\r\n      label: {},\r\n      labelDisabled: {},\r\n      root: [\r\n        theme.fonts.medium,\r\n        {\r\n          boxShadow: 'none',\r\n          marginLeft: '0',\r\n          paddingRight: ComboBoxCaretDownWidth,\r\n          paddingLeft: 9,\r\n          color: root.textColor,\r\n          position: 'relative',\r\n          outline: '0',\r\n          userSelect: 'none',\r\n          backgroundColor: root.backgroundColor,\r\n          cursor: 'text',\r\n          display: 'block',\r\n          height: ComboBoxHeight,\r\n          whiteSpace: 'nowrap',\r\n          textOverflow: 'ellipsis',\r\n          boxSizing: 'border-box', // Border-box matches Dropdown and TextField\r\n          selectors: {\r\n            '.ms-Label': {\r\n              display: 'inline-block',\r\n              marginBottom: '8px',\r\n            },\r\n            '&.is-open': {\r\n              selectors: {\r\n                [HighContrastSelector]: ComboBoxRootHighContrastFocused,\r\n              },\r\n            },\r\n            // setting border using pseudo-element here in order to\r\n            // prevent chevron button to overlap ComboBox border under certain resolutions\r\n            ':after': {\r\n              pointerEvents: 'none',\r\n              content: \"''\",\r\n              position: 'absolute',\r\n              left: 0,\r\n              top: 0,\r\n              bottom: 0,\r\n              right: 0,\r\n              borderWidth: '1px',\r\n              borderStyle: 'solid',\r\n              borderColor: root.borderColor,\r\n              borderRadius: effects.roundedCorner2,\r\n            },\r\n          },\r\n        },\r\n      ],\r\n\r\n      rootHovered: {\r\n        selectors: {\r\n          ':after': {\r\n            borderColor: root.borderHoveredColor,\r\n          },\r\n          '.ms-ComboBox-Input': [\r\n            {\r\n              color: semanticColors.inputTextHovered,\r\n            },\r\n            getPlaceholderStyles(placeholderStylesHovered),\r\n            inputHighContrastStyles,\r\n          ],\r\n          [HighContrastSelector]: {\r\n            color: 'HighlightText',\r\n            backgroundColor: 'Window',\r\n            MsHighContrastAdjust: 'none',\r\n            selectors: {\r\n              ':after': {\r\n                borderColor: 'Highlight',\r\n              },\r\n            },\r\n          },\r\n        },\r\n      },\r\n\r\n      rootPressed: [\r\n        {\r\n          position: 'relative',\r\n          selectors: {\r\n            [HighContrastSelector]: ComboBoxRootHighContrastFocused,\r\n          },\r\n        },\r\n      ],\r\n\r\n      rootFocused: [\r\n        {\r\n          selectors: {\r\n            '.ms-ComboBox-Input': [\r\n              {\r\n                color: semanticColors.inputTextHovered,\r\n              },\r\n              inputHighContrastStyles,\r\n            ],\r\n            [HighContrastSelector]: ComboBoxRootHighContrastFocused,\r\n          },\r\n        },\r\n        focusBorderStyles,\r\n      ],\r\n\r\n      rootDisabled: getDisabledStyles(theme),\r\n\r\n      rootError: {\r\n        selectors: {\r\n          ':after': {\r\n            borderColor: root.erroredColor,\r\n          },\r\n          ':hover:after': {\r\n            borderColor: semanticColors.inputBorderHovered,\r\n          },\r\n        },\r\n      },\r\n\r\n      rootDisallowFreeForm: {},\r\n\r\n      input: [\r\n        getPlaceholderStyles(placeholderStyles),\r\n        {\r\n          backgroundColor: root.backgroundColor,\r\n          color: root.textColor,\r\n          boxSizing: 'border-box',\r\n          width: '100%',\r\n          height: '100%',\r\n          borderStyle: 'none',\r\n          outline: 'none',\r\n          font: 'inherit',\r\n          textOverflow: 'ellipsis',\r\n          padding: '0',\r\n          selectors: {\r\n            '::-ms-clear': {\r\n              display: 'none',\r\n            },\r\n          },\r\n        },\r\n        inputHighContrastStyles,\r\n      ],\r\n\r\n      inputDisabled: [getDisabledStyles(theme), getPlaceholderStyles(disabledPlaceholderStyles)],\r\n      errorMessage: [\r\n        theme.fonts.small,\r\n        {\r\n          color: root.erroredColor,\r\n          marginTop: '5px',\r\n        },\r\n      ],\r\n\r\n      callout: {\r\n        boxShadow: effects.elevation8,\r\n      },\r\n\r\n      optionsContainerWrapper: {\r\n        width: comboBoxOptionWidth,\r\n      },\r\n\r\n      optionsContainer: {\r\n        display: 'block',\r\n      },\r\n      screenReaderText: hiddenContentStyle,\r\n\r\n      header: [\r\n        fonts.medium,\r\n        {\r\n          fontWeight: FontWeights.semibold,\r\n          color: option.headerTextColor,\r\n          backgroundColor: 'none',\r\n          borderStyle: 'none',\r\n          height: ComboBoxOptionHeight,\r\n          lineHeight: ComboBoxOptionHeight,\r\n          cursor: 'default',\r\n          padding: '0 8px',\r\n          userSelect: 'none',\r\n          textAlign: 'left',\r\n          selectors: {\r\n            [HighContrastSelector]: {\r\n              color: 'GrayText',\r\n            },\r\n            ...getEdgeChromiumNoHighContrastAdjustSelector(),\r\n          },\r\n        },\r\n      ],\r\n\r\n      divider: {\r\n        height: 1,\r\n        backgroundColor: option.dividerBorderColor,\r\n      },\r\n    };\r\n\r\n    return concatStyleSets(styles, customStyles);\r\n  },\r\n);\r\n"]},"metadata":{},"sourceType":"module"}