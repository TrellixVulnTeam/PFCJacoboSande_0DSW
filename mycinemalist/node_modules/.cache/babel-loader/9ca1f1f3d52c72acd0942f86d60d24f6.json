{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { warnDeprecations, classNamesFunction, divProperties, getInitials, getNativeProps, getRTL } from '../../../Utilities';\nimport { mergeStyles } from '../../../Styling';\nimport { PersonaPresence } from '../PersonaPresence/index';\nimport { Icon } from '../../../Icon';\nimport { Image, ImageFit, ImageLoadState } from '../../../Image';\nimport { PersonaPresence as PersonaPresenceEnum, PersonaSize } from '../Persona.types';\nimport { getPersonaInitialsColor } from '../PersonaInitialsColor';\nimport { sizeToPixels } from '../PersonaConsts';\nvar getClassNames = classNamesFunction({\n  // There can be many PersonaCoin rendered with different sizes.\n  // Therefore setting a larger cache size.\n  cacheSize: 100\n});\n/**\n * PersonaCoin with no default styles.\n * [Use the `getStyles` API to add your own styles.](https://github.com/microsoft/fluentui/wiki/Styling)\n */\n\nvar PersonaCoinBase =\n/** @class */\nfunction (_super) {\n  __extends(PersonaCoinBase, _super);\n\n  function PersonaCoinBase(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this._onRenderCoin = function (props) {\n      var _a = _this.props,\n          coinSize = _a.coinSize,\n          styles = _a.styles,\n          imageUrl = _a.imageUrl,\n          imageAlt = _a.imageAlt,\n          imageShouldFadeIn = _a.imageShouldFadeIn,\n          imageShouldStartVisible = _a.imageShouldStartVisible,\n          theme = _a.theme,\n          showUnknownPersonaCoin = _a.showUnknownPersonaCoin; // Render the Image component only if an image URL is provided\n\n      if (!imageUrl) {\n        return null;\n      }\n\n      var size = _this.props.size;\n      var classNames = getClassNames(styles, {\n        theme: theme,\n        size: size,\n        showUnknownPersonaCoin: showUnknownPersonaCoin\n      });\n      var dimension = coinSize || sizeToPixels[size];\n      return React.createElement(Image, {\n        className: classNames.image,\n        imageFit: ImageFit.cover,\n        src: imageUrl,\n        width: dimension,\n        height: dimension,\n        alt: imageAlt,\n        shouldFadeIn: imageShouldFadeIn,\n        shouldStartVisible: imageShouldStartVisible,\n        onLoadingStateChange: _this._onPhotoLoadingStateChange\n      });\n    };\n\n    _this._onRenderInitials = function (props) {\n      var imageInitials = props.imageInitials;\n      var allowPhoneInitials = props.allowPhoneInitials,\n          showUnknownPersonaCoin = props.showUnknownPersonaCoin;\n\n      if (showUnknownPersonaCoin) {\n        return React.createElement(Icon, {\n          iconName: \"Help\"\n        });\n      }\n\n      var isRTL = getRTL(_this.props.theme);\n      imageInitials = imageInitials || getInitials(_this._getText(), isRTL, allowPhoneInitials);\n      return imageInitials !== '' ? React.createElement(\"span\", null, imageInitials) : React.createElement(Icon, {\n        iconName: \"Contact\"\n      });\n    };\n\n    _this._onPhotoLoadingStateChange = function (loadState) {\n      _this.setState({\n        isImageLoaded: loadState === ImageLoadState.loaded,\n        isImageError: loadState === ImageLoadState.error\n      });\n\n      _this.props.onPhotoLoadingStateChange && _this.props.onPhotoLoadingStateChange(loadState);\n    };\n\n    if (process.env.NODE_ENV !== 'production') {\n      warnDeprecations('PersonaCoin', props, {\n        primaryText: 'text'\n      });\n    }\n\n    _this.state = {\n      isImageLoaded: false,\n      isImageError: false\n    };\n    return _this;\n  }\n\n  PersonaCoinBase.prototype.UNSAFE_componentWillReceiveProps = function (nextProps) {\n    if (nextProps.imageUrl !== this.props.imageUrl) {\n      this.setState({\n        isImageLoaded: false,\n        isImageError: false\n      });\n    }\n  };\n\n  PersonaCoinBase.prototype.render = function () {\n    var _a = this.props,\n        className = _a.className,\n        coinProps = _a.coinProps,\n        showUnknownPersonaCoin = _a.showUnknownPersonaCoin,\n        coinSize = _a.coinSize,\n        styles = _a.styles,\n        imageUrl = _a.imageUrl,\n        isOutOfOffice = _a.isOutOfOffice,\n\n    /* eslint-disable deprecation/deprecation */\n    _b = _a.onRenderCoin,\n\n    /* eslint-disable deprecation/deprecation */\n    onRenderCoin = _b === void 0 ? this._onRenderCoin : _b,\n        _c = _a.onRenderPersonaCoin,\n        onRenderPersonaCoin = _c === void 0 ? onRenderCoin : _c,\n\n    /* eslint-enable deprecation/deprecation */\n    _d = _a.onRenderInitials,\n\n    /* eslint-enable deprecation/deprecation */\n    onRenderInitials = _d === void 0 ? this._onRenderInitials : _d,\n        presence = _a.presence,\n        presenceTitle = _a.presenceTitle,\n        presenceColors = _a.presenceColors,\n        showInitialsUntilImageLoads = _a.showInitialsUntilImageLoads,\n        theme = _a.theme;\n    var size = this.props.size;\n    var divProps = getNativeProps(this.props, divProperties);\n    var divCoinProps = getNativeProps(coinProps || {}, divProperties);\n    var coinSizeStyle = coinSize ? {\n      width: coinSize,\n      height: coinSize\n    } : undefined;\n    var hideImage = showUnknownPersonaCoin;\n    var personaPresenceProps = {\n      coinSize: coinSize,\n      isOutOfOffice: isOutOfOffice,\n      presence: presence,\n      presenceTitle: presenceTitle,\n      presenceColors: presenceColors,\n      size: size,\n      theme: theme\n    }; // Use getStyles from props, or fall back to getStyles from styles file.\n\n    var classNames = getClassNames(styles, {\n      theme: theme,\n      className: coinProps && coinProps.className ? coinProps.className : className,\n      size: size,\n      coinSize: coinSize,\n      showUnknownPersonaCoin: showUnknownPersonaCoin\n    });\n    var shouldRenderInitials = Boolean(!this.state.isImageLoaded && (showInitialsUntilImageLoads && imageUrl || !imageUrl || this.state.isImageError || hideImage));\n    return React.createElement(\"div\", __assign({\n      role: \"presentation\"\n    }, divProps, {\n      className: classNames.coin\n    }), // eslint-disable-next-line deprecation/deprecation\n    size !== PersonaSize.size8 && size !== PersonaSize.size10 && size !== PersonaSize.tiny ? React.createElement(\"div\", __assign({\n      role: \"presentation\"\n    }, divCoinProps, {\n      className: classNames.imageArea,\n      style: coinSizeStyle\n    }), shouldRenderInitials && React.createElement(\"div\", {\n      className: mergeStyles(classNames.initials, !showUnknownPersonaCoin && {\n        backgroundColor: getPersonaInitialsColor(this.props)\n      }),\n      style: coinSizeStyle,\n      \"aria-hidden\": \"true\"\n    }, onRenderInitials(this.props, this._onRenderInitials)), !hideImage && onRenderPersonaCoin(this.props, this._onRenderCoin), React.createElement(PersonaPresence, __assign({}, personaPresenceProps))) : // Otherwise, render just PersonaPresence.\n    this.props.presence ? React.createElement(PersonaPresence, __assign({}, personaPresenceProps)) : // Just render Contact Icon if there isn't a Presence prop.\n    React.createElement(Icon, {\n      iconName: \"Contact\",\n      className: classNames.size10WithoutPresenceIcon\n    }), this.props.children);\n  };\n  /**\n   * Deprecation helper for getting text.\n   */\n\n\n  PersonaCoinBase.prototype._getText = function () {\n    // eslint-disable-next-line deprecation/deprecation\n    return this.props.text || this.props.primaryText || '';\n  };\n\n  PersonaCoinBase.defaultProps = {\n    size: PersonaSize.size48,\n    presence: PersonaPresenceEnum.none,\n    imageAlt: ''\n  };\n  return PersonaCoinBase;\n}(React.Component);\n\nexport { PersonaCoinBase };","map":{"version":3,"mappings":"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","names":["React","warnDeprecations","classNamesFunction","divProperties","getInitials","getNativeProps","getRTL","mergeStyles","PersonaPresence","Icon","Image","ImageFit","ImageLoadState","PersonaPresenceEnum","PersonaSize","getPersonaInitialsColor","sizeToPixels","getClassNames","cacheSize","__extends","props","_super","_this","coinSize","styles","imageUrl","imageAlt","imageShouldFadeIn","imageShouldStartVisible","theme","showUnknownPersonaCoin","size","classNames","dimension","className","image","imageFit","cover","src","width","height","alt","shouldFadeIn","shouldStartVisible","onLoadingStateChange","_onPhotoLoadingStateChange","iconName","isRTL","imageInitials","_getText","allowPhoneInitials","loadState","setState","isImageLoaded","loaded","isImageError","error","onPhotoLoadingStateChange","process","env","NODE_ENV","primaryText","state","PersonaCoinBase","nextProps","coinProps","isOutOfOffice","_b","onRenderCoin","_c","onRenderPersonaCoin","_d","onRenderInitials","presence","presenceTitle","presenceColors","showInitialsUntilImageLoads","divProps","divCoinProps","coinSizeStyle","undefined","hideImage","personaPresenceProps","shouldRenderInitials","Boolean","role","coin","size8","size10","tiny","imageArea","style","initials","backgroundColor","_onRenderInitials","_onRenderCoin","__assign","size10WithoutPresenceIcon","children","text","size48","none","Component"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\office-ui-fabric-react\\lib\\components\\Persona\\src\\components\\Persona\\PersonaCoin\\PersonaCoin.base.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  warnDeprecations,\n  classNamesFunction,\n  divProperties,\n  getInitials,\n  getNativeProps,\n  getRTL,\n} from '../../../Utilities';\nimport { mergeStyles } from '../../../Styling';\nimport { PersonaPresence } from '../PersonaPresence/index';\nimport { Icon } from '../../../Icon';\nimport { Image, ImageFit, ImageLoadState } from '../../../Image';\nimport {\n  IPersonaCoinProps,\n  IPersonaCoinStyleProps,\n  IPersonaCoinStyles,\n  IPersonaPresenceProps,\n  PersonaPresence as PersonaPresenceEnum,\n  PersonaSize,\n} from '../Persona.types';\nimport { getPersonaInitialsColor } from '../PersonaInitialsColor';\nimport { sizeToPixels } from '../PersonaConsts';\n\nconst getClassNames = classNamesFunction<IPersonaCoinStyleProps, IPersonaCoinStyles>({\n  // There can be many PersonaCoin rendered with different sizes.\n  // Therefore setting a larger cache size.\n  cacheSize: 100,\n});\n\nexport interface IPersonaState {\n  isImageLoaded?: boolean;\n  isImageError?: boolean;\n}\n\n/**\n * PersonaCoin with no default styles.\n * [Use the `getStyles` API to add your own styles.](https://github.com/microsoft/fluentui/wiki/Styling)\n */\nexport class PersonaCoinBase extends React.Component<IPersonaCoinProps, IPersonaState> {\n  public static defaultProps: IPersonaCoinProps = {\n    size: PersonaSize.size48,\n    presence: PersonaPresenceEnum.none,\n    imageAlt: '',\n  };\n\n  constructor(props: IPersonaCoinProps) {\n    super(props);\n\n    if (process.env.NODE_ENV !== 'production') {\n      warnDeprecations('PersonaCoin', props, { primaryText: 'text' });\n    }\n\n    this.state = {\n      isImageLoaded: false,\n      isImageError: false,\n    };\n  }\n\n  public UNSAFE_componentWillReceiveProps(nextProps: IPersonaCoinProps): void {\n    if (nextProps.imageUrl !== this.props.imageUrl) {\n      this.setState({\n        isImageLoaded: false,\n        isImageError: false,\n      });\n    }\n  }\n\n  public render(): JSX.Element | null {\n    const {\n      className,\n      coinProps,\n      showUnknownPersonaCoin,\n      coinSize,\n      styles,\n      imageUrl,\n      isOutOfOffice,\n      /* eslint-disable deprecation/deprecation */\n      onRenderCoin = this._onRenderCoin,\n      onRenderPersonaCoin = onRenderCoin,\n      /* eslint-enable deprecation/deprecation */\n      onRenderInitials = this._onRenderInitials,\n      presence,\n      presenceTitle,\n      presenceColors,\n      showInitialsUntilImageLoads,\n      theme,\n    } = this.props;\n\n    const size = this.props.size as PersonaSize;\n    const divProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(this.props, divProperties);\n    const divCoinProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(coinProps || {}, divProperties);\n    const coinSizeStyle = coinSize ? { width: coinSize, height: coinSize } : undefined;\n    const hideImage = showUnknownPersonaCoin;\n\n    const personaPresenceProps: IPersonaPresenceProps = {\n      coinSize,\n      isOutOfOffice,\n      presence,\n      presenceTitle,\n      presenceColors,\n      size,\n      theme,\n    };\n\n    // Use getStyles from props, or fall back to getStyles from styles file.\n    const classNames = getClassNames(styles, {\n      theme: theme!,\n      className: coinProps && coinProps.className ? coinProps.className : className,\n      size,\n      coinSize,\n      showUnknownPersonaCoin,\n    });\n\n    const shouldRenderInitials = Boolean(\n      !this.state.isImageLoaded &&\n        ((showInitialsUntilImageLoads && imageUrl) || !imageUrl || this.state.isImageError || hideImage),\n    );\n\n    return (\n      <div role=\"presentation\" {...divProps} className={classNames.coin}>\n        {// Render PersonaCoin if size is not size8. size10 and tiny need to removed after a deprecation cleanup.\n        // eslint-disable-next-line deprecation/deprecation\n        size !== PersonaSize.size8 && size !== PersonaSize.size10 && size !== PersonaSize.tiny ? (\n          <div role=\"presentation\" {...divCoinProps} className={classNames.imageArea} style={coinSizeStyle}>\n            {shouldRenderInitials && (\n              <div\n                className={mergeStyles(\n                  classNames.initials,\n                  !showUnknownPersonaCoin && { backgroundColor: getPersonaInitialsColor(this.props) },\n                )}\n                style={coinSizeStyle}\n                aria-hidden=\"true\"\n              >\n                {onRenderInitials(this.props, this._onRenderInitials)}\n              </div>\n            )}\n            {!hideImage && onRenderPersonaCoin(this.props, this._onRenderCoin)}\n            <PersonaPresence {...personaPresenceProps} />\n          </div>\n        ) : // Otherwise, render just PersonaPresence.\n        this.props.presence ? (\n          <PersonaPresence {...personaPresenceProps} />\n        ) : (\n          // Just render Contact Icon if there isn't a Presence prop.\n          <Icon iconName=\"Contact\" className={classNames.size10WithoutPresenceIcon} />\n        )}\n        {this.props.children}\n      </div>\n    );\n  }\n\n  private _onRenderCoin = (props: IPersonaCoinProps): JSX.Element | null => {\n    const {\n      coinSize,\n      styles,\n      imageUrl,\n      imageAlt,\n      imageShouldFadeIn,\n      imageShouldStartVisible,\n      theme,\n      showUnknownPersonaCoin,\n    } = this.props;\n\n    // Render the Image component only if an image URL is provided\n    if (!imageUrl) {\n      return null;\n    }\n\n    const size = this.props.size as PersonaSize;\n\n    const classNames = getClassNames(styles, {\n      theme: theme!,\n      size,\n      showUnknownPersonaCoin,\n    });\n\n    const dimension = coinSize || sizeToPixels[size];\n\n    return (\n      <Image\n        className={classNames.image}\n        imageFit={ImageFit.cover}\n        src={imageUrl}\n        width={dimension}\n        height={dimension}\n        alt={imageAlt}\n        shouldFadeIn={imageShouldFadeIn}\n        shouldStartVisible={imageShouldStartVisible}\n        onLoadingStateChange={this._onPhotoLoadingStateChange}\n      />\n    );\n  };\n\n  /**\n   * Deprecation helper for getting text.\n   */\n  private _getText(): string {\n    // eslint-disable-next-line deprecation/deprecation\n    return this.props.text || this.props.primaryText || '';\n  }\n\n  private _onRenderInitials = (props: IPersonaCoinProps): JSX.Element => {\n    let { imageInitials } = props;\n    const { allowPhoneInitials, showUnknownPersonaCoin } = props;\n\n    if (showUnknownPersonaCoin) {\n      return <Icon iconName=\"Help\" />;\n    }\n\n    const isRTL = getRTL(this.props.theme);\n\n    imageInitials = imageInitials || getInitials(this._getText(), isRTL, allowPhoneInitials);\n\n    return imageInitials !== '' ? <span>{imageInitials}</span> : <Icon iconName=\"Contact\" />;\n  };\n\n  private _onPhotoLoadingStateChange = (loadState: ImageLoadState) => {\n    this.setState({\n      isImageLoaded: loadState === ImageLoadState.loaded,\n      isImageError: loadState === ImageLoadState.error,\n    });\n\n    this.props.onPhotoLoadingStateChange && this.props.onPhotoLoadingStateChange(loadState);\n  };\n}\n"]},"metadata":{},"sourceType":"module"}