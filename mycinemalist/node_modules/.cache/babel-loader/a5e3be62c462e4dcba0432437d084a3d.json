{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { concatStyleSets, getFocusStyle, HighContrastSelector, getScreenSelector, ScreenWidthMaxMedium, IconFontSizes, getEdgeChromiumNoHighContrastAdjustSelector } from '../../Styling';\nimport { memoizeFunction } from '../../Utilities';\nexport var CONTEXTUAL_MENU_ITEM_HEIGHT = 36;\nvar MediumScreenSelector = getScreenSelector(0, ScreenWidthMaxMedium);\nvar getItemHighContrastStyles = memoizeFunction(function () {\n  var _a;\n\n  return {\n    selectors: (_a = {}, _a[HighContrastSelector] = {\n      backgroundColor: 'Highlight',\n      borderColor: 'Highlight',\n      color: 'HighlightText',\n      MsHighContrastAdjust: 'none'\n    }, _a)\n  };\n});\nexport var getMenuItemStyles = memoizeFunction(function (theme) {\n  var _a, _b, _c, _d, _e, _f, _g;\n\n  var semanticColors = theme.semanticColors,\n      fonts = theme.fonts,\n      palette = theme.palette;\n  var ContextualMenuItemBackgroundHoverColor = semanticColors.menuItemBackgroundHovered;\n  var ContextualMenuItemTextHoverColor = semanticColors.menuItemTextHovered;\n  var ContextualMenuItemBackgroundSelectedColor = semanticColors.menuItemBackgroundPressed;\n  var ContextualMenuItemDividerColor = semanticColors.bodyDivider;\n  var menuItemStyles = {\n    item: [fonts.medium, {\n      color: semanticColors.bodyText,\n      position: 'relative',\n      boxSizing: 'border-box'\n    }],\n    divider: {\n      display: 'block',\n      height: '1px',\n      backgroundColor: ContextualMenuItemDividerColor,\n      position: 'relative'\n    },\n    root: [getFocusStyle(theme), fonts.medium, {\n      color: semanticColors.bodyText,\n      backgroundColor: 'transparent',\n      border: 'none',\n      width: '100%',\n      height: CONTEXTUAL_MENU_ITEM_HEIGHT,\n      lineHeight: CONTEXTUAL_MENU_ITEM_HEIGHT,\n      display: 'block',\n      cursor: 'pointer',\n      padding: '0px 8px 0 4px',\n      textAlign: 'left'\n    }],\n    rootDisabled: {\n      color: semanticColors.disabledBodyText,\n      cursor: 'default',\n      pointerEvents: 'none',\n      selectors: __assign((_a = {}, _a[HighContrastSelector] = {\n        color: 'GrayText',\n        opacity: 1\n      }, _a), getEdgeChromiumNoHighContrastAdjustSelector())\n    },\n    rootHovered: __assign({\n      backgroundColor: ContextualMenuItemBackgroundHoverColor,\n      color: ContextualMenuItemTextHoverColor,\n      selectors: {\n        '.ms-ContextualMenu-icon': {\n          color: palette.themeDarkAlt\n        },\n        '.ms-ContextualMenu-submenuIcon': {\n          color: palette.neutralPrimary\n        }\n      }\n    }, getItemHighContrastStyles()),\n    rootFocused: __assign({\n      backgroundColor: palette.white\n    }, getItemHighContrastStyles()),\n    rootChecked: __assign({\n      selectors: {\n        '.ms-ContextualMenu-checkmarkIcon': {\n          color: palette.neutralPrimary\n        }\n      }\n    }, getItemHighContrastStyles()),\n    rootPressed: __assign({\n      backgroundColor: ContextualMenuItemBackgroundSelectedColor,\n      selectors: {\n        '.ms-ContextualMenu-icon': {\n          color: palette.themeDark\n        },\n        '.ms-ContextualMenu-submenuIcon': {\n          color: palette.neutralPrimary\n        }\n      }\n    }, getItemHighContrastStyles()),\n    rootExpanded: __assign({\n      backgroundColor: ContextualMenuItemBackgroundSelectedColor,\n      color: semanticColors.bodyTextChecked\n    }, getItemHighContrastStyles()),\n    linkContent: {\n      whiteSpace: 'nowrap',\n      height: 'inherit',\n      display: 'flex',\n      alignItems: 'center',\n      maxWidth: '100%'\n    },\n    anchorLink: {\n      padding: '0px 8px 0 4px',\n      textRendering: 'auto',\n      color: 'inherit',\n      letterSpacing: 'normal',\n      wordSpacing: 'normal',\n      textTransform: 'none',\n      textIndent: '0px',\n      textShadow: 'none',\n      textDecoration: 'none',\n      boxSizing: 'border-box'\n    },\n    label: {\n      margin: '0 4px',\n      verticalAlign: 'middle',\n      display: 'inline-block',\n      flexGrow: '1',\n      textOverflow: 'ellipsis',\n      overflow: 'hidden',\n      whiteSpace: 'nowrap'\n    },\n    secondaryText: {\n      color: theme.palette.neutralSecondary,\n      paddingLeft: '20px',\n      textAlign: 'right'\n    },\n    icon: {\n      display: 'inline-block',\n      minHeight: '1px',\n      maxHeight: CONTEXTUAL_MENU_ITEM_HEIGHT,\n      fontSize: IconFontSizes.medium,\n      width: IconFontSizes.medium,\n      margin: '0 4px',\n      verticalAlign: 'middle',\n      flexShrink: '0',\n      selectors: (_b = {}, _b[MediumScreenSelector] = {\n        fontSize: IconFontSizes.large,\n        width: IconFontSizes.large\n      }, _b)\n    },\n    iconColor: {\n      color: semanticColors.menuIcon,\n      selectors: (_c = {}, _c[HighContrastSelector] = {\n        color: 'inherit'\n      }, _c['$root:hover &'] = {\n        selectors: (_d = {}, _d[HighContrastSelector] = {\n          color: 'HighlightText'\n        }, _d)\n      }, _c['$root:focus &'] = {\n        selectors: (_e = {}, _e[HighContrastSelector] = {\n          color: 'HighlightText'\n        }, _e)\n      }, _c)\n    },\n    iconDisabled: {\n      color: semanticColors.disabledBodyText\n    },\n    checkmarkIcon: {\n      color: semanticColors.bodySubtext,\n      selectors: (_f = {}, _f[HighContrastSelector] = {\n        color: 'HighlightText'\n      }, _f)\n    },\n    subMenuIcon: {\n      height: CONTEXTUAL_MENU_ITEM_HEIGHT,\n      lineHeight: CONTEXTUAL_MENU_ITEM_HEIGHT,\n      color: palette.neutralSecondary,\n      textAlign: 'center',\n      display: 'inline-block',\n      verticalAlign: 'middle',\n      flexShrink: '0',\n      fontSize: IconFontSizes.small,\n      selectors: (_g = {\n        ':hover': {\n          color: palette.neutralPrimary\n        },\n        ':active': {\n          color: palette.neutralPrimary\n        }\n      }, _g[MediumScreenSelector] = {\n        fontSize: IconFontSizes.medium\n      }, _g[HighContrastSelector] = {\n        color: 'HighlightText'\n      }, _g)\n    },\n    splitButtonFlexContainer: [getFocusStyle(theme), {\n      display: 'flex',\n      height: CONTEXTUAL_MENU_ITEM_HEIGHT,\n      flexWrap: 'nowrap',\n      justifyContent: 'center',\n      alignItems: 'flex-start'\n    }]\n  };\n  return concatStyleSets(menuItemStyles);\n});","map":{"version":3,"mappings":"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","names":["concatStyleSets","getFocusStyle","HighContrastSelector","getScreenSelector","ScreenWidthMaxMedium","IconFontSizes","getEdgeChromiumNoHighContrastAdjustSelector","memoizeFunction","CONTEXTUAL_MENU_ITEM_HEIGHT","MediumScreenSelector","getItemHighContrastStyles","selectors","_a","backgroundColor","borderColor","color","MsHighContrastAdjust","getMenuItemStyles","theme","fonts","palette","ContextualMenuItemBackgroundHoverColor","semanticColors","menuItemBackgroundHovered","ContextualMenuItemTextHoverColor","menuItemTextHovered","ContextualMenuItemBackgroundSelectedColor","menuItemBackgroundPressed","ContextualMenuItemDividerColor","bodyDivider","menuItemStyles","item","medium","bodyText","position","boxSizing","divider","display","height","root","border","width","lineHeight","cursor","padding","textAlign","rootDisabled","disabledBodyText","pointerEvents","opacity","rootHovered","themeDarkAlt","neutralPrimary","rootFocused","white","rootChecked","rootPressed","themeDark","rootExpanded","bodyTextChecked","linkContent","whiteSpace","alignItems","maxWidth","anchorLink","textRendering","letterSpacing","wordSpacing","textTransform","textIndent","textShadow","textDecoration","label","margin","verticalAlign","flexGrow","textOverflow","overflow","secondaryText","neutralSecondary","paddingLeft","icon","minHeight","maxHeight","fontSize","flexShrink","_b","large","iconColor","menuIcon","_c","_d","_e","iconDisabled","checkmarkIcon","bodySubtext","_f","subMenuIcon","small","_g","splitButtonFlexContainer","flexWrap","justifyContent"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\office-ui-fabric-react\\lib\\components\\src\\components\\ContextualMenu\\ContextualMenu.cnstyles.ts"],"sourcesContent":["import {\n  concatStyleSets,\n  getFocusStyle,\n  HighContrastSelector,\n  IRawStyle,\n  ITheme,\n  getScreenSelector,\n  ScreenWidthMaxMedium,\n  IconFontSizes,\n  getEdgeChromiumNoHighContrastAdjustSelector,\n} from '../../Styling';\nimport { IMenuItemStyles } from './ContextualMenu.types';\nimport { memoizeFunction } from '../../Utilities';\n\nexport const CONTEXTUAL_MENU_ITEM_HEIGHT = 36;\n\nconst MediumScreenSelector = getScreenSelector(0, ScreenWidthMaxMedium);\n\nconst getItemHighContrastStyles = memoizeFunction(\n  (): IRawStyle => {\n    return {\n      selectors: {\n        [HighContrastSelector]: {\n          backgroundColor: 'Highlight',\n          borderColor: 'Highlight',\n          color: 'HighlightText',\n          MsHighContrastAdjust: 'none',\n        },\n      },\n    };\n  },\n);\n\nexport const getMenuItemStyles = memoizeFunction(\n  (theme: ITheme): IMenuItemStyles => {\n    const { semanticColors, fonts, palette } = theme;\n    const ContextualMenuItemBackgroundHoverColor = semanticColors.menuItemBackgroundHovered;\n    const ContextualMenuItemTextHoverColor = semanticColors.menuItemTextHovered;\n    const ContextualMenuItemBackgroundSelectedColor = semanticColors.menuItemBackgroundPressed;\n    const ContextualMenuItemDividerColor = semanticColors.bodyDivider;\n\n    const menuItemStyles: IMenuItemStyles = {\n      item: [\n        fonts.medium,\n        {\n          color: semanticColors.bodyText,\n          position: 'relative',\n          boxSizing: 'border-box',\n        },\n      ],\n      divider: {\n        display: 'block',\n        height: '1px',\n        backgroundColor: ContextualMenuItemDividerColor,\n        position: 'relative',\n      },\n      root: [\n        getFocusStyle(theme),\n        fonts.medium,\n        {\n          color: semanticColors.bodyText,\n          backgroundColor: 'transparent',\n          border: 'none',\n          width: '100%',\n          height: CONTEXTUAL_MENU_ITEM_HEIGHT,\n          lineHeight: CONTEXTUAL_MENU_ITEM_HEIGHT,\n          display: 'block',\n          cursor: 'pointer',\n          padding: '0px 8px 0 4px', // inner elements have a margin of 4px (4 + 4 = 8px as on right side)\n          textAlign: 'left',\n        },\n      ],\n      rootDisabled: {\n        color: semanticColors.disabledBodyText,\n        cursor: 'default',\n        pointerEvents: 'none',\n        selectors: {\n          [HighContrastSelector]: {\n            color: 'GrayText',\n            opacity: 1,\n          },\n          ...getEdgeChromiumNoHighContrastAdjustSelector(),\n        },\n      },\n      rootHovered: {\n        backgroundColor: ContextualMenuItemBackgroundHoverColor,\n        color: ContextualMenuItemTextHoverColor,\n        selectors: {\n          '.ms-ContextualMenu-icon': {\n            color: palette.themeDarkAlt,\n          },\n          '.ms-ContextualMenu-submenuIcon': {\n            color: palette.neutralPrimary,\n          },\n        },\n        ...getItemHighContrastStyles(),\n      },\n      rootFocused: {\n        backgroundColor: palette.white,\n        ...getItemHighContrastStyles(),\n      },\n      rootChecked: {\n        selectors: {\n          '.ms-ContextualMenu-checkmarkIcon': {\n            color: palette.neutralPrimary,\n          },\n        },\n        ...getItemHighContrastStyles(),\n      },\n      rootPressed: {\n        backgroundColor: ContextualMenuItemBackgroundSelectedColor,\n        selectors: {\n          '.ms-ContextualMenu-icon': {\n            color: palette.themeDark,\n          },\n          '.ms-ContextualMenu-submenuIcon': {\n            color: palette.neutralPrimary,\n          },\n        },\n        ...getItemHighContrastStyles(),\n      },\n      rootExpanded: {\n        backgroundColor: ContextualMenuItemBackgroundSelectedColor,\n        color: semanticColors.bodyTextChecked,\n        ...getItemHighContrastStyles(),\n      },\n      linkContent: {\n        whiteSpace: 'nowrap',\n        height: 'inherit',\n        display: 'flex',\n        alignItems: 'center',\n        maxWidth: '100%',\n      },\n      anchorLink: {\n        padding: '0px 8px 0 4px', // inner elements have a margin of 4px (4 + 4 = 8px as on right side)\n        textRendering: 'auto',\n        color: 'inherit',\n        letterSpacing: 'normal',\n        wordSpacing: 'normal',\n        textTransform: 'none',\n        textIndent: '0px',\n        textShadow: 'none',\n        textDecoration: 'none',\n        boxSizing: 'border-box',\n      },\n      label: {\n        margin: '0 4px',\n        verticalAlign: 'middle',\n        display: 'inline-block',\n        flexGrow: '1',\n        textOverflow: 'ellipsis',\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n      },\n      secondaryText: {\n        color: theme.palette.neutralSecondary,\n        paddingLeft: '20px',\n        textAlign: 'right',\n      },\n      icon: {\n        display: 'inline-block',\n        minHeight: '1px',\n        maxHeight: CONTEXTUAL_MENU_ITEM_HEIGHT,\n        fontSize: IconFontSizes.medium,\n        width: IconFontSizes.medium,\n        margin: '0 4px',\n        verticalAlign: 'middle',\n        flexShrink: '0',\n        selectors: {\n          [MediumScreenSelector]: {\n            fontSize: IconFontSizes.large,\n            width: IconFontSizes.large,\n          },\n        },\n      },\n      iconColor: {\n        color: semanticColors.menuIcon,\n        selectors: {\n          [HighContrastSelector]: {\n            color: 'inherit',\n          },\n          ['$root:hover &']: {\n            selectors: {\n              [HighContrastSelector]: {\n                color: 'HighlightText',\n              },\n            },\n          },\n          ['$root:focus &']: {\n            selectors: {\n              [HighContrastSelector]: {\n                color: 'HighlightText',\n              },\n            },\n          },\n        },\n      },\n      iconDisabled: {\n        color: semanticColors.disabledBodyText,\n      },\n      checkmarkIcon: {\n        color: semanticColors.bodySubtext,\n        selectors: {\n          [HighContrastSelector]: {\n            color: 'HighlightText',\n          },\n        },\n      },\n      subMenuIcon: {\n        height: CONTEXTUAL_MENU_ITEM_HEIGHT,\n        lineHeight: CONTEXTUAL_MENU_ITEM_HEIGHT,\n        color: palette.neutralSecondary,\n        textAlign: 'center',\n        display: 'inline-block',\n        verticalAlign: 'middle',\n        flexShrink: '0',\n        fontSize: IconFontSizes.small, // 12px\n        selectors: {\n          ':hover': {\n            color: palette.neutralPrimary,\n          },\n          ':active': {\n            color: palette.neutralPrimary,\n          },\n          [MediumScreenSelector]: {\n            fontSize: IconFontSizes.medium, // 16px\n          },\n          [HighContrastSelector]: {\n            color: 'HighlightText',\n          },\n        },\n      },\n      splitButtonFlexContainer: [\n        getFocusStyle(theme),\n        {\n          display: 'flex',\n          height: CONTEXTUAL_MENU_ITEM_HEIGHT,\n          flexWrap: 'nowrap',\n          justifyContent: 'center',\n          alignItems: 'flex-start',\n        },\n      ],\n    };\n\n    return concatStyleSets(menuItemStyles);\n  },\n);\n"]},"metadata":{},"sourceType":"module"}