{"ast":null,"code":"import { getGlobalClassNames, getInputFocusStyle } from '../../Styling';\nimport { IsFocusVisibleClassName } from '../../Utilities';\nimport { DocumentCardPreviewGlobalClassNames as previewClassNames } from './DocumentCardPreview.styles';\nimport { DocumentCardActivityGlobalClassNames as activityClassNames } from './DocumentCardActivity.styles';\nimport { DocumentCardTitleGlobalClassNames as titleClassNames } from './DocumentCardTitle.styles';\nimport { DocumentCardLocationGlobalClassNames as locationClassNames } from './DocumentCardLocation.styles';\nvar GlobalClassNames = {\n  root: 'ms-DocumentCard',\n  rootActionable: 'ms-DocumentCard--actionable',\n  rootCompact: 'ms-DocumentCard--compact'\n};\nexport var getStyles = function getStyles(props) {\n  var _a, _b;\n\n  var className = props.className,\n      theme = props.theme,\n      actionable = props.actionable,\n      compact = props.compact;\n  var palette = theme.palette,\n      fonts = theme.fonts,\n      effects = theme.effects;\n  var classNames = getGlobalClassNames(GlobalClassNames, theme);\n  return {\n    root: [classNames.root, {\n      WebkitFontSmoothing: 'antialiased',\n      backgroundColor: palette.white,\n      border: \"1px solid \" + palette.neutralLight,\n      maxWidth: '320px',\n      minWidth: '206px',\n      userSelect: 'none',\n      position: 'relative',\n      selectors: (_a = {\n        ':focus': {\n          outline: '0px solid'\n        }\n      }, _a[\".\" + IsFocusVisibleClassName + \" &:focus\"] = getInputFocusStyle(palette.neutralSecondary, effects.roundedCorner2), _a[\".\" + locationClassNames.root + \" + .\" + titleClassNames.root] = {\n        paddingTop: '4px'\n      }, _a)\n    }, actionable && [classNames.rootActionable, {\n      selectors: {\n        ':hover': {\n          cursor: 'pointer',\n          borderColor: palette.neutralTertiaryAlt\n        },\n        ':hover:after': {\n          content: '\" \"',\n          position: 'absolute',\n          top: 0,\n          right: 0,\n          bottom: 0,\n          left: 0,\n          border: \"1px solid \" + palette.neutralTertiaryAlt,\n          pointerEvents: 'none'\n        }\n      }\n    }], compact && [classNames.rootCompact, {\n      display: 'flex',\n      maxWidth: '480px',\n      height: '108px',\n      selectors: (_b = {}, _b[\".\" + previewClassNames.root] = {\n        borderRight: \"1px solid \" + palette.neutralLight,\n        borderBottom: 0,\n        maxHeight: '106px',\n        maxWidth: '144px'\n      }, _b[\".\" + previewClassNames.icon] = {\n        maxHeight: '32px',\n        maxWidth: '32px'\n      }, _b[\".\" + activityClassNames.root] = {\n        paddingBottom: '12px'\n      }, _b[\".\" + titleClassNames.root] = {\n        paddingBottom: '12px 16px 8px 16px',\n        fontSize: fonts.mediumPlus.fontSize,\n        lineHeight: '16px'\n      }, _b)\n    }], className]\n  };\n};","map":{"version":3,"mappings":"AAAA,SAASA,mBAAT,EAA8BC,kBAA9B,QAAwD,eAAxD;AACA,SAASC,uBAAT,QAAwC,iBAAxC;AAEA,SAASC,mCAAmC,IAAIC,iBAAhD,QAAyE,8BAAzE;AACA,SAASC,oCAAoC,IAAIC,kBAAjD,QAA2E,+BAA3E;AACA,SAASC,iCAAiC,IAAIC,eAA9C,QAAqE,4BAArE;AACA,SAASC,oCAAoC,IAAIC,kBAAjD,QAA2E,+BAA3E;AAEA,IAAMC,gBAAgB,GAAG;EACvBC,IAAI,EAAE,iBADiB;EAEvBC,cAAc,EAAE,6BAFO;EAGvBC,WAAW,EAAE;AAHU,CAAzB;AAMA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAA+B;;;EAC9C;EAAA,IAAWC,mBAAX;EAAA,IAAkBC,6BAAlB;EAAA,IAA8BC,uBAA9B;EACA;EAAA,IAASC,mBAAT;EAAA,IAAgBC,uBAAhB;EAER,IAAMC,UAAU,GAAGtB,mBAAmB,CAACW,gBAAD,EAAmBM,KAAnB,CAAtC;EAEA,OAAO;IACLL,IAAI,EAAE,CACJU,UAAU,CAACV,IADP,EAEJ;MACEW,mBAAmB,EAAE,aADvB;MAEEC,eAAe,EAAEC,OAAO,CAACC,KAF3B;MAGEC,MAAM,EAAE,eAAaF,OAAO,CAACG,YAH/B;MAIEC,QAAQ,EAAE,OAJZ;MAKEC,QAAQ,EAAE,OALZ;MAMEC,UAAU,EAAE,MANd;MAOEC,QAAQ,EAAE,UAPZ;MAQEC,SAAS;QACP,UAAU;UACRC,OAAO,EAAE;QADD;MADH,GAIPC,GAAC,MAAIjC,uBAAJ,GAA2B,UAA5B,IAAyCD,kBAAkB,CAACwB,OAAO,CAACW,gBAAT,EAA2Bf,OAAO,CAACgB,cAAnC,CAJpD,EAKPF,GAAC,MAAIzB,kBAAkB,CAACE,IAAvB,GAA2B,MAA3B,GAAkCJ,eAAe,CAACI,IAAnD,IAA4D;QAC1D0B,UAAU,EAAE;MAD8C,CALrD;IARX,CAFI,EAoBJpB,UAAU,IAAI,CACZI,UAAU,CAACT,cADC,EAEZ;MACEoB,SAAS,EAAE;QACT,UAAU;UACRM,MAAM,EAAE,SADA;UAERC,WAAW,EAAEf,OAAO,CAACgB;QAFb,CADD;QAKT,gBAAgB;UACdC,OAAO,EAAE,KADK;UAEdV,QAAQ,EAAE,UAFI;UAGdW,GAAG,EAAE,CAHS;UAIdC,KAAK,EAAE,CAJO;UAKdC,MAAM,EAAE,CALM;UAMdC,IAAI,EAAE,CANQ;UAOdnB,MAAM,EAAE,eAAaF,OAAO,CAACgB,kBAPf;UAQdM,aAAa,EAAE;QARD;MALP;IADb,CAFY,CApBV,EAyCJ5B,OAAO,IAAI,CACTG,UAAU,CAACR,WADF,EAET;MACEkC,OAAO,EAAE,MADX;MAEEnB,QAAQ,EAAE,OAFZ;MAGEoB,MAAM,EAAE,OAHV;MAIEhB,SAAS,YACPiB,GAAC,MAAI9C,iBAAiB,CAACQ,IAAvB,IAAgC;QAC9BuC,WAAW,EAAE,eAAa1B,OAAO,CAACG,YADJ;QAE9BwB,YAAY,EAAE,CAFgB;QAG9BC,SAAS,EAAE,OAHmB;QAI9BxB,QAAQ,EAAE;MAJoB,CADzB,EAOPqB,GAAC,MAAI9C,iBAAiB,CAACkD,IAAvB,IAAgC;QAC9BD,SAAS,EAAE,MADmB;QAE9BxB,QAAQ,EAAE;MAFoB,CAPzB,EAWPqB,GAAC,MAAI5C,kBAAkB,CAACM,IAAxB,IAAiC;QAC/B2C,aAAa,EAAE;MADgB,CAX1B,EAcPL,GAAC,MAAI1C,eAAe,CAACI,IAArB,IAA8B;QAC5B2C,aAAa,EAAE,oBADa;QAE5BC,QAAQ,EAAEpC,KAAK,CAACqC,UAAN,CAAiBD,QAFC;QAG5BE,UAAU,EAAE;MAHgB,CAdvB;IAJX,CAFS,CAzCP,EAqEJC,SArEI;EADD,CAAP;AAyED,CA/EM","names":["getGlobalClassNames","getInputFocusStyle","IsFocusVisibleClassName","DocumentCardPreviewGlobalClassNames","previewClassNames","DocumentCardActivityGlobalClassNames","activityClassNames","DocumentCardTitleGlobalClassNames","titleClassNames","DocumentCardLocationGlobalClassNames","locationClassNames","GlobalClassNames","root","rootActionable","rootCompact","getStyles","props","theme","actionable","compact","fonts","effects","classNames","WebkitFontSmoothing","backgroundColor","palette","white","border","neutralLight","maxWidth","minWidth","userSelect","position","selectors","outline","_a","neutralSecondary","roundedCorner2","paddingTop","cursor","borderColor","neutralTertiaryAlt","content","top","right","bottom","left","pointerEvents","display","height","_b","borderRight","borderBottom","maxHeight","icon","paddingBottom","fontSize","mediumPlus","lineHeight","className"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\office-ui-fabric-react\\lib\\components\\src\\components\\DocumentCard\\DocumentCard.styles.ts"],"sourcesContent":["import { getGlobalClassNames, getInputFocusStyle } from '../../Styling';\nimport { IsFocusVisibleClassName } from '../../Utilities';\nimport { IDocumentCardStyleProps, IDocumentCardStyles } from './DocumentCard.types';\nimport { DocumentCardPreviewGlobalClassNames as previewClassNames } from './DocumentCardPreview.styles';\nimport { DocumentCardActivityGlobalClassNames as activityClassNames } from './DocumentCardActivity.styles';\nimport { DocumentCardTitleGlobalClassNames as titleClassNames } from './DocumentCardTitle.styles';\nimport { DocumentCardLocationGlobalClassNames as locationClassNames } from './DocumentCardLocation.styles';\n\nconst GlobalClassNames = {\n  root: 'ms-DocumentCard',\n  rootActionable: 'ms-DocumentCard--actionable',\n  rootCompact: 'ms-DocumentCard--compact',\n};\n\nexport const getStyles = (props: IDocumentCardStyleProps): IDocumentCardStyles => {\n  const { className, theme, actionable, compact } = props;\n  const { palette, fonts, effects } = theme;\n\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  return {\n    root: [\n      classNames.root,\n      {\n        WebkitFontSmoothing: 'antialiased',\n        backgroundColor: palette.white,\n        border: `1px solid ${palette.neutralLight}`,\n        maxWidth: '320px',\n        minWidth: '206px',\n        userSelect: 'none',\n        position: 'relative',\n        selectors: {\n          ':focus': {\n            outline: '0px solid',\n          },\n          [`.${IsFocusVisibleClassName} &:focus`]: getInputFocusStyle(palette.neutralSecondary, effects.roundedCorner2),\n          [`.${locationClassNames.root} + .${titleClassNames.root}`]: {\n            paddingTop: '4px',\n          },\n        },\n      },\n      actionable && [\n        classNames.rootActionable,\n        {\n          selectors: {\n            ':hover': {\n              cursor: 'pointer',\n              borderColor: palette.neutralTertiaryAlt,\n            },\n            ':hover:after': {\n              content: '\" \"',\n              position: 'absolute',\n              top: 0,\n              right: 0,\n              bottom: 0,\n              left: 0,\n              border: `1px solid ${palette.neutralTertiaryAlt}`,\n              pointerEvents: 'none',\n            },\n          },\n        },\n      ],\n      compact && [\n        classNames.rootCompact,\n        {\n          display: 'flex',\n          maxWidth: '480px',\n          height: '108px',\n          selectors: {\n            [`.${previewClassNames.root}`]: {\n              borderRight: `1px solid ${palette.neutralLight}`,\n              borderBottom: 0, // Remove the usual border from the preview\n              maxHeight: '106px',\n              maxWidth: '144px',\n            },\n            [`.${previewClassNames.icon}`]: {\n              maxHeight: '32px',\n              maxWidth: '32px',\n            },\n            [`.${activityClassNames.root}`]: {\n              paddingBottom: '12px',\n            },\n            [`.${titleClassNames.root}`]: {\n              paddingBottom: '12px 16px 8px 16px',\n              fontSize: fonts.mediumPlus.fontSize,\n              lineHeight: '16px',\n            },\n          },\n        },\n      ],\n      className,\n    ],\n  };\n};\n"]},"metadata":{},"sourceType":"module"}