{"ast":null,"code":"import { getGlobalClassNames, hiddenContentStyle } from '../../../Styling';\nvar GlobalClassNames = {\n  root: 'ms-Suggestions',\n  suggestionsContainer: 'ms-Suggestions-container',\n  title: 'ms-Suggestions-title',\n  forceResolveButton: 'ms-forceResolve-button',\n  searchForMoreButton: 'ms-SearchMore-button',\n  spinner: 'ms-Suggestions-spinner',\n  noSuggestions: 'ms-Suggestions-none',\n  suggestionsAvailable: 'ms-Suggestions-suggestionsAvailable',\n  isSelected: 'is-selected'\n};\nexport function getStyles(props) {\n  var className = props.className,\n      suggestionsClassName = props.suggestionsClassName,\n      theme = props.theme,\n      forceResolveButtonSelected = props.forceResolveButtonSelected,\n      searchForMoreButtonSelected = props.searchForMoreButtonSelected;\n  var palette = theme.palette,\n      semanticColors = theme.semanticColors,\n      fonts = theme.fonts;\n  var classNames = getGlobalClassNames(GlobalClassNames, theme);\n  var actionButtonStyles = {\n    backgroundColor: 'transparent',\n    border: 0,\n    cursor: 'pointer',\n    margin: 0,\n    paddingLeft: 8,\n    position: 'relative',\n    borderTop: \"1px solid \" + palette.neutralLight,\n    height: 40,\n    textAlign: 'left',\n    width: '100%',\n    fontSize: fonts.small.fontSize,\n    selectors: {\n      ':hover': {\n        backgroundColor: semanticColors.menuItemBackgroundPressed,\n        cursor: 'pointer'\n      },\n      ':focus, :active': {\n        backgroundColor: palette.themeLight\n      },\n      '.ms-Button-icon': {\n        fontSize: fonts.mediumPlus.fontSize,\n        width: 25\n      },\n      '.ms-Button-label': {\n        margin: '0 4px 0 9px'\n      }\n    }\n  };\n  var actionButtonSelectedStyles = {\n    backgroundColor: palette.themeLight\n  };\n  return {\n    root: [classNames.root, {\n      minWidth: 260\n    }, className],\n    suggestionsContainer: [classNames.suggestionsContainer, {\n      overflowY: 'auto',\n      overflowX: 'hidden',\n      maxHeight: 300,\n      transform: 'translate3d(0,0,0)'\n    }, suggestionsClassName],\n    title: [classNames.title, {\n      padding: '0 12px',\n      fontSize: fonts.small.fontSize,\n      color: palette.themePrimary,\n      lineHeight: 40,\n      borderBottom: \"1px solid \" + semanticColors.menuItemBackgroundPressed\n    }],\n    forceResolveButton: [classNames.forceResolveButton, actionButtonStyles, forceResolveButtonSelected && [classNames.isSelected, actionButtonSelectedStyles]],\n    searchForMoreButton: [classNames.searchForMoreButton, actionButtonStyles, searchForMoreButtonSelected && [classNames.isSelected, actionButtonSelectedStyles]],\n    noSuggestions: [classNames.noSuggestions, {\n      textAlign: 'center',\n      color: palette.neutralSecondary,\n      fontSize: fonts.small.fontSize,\n      lineHeight: 30\n    }],\n    suggestionsAvailable: [classNames.suggestionsAvailable, hiddenContentStyle],\n    subComponentStyles: {\n      spinner: {\n        root: [classNames.spinner, {\n          margin: '5px 0',\n          paddingLeft: 14,\n          textAlign: 'left',\n          whiteSpace: 'nowrap',\n          lineHeight: 20,\n          fontSize: fonts.small.fontSize\n        }],\n        circle: {\n          display: 'inline-block',\n          verticalAlign: 'middle'\n        },\n        label: {\n          display: 'inline-block',\n          verticalAlign: 'middle',\n          margin: '0 10px 0 16px'\n        }\n      }\n    }\n  };\n}","map":{"version":3,"mappings":"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","names":["getGlobalClassNames","hiddenContentStyle","GlobalClassNames","root","suggestionsContainer","title","forceResolveButton","searchForMoreButton","spinner","noSuggestions","suggestionsAvailable","isSelected","getStyles","props","suggestionsClassName","theme","forceResolveButtonSelected","searchForMoreButtonSelected","semanticColors","fonts","classNames","actionButtonStyles","backgroundColor","border","cursor","margin","paddingLeft","position","borderTop","palette","neutralLight","height","textAlign","width","fontSize","small","selectors","menuItemBackgroundPressed","themeLight","mediumPlus","actionButtonSelectedStyles","minWidth","className","overflowY","overflowX","maxHeight","transform","padding","color","themePrimary","lineHeight","borderBottom","neutralSecondary","subComponentStyles","whiteSpace","circle","display","verticalAlign","label"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\office-ui-fabric-react\\lib\\components\\pickers\\src\\components\\pickers\\Suggestions\\Suggestions.styles.ts"],"sourcesContent":["import { getGlobalClassNames, IStyle, hiddenContentStyle } from '../../../Styling';\nimport { ISuggestionsStyleProps, ISuggestionsStyles } from './Suggestions.types';\n\nconst GlobalClassNames = {\n  root: 'ms-Suggestions',\n  suggestionsContainer: 'ms-Suggestions-container',\n  title: 'ms-Suggestions-title',\n  forceResolveButton: 'ms-forceResolve-button',\n  searchForMoreButton: 'ms-SearchMore-button',\n  spinner: 'ms-Suggestions-spinner',\n  noSuggestions: 'ms-Suggestions-none',\n  suggestionsAvailable: 'ms-Suggestions-suggestionsAvailable',\n  isSelected: 'is-selected',\n};\n\nexport function getStyles(props: ISuggestionsStyleProps): ISuggestionsStyles {\n  const { className, suggestionsClassName, theme, forceResolveButtonSelected, searchForMoreButtonSelected } = props;\n\n  const { palette, semanticColors, fonts } = theme;\n\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  const actionButtonStyles: IStyle = {\n    backgroundColor: 'transparent',\n    border: 0,\n    cursor: 'pointer',\n    margin: 0,\n    paddingLeft: 8,\n    position: 'relative',\n    borderTop: `1px solid ${palette.neutralLight}`,\n    height: 40,\n    textAlign: 'left',\n    width: '100%',\n    fontSize: fonts.small.fontSize,\n    selectors: {\n      ':hover': {\n        backgroundColor: semanticColors.menuItemBackgroundPressed,\n        cursor: 'pointer',\n      },\n      ':focus, :active': {\n        backgroundColor: palette.themeLight,\n      },\n      '.ms-Button-icon': {\n        fontSize: fonts.mediumPlus.fontSize,\n        width: 25,\n      },\n      '.ms-Button-label': {\n        margin: '0 4px 0 9px',\n      },\n    },\n  };\n\n  const actionButtonSelectedStyles: IStyle = {\n    backgroundColor: palette.themeLight,\n  };\n\n  return {\n    root: [\n      classNames.root,\n      {\n        minWidth: 260,\n      },\n      className,\n    ],\n    suggestionsContainer: [\n      classNames.suggestionsContainer,\n      {\n        overflowY: 'auto',\n        overflowX: 'hidden',\n        maxHeight: 300,\n        transform: 'translate3d(0,0,0)',\n      },\n      suggestionsClassName,\n    ],\n    title: [\n      classNames.title,\n      {\n        padding: '0 12px',\n        fontSize: fonts.small.fontSize,\n        color: palette.themePrimary,\n        lineHeight: 40,\n        borderBottom: `1px solid ${semanticColors.menuItemBackgroundPressed}`,\n      },\n    ],\n    forceResolveButton: [\n      classNames.forceResolveButton,\n      actionButtonStyles,\n      forceResolveButtonSelected && [classNames.isSelected, actionButtonSelectedStyles],\n    ],\n    searchForMoreButton: [\n      classNames.searchForMoreButton,\n      actionButtonStyles,\n      searchForMoreButtonSelected && [classNames.isSelected, actionButtonSelectedStyles],\n    ],\n    noSuggestions: [\n      classNames.noSuggestions,\n      {\n        textAlign: 'center',\n        color: palette.neutralSecondary,\n        fontSize: fonts.small.fontSize,\n        lineHeight: 30,\n      },\n    ],\n    suggestionsAvailable: [classNames.suggestionsAvailable, hiddenContentStyle],\n    subComponentStyles: {\n      spinner: {\n        root: [\n          classNames.spinner,\n          {\n            margin: '5px 0',\n            paddingLeft: 14,\n            textAlign: 'left',\n            whiteSpace: 'nowrap',\n            lineHeight: 20,\n            fontSize: fonts.small.fontSize,\n          },\n        ],\n        circle: {\n          display: 'inline-block',\n          verticalAlign: 'middle',\n        },\n        label: {\n          display: 'inline-block',\n          verticalAlign: 'middle',\n          margin: '0 10px 0 16px',\n        },\n      },\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}