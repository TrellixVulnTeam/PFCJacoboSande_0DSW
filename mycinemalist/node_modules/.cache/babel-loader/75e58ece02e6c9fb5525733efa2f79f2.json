{"ast":null,"code":"import { AnimationClassNames, getGlobalClassNames } from '../../Styling';\nimport { getWindow } from '../../Utilities';\nvar GlobalClassNames = {\n  root: 'ms-Image',\n  rootMaximizeFrame: 'ms-Image--maximizeFrame',\n  image: 'ms-Image-image',\n  imageCenter: 'ms-Image-image--center',\n  imageContain: 'ms-Image-image--contain',\n  imageCover: 'ms-Image-image--cover',\n  imageCenterContain: 'ms-Image-image--centerContain',\n  imageCenterCover: 'ms-Image-image--centerCover',\n  imageNone: 'ms-Image-image--none',\n  imageLandscape: 'ms-Image-image--landscape',\n  imagePortrait: 'ms-Image-image--portrait'\n};\nexport var getStyles = function getStyles(props) {\n  var className = props.className,\n      width = props.width,\n      height = props.height,\n      maximizeFrame = props.maximizeFrame,\n      isLoaded = props.isLoaded,\n      shouldFadeIn = props.shouldFadeIn,\n      shouldStartVisible = props.shouldStartVisible,\n      isLandscape = props.isLandscape,\n      isCenter = props.isCenter,\n      isContain = props.isContain,\n      isCover = props.isCover,\n      isCenterContain = props.isCenterContain,\n      isCenterCover = props.isCenterCover,\n      isNone = props.isNone,\n      isError = props.isError,\n      isNotImageFit = props.isNotImageFit,\n      theme = props.theme;\n  var classNames = getGlobalClassNames(GlobalClassNames, theme);\n  var ImageFitStyles = {\n    position: 'absolute',\n    left: '50% /* @noflip */',\n    top: '50%',\n    transform: 'translate(-50%,-50%)'\n  }; // Cut the mustard using msMaxTouchPoints to detect IE11 which does not support CSS object-fit\n\n  var window = getWindow();\n  var supportsObjectFit = window !== undefined && window.navigator.msMaxTouchPoints === undefined;\n  var fallbackObjectFitStyles = isContain && isLandscape || isCover && !isLandscape ? {\n    width: '100%',\n    height: 'auto'\n  } : {\n    width: 'auto',\n    height: '100%'\n  };\n  return {\n    root: [classNames.root, theme.fonts.medium, {\n      overflow: 'hidden'\n    }, maximizeFrame && [classNames.rootMaximizeFrame, {\n      height: '100%',\n      width: '100%'\n    }], isLoaded && shouldFadeIn && !shouldStartVisible && AnimationClassNames.fadeIn400, (isCenter || isContain || isCover || isCenterContain || isCenterCover) && {\n      position: 'relative'\n    }, className],\n    image: [classNames.image, {\n      display: 'block',\n      opacity: 0\n    }, isLoaded && ['is-loaded', {\n      opacity: 1\n    }], isCenter && [classNames.imageCenter, ImageFitStyles], isContain && [classNames.imageContain, supportsObjectFit && {\n      width: '100%',\n      height: '100%',\n      objectFit: 'contain'\n    }, !supportsObjectFit && fallbackObjectFitStyles, ImageFitStyles], isCover && [classNames.imageCover, supportsObjectFit && {\n      width: '100%',\n      height: '100%',\n      objectFit: 'cover'\n    }, !supportsObjectFit && fallbackObjectFitStyles, ImageFitStyles], isCenterContain && [classNames.imageCenterContain, isLandscape && {\n      maxWidth: '100%'\n    }, !isLandscape && {\n      maxHeight: '100%'\n    }, ImageFitStyles], isCenterCover && [classNames.imageCenterCover, isLandscape && {\n      maxHeight: '100%'\n    }, !isLandscape && {\n      maxWidth: '100%'\n    }, ImageFitStyles], isNone && [classNames.imageNone, {\n      width: 'auto',\n      height: 'auto'\n    }], isNotImageFit && [!!width && !height && {\n      height: 'auto',\n      width: '100%'\n    }, !width && !!height && {\n      height: '100%',\n      width: 'auto'\n    }, !!width && !!height && {\n      height: '100%',\n      width: '100%'\n    }], isLandscape && classNames.imageLandscape, !isLandscape && classNames.imagePortrait, !isLoaded && 'is-notLoaded', shouldFadeIn && 'is-fadeIn', isError && 'is-error']\n  };\n};","map":{"version":3,"mappings":"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","names":["AnimationClassNames","getGlobalClassNames","getWindow","GlobalClassNames","root","rootMaximizeFrame","image","imageCenter","imageContain","imageCover","imageCenterContain","imageCenterCover","imageNone","imageLandscape","imagePortrait","getStyles","props","width","height","maximizeFrame","isLoaded","shouldFadeIn","shouldStartVisible","isLandscape","isCenter","isContain","isCover","isCenterContain","isCenterCover","isNone","isError","isNotImageFit","theme","classNames","ImageFitStyles","position","left","top","transform","window","supportsObjectFit","undefined","navigator","msMaxTouchPoints","fallbackObjectFitStyles","fonts","medium","overflow","fadeIn400","className","display","opacity","objectFit","maxWidth","maxHeight"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\office-ui-fabric-react\\lib\\components\\src\\components\\Image\\Image.styles.ts"],"sourcesContent":["import { AnimationClassNames, getGlobalClassNames, IStyle } from '../../Styling';\nimport { IImageStyleProps, IImageStyles } from './Image.types';\nimport { getWindow } from '../../Utilities';\n\nconst GlobalClassNames = {\n  root: 'ms-Image',\n  rootMaximizeFrame: 'ms-Image--maximizeFrame',\n  image: 'ms-Image-image',\n  imageCenter: 'ms-Image-image--center',\n  imageContain: 'ms-Image-image--contain',\n  imageCover: 'ms-Image-image--cover',\n  imageCenterContain: 'ms-Image-image--centerContain',\n  imageCenterCover: 'ms-Image-image--centerCover',\n  imageNone: 'ms-Image-image--none',\n  imageLandscape: 'ms-Image-image--landscape',\n  imagePortrait: 'ms-Image-image--portrait',\n};\n\nexport const getStyles = (props: IImageStyleProps): IImageStyles => {\n  const {\n    className,\n    width,\n    height,\n    maximizeFrame,\n    isLoaded,\n    shouldFadeIn,\n    shouldStartVisible,\n    isLandscape,\n    isCenter,\n    isContain,\n    isCover,\n    isCenterContain,\n    isCenterCover,\n    isNone,\n    isError,\n    isNotImageFit,\n    theme,\n  } = props;\n\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  const ImageFitStyles: IStyle = {\n    position: 'absolute',\n    left: '50% /* @noflip */',\n    top: '50%',\n    transform: 'translate(-50%,-50%)', // @todo test RTL renders transform: translate(50%,-50%);\n  };\n\n  // Cut the mustard using msMaxTouchPoints to detect IE11 which does not support CSS object-fit\n  const window: Window | undefined = getWindow();\n  const supportsObjectFit: boolean = window !== undefined && window.navigator.msMaxTouchPoints === undefined;\n  const fallbackObjectFitStyles =\n    (isContain && isLandscape) || (isCover && !isLandscape)\n      ? { width: '100%', height: 'auto' }\n      : { width: 'auto', height: '100%' };\n\n  return {\n    root: [\n      classNames.root,\n      theme.fonts.medium,\n      {\n        overflow: 'hidden',\n      },\n      maximizeFrame && [\n        classNames.rootMaximizeFrame,\n        {\n          height: '100%',\n          width: '100%',\n        },\n      ],\n      isLoaded && shouldFadeIn && !shouldStartVisible && AnimationClassNames.fadeIn400,\n      (isCenter || isContain || isCover || isCenterContain || isCenterCover) && {\n        position: 'relative',\n      },\n      className,\n    ],\n    image: [\n      classNames.image,\n      {\n        display: 'block',\n        opacity: 0,\n      },\n      isLoaded && [\n        'is-loaded',\n        {\n          opacity: 1,\n        },\n      ],\n      isCenter && [classNames.imageCenter, ImageFitStyles],\n      isContain && [\n        classNames.imageContain,\n        supportsObjectFit && {\n          width: '100%',\n          height: '100%',\n          objectFit: 'contain',\n        },\n        !supportsObjectFit && fallbackObjectFitStyles,\n        ImageFitStyles,\n      ],\n      isCover && [\n        classNames.imageCover,\n        supportsObjectFit && {\n          width: '100%',\n          height: '100%',\n          objectFit: 'cover',\n        },\n        !supportsObjectFit && fallbackObjectFitStyles,\n        ImageFitStyles,\n      ],\n      isCenterContain && [\n        classNames.imageCenterContain,\n        isLandscape && {\n          maxWidth: '100%',\n        },\n        !isLandscape && {\n          maxHeight: '100%',\n        },\n        ImageFitStyles,\n      ],\n      isCenterCover && [\n        classNames.imageCenterCover,\n        isLandscape && {\n          maxHeight: '100%',\n        },\n        !isLandscape && {\n          maxWidth: '100%',\n        },\n        ImageFitStyles,\n      ],\n      isNone && [\n        classNames.imageNone,\n        {\n          width: 'auto',\n          height: 'auto',\n        },\n      ],\n      isNotImageFit && [\n        !!width &&\n          !height && {\n            height: 'auto',\n            width: '100%',\n          },\n        !width &&\n          !!height && {\n            height: '100%',\n            width: 'auto',\n          },\n        !!width &&\n          !!height && {\n            height: '100%',\n            width: '100%',\n          },\n      ],\n      isLandscape && classNames.imageLandscape,\n      !isLandscape && classNames.imagePortrait,\n      !isLoaded && 'is-notLoaded',\n      shouldFadeIn && 'is-fadeIn',\n      isError && 'is-error',\n    ],\n  };\n};\n"]},"metadata":{},"sourceType":"module"}