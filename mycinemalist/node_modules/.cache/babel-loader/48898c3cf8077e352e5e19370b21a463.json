{"ast":null,"code":"import { __spreadArrays } from \"tslib\";\nimport { AnimationVariables, FontWeights, getGlobalClassNames, keyframes } from '../../Styling';\nimport { memoizeFunction } from '../../Utilities';\nvar globalClassNames = {\n  root: 'ms-TeachingBubble',\n  body: 'ms-TeachingBubble-body',\n  bodyContent: 'ms-TeachingBubble-bodycontent',\n  closeButton: 'ms-TeachingBubble-closebutton',\n  content: 'ms-TeachingBubble-content',\n  footer: 'ms-TeachingBubble-footer',\n  header: 'ms-TeachingBubble-header',\n  headerIsCondensed: 'ms-TeachingBubble-header--condensed',\n  headerIsSmall: 'ms-TeachingBubble-header--small',\n  headerIsLarge: 'ms-TeachingBubble-header--large',\n  headline: 'ms-TeachingBubble-headline',\n  image: 'ms-TeachingBubble-image',\n  primaryButton: 'ms-TeachingBubble-primaryButton',\n  secondaryButton: 'ms-TeachingBubble-secondaryButton',\n  subText: 'ms-TeachingBubble-subText',\n  // TODO: Button global class name usage should be converted to a styles function once\n  //        Button supports JS styling, which means these button names can be removed.\n  button: 'ms-Button',\n  buttonLabel: 'ms-Button-label'\n};\nvar opacityFadeIn = memoizeFunction(function () {\n  return keyframes({\n    '0%': {\n      opacity: 0,\n      animationTimingFunction: AnimationVariables.easeFunction1,\n      transform: 'scale3d(.90,.90,.90)'\n    },\n    '100%': {\n      opacity: 1,\n      transform: 'scale3d(1,1,1)'\n    }\n  });\n});\n\nvar rootStyle = function (isWide, calloutProps) {\n  var _a = calloutProps || {},\n      calloutWidth = _a.calloutWidth,\n      calloutMaxWidth = _a.calloutMaxWidth;\n\n  return [{\n    display: 'block',\n    maxWidth: 364,\n    border: 0,\n    outline: 'transparent',\n    width: calloutWidth || 'calc(100% + 1px)',\n    animationName: \"\" + opacityFadeIn(),\n    animationDuration: '300ms',\n    animationTimingFunction: 'linear',\n    animationFillMode: 'both'\n  }, isWide && {\n    maxWidth: calloutMaxWidth || 456\n  }];\n};\n\nvar headerStyle = function (classNames, hasCondensedHeadline, hasSmallHeadline) {\n  if (hasCondensedHeadline) {\n    return [classNames.headerIsCondensed, {\n      marginBottom: 14\n    }];\n  }\n\n  return [hasSmallHeadline && classNames.headerIsSmall, !hasSmallHeadline && classNames.headerIsLarge, {\n    selectors: {\n      ':not(:last-child)': {\n        marginBottom: 14\n      }\n    }\n  }];\n};\n\nexport var getStyles = function (props) {\n  var _a, _b, _c;\n\n  var hasCondensedHeadline = props.hasCondensedHeadline,\n      hasSmallHeadline = props.hasSmallHeadline,\n      hasCloseButton = props.hasCloseButton,\n      hasHeadline = props.hasHeadline,\n      isWide = props.isWide,\n      primaryButtonClassName = props.primaryButtonClassName,\n      secondaryButtonClassName = props.secondaryButtonClassName,\n      theme = props.theme,\n      _d = props.calloutProps,\n      calloutProps = _d === void 0 ? {\n    className: undefined,\n    theme: theme\n  } : _d;\n  var hasLargeHeadline = !hasCondensedHeadline && !hasSmallHeadline;\n  var palette = theme.palette,\n      semanticColors = theme.semanticColors,\n      fonts = theme.fonts;\n  var classNames = getGlobalClassNames(globalClassNames, theme);\n  return {\n    root: [classNames.root, fonts.medium, calloutProps.className],\n    body: [classNames.body, hasCloseButton && !hasHeadline && {\n      marginRight: 24\n    }, {\n      selectors: {\n        ':not(:last-child)': {\n          marginBottom: 20\n        }\n      }\n    }],\n    bodyContent: [classNames.bodyContent, {\n      padding: '20px 24px 20px 24px'\n    }],\n    closeButton: [classNames.closeButton, {\n      position: 'absolute',\n      right: 0,\n      top: 0,\n      margin: '15px 15px 0 0',\n      borderRadius: 0,\n      color: palette.white,\n      fontSize: fonts.small.fontSize,\n      selectors: {\n        ':hover': {\n          background: palette.themeDarkAlt,\n          color: palette.white\n        },\n        ':active': {\n          background: palette.themeDark,\n          color: palette.white\n        },\n        ':focus': {\n          border: \"1px solid \" + semanticColors.variantBorder\n        }\n      }\n    }],\n    content: __spreadArrays([classNames.content], rootStyle(isWide), [isWide && {\n      display: 'flex'\n    }]),\n    footer: [classNames.footer, {\n      display: 'flex',\n      flex: 'auto',\n      alignItems: 'center',\n      color: palette.white,\n      selectors: (_a = {}, // TODO: global class name usage should be converted to a styles function once Button supports JS styling\n      _a[\".\" + classNames.button + \":not(:first-child)\"] = {\n        marginLeft: 10\n      }, _a)\n    }],\n    header: __spreadArrays([classNames.header], headerStyle(classNames, hasCondensedHeadline, hasSmallHeadline), [hasCloseButton && {\n      marginRight: 24\n    }, (hasCondensedHeadline || hasSmallHeadline) && [fonts.medium, {\n      fontWeight: FontWeights.semibold\n    }]]),\n    headline: [classNames.headline, {\n      margin: 0,\n      color: palette.white,\n      fontWeight: FontWeights.semibold\n    }, hasLargeHeadline && [{\n      fontSize: fonts.xLarge.fontSize\n    }]],\n    imageContent: [classNames.header, classNames.image, isWide && {\n      display: 'flex',\n      alignItems: 'center',\n      maxWidth: 154\n    }],\n    primaryButton: [classNames.primaryButton, primaryButtonClassName, {\n      backgroundColor: palette.white,\n      borderColor: palette.white,\n      color: palette.themePrimary,\n      whiteSpace: 'nowrap',\n      selectors: (_b = {}, // TODO: global class name usage should be converted to a styles function once Button supports JS styling\n      _b[\".\" + classNames.buttonLabel] = fonts.medium, _b[':hover'] = {\n        backgroundColor: palette.themeLighter,\n        borderColor: palette.themeLighter,\n        color: palette.themePrimary\n      }, _b[':focus'] = {\n        backgroundColor: palette.themeLighter,\n        borderColor: palette.white\n      }, _b[':active'] = {\n        backgroundColor: palette.white,\n        borderColor: palette.white,\n        color: palette.themePrimary\n      }, _b)\n    }],\n    secondaryButton: [classNames.secondaryButton, secondaryButtonClassName, {\n      backgroundColor: palette.themePrimary,\n      borderColor: palette.white,\n      whiteSpace: 'nowrap',\n      selectors: (_c = {}, // TODO: global class name usage should be converted to a styles function once Button supports JS styling\n      _c[\".\" + classNames.buttonLabel] = [fonts.medium, {\n        color: palette.white\n      }], _c['&:hover, &:focus'] = {\n        backgroundColor: palette.themeDarkAlt,\n        borderColor: palette.white\n      }, _c[':active'] = {\n        backgroundColor: palette.themePrimary,\n        borderColor: palette.white\n      }, _c)\n    }],\n    subText: [classNames.subText, {\n      margin: 0,\n      fontSize: fonts.medium.fontSize,\n      color: palette.white,\n      fontWeight: FontWeights.regular\n    }],\n    subComponentStyles: {\n      callout: {\n        root: __spreadArrays(rootStyle(isWide, calloutProps), [fonts.medium]),\n        beak: [{\n          background: palette.themePrimary\n        }],\n        calloutMain: [{\n          background: palette.themePrimary\n        }]\n      }\n    }\n  };\n};","map":{"version":3,"mappings":"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","names":["AnimationVariables","FontWeights","getGlobalClassNames","keyframes","memoizeFunction","globalClassNames","root","body","bodyContent","closeButton","content","footer","header","headerIsCondensed","headerIsSmall","headerIsLarge","headline","image","primaryButton","secondaryButton","subText","button","buttonLabel","opacityFadeIn","opacity","animationTimingFunction","easeFunction1","transform","rootStyle","isWide","calloutProps","calloutWidth","calloutMaxWidth","display","maxWidth","border","outline","width","animationName","animationDuration","animationFillMode","headerStyle","classNames","hasCondensedHeadline","hasSmallHeadline","marginBottom","selectors","getStyles","props","hasCloseButton","hasHeadline","primaryButtonClassName","secondaryButtonClassName","theme","_d","className","hasLargeHeadline","semanticColors","fonts","medium","marginRight","padding","position","right","top","margin","borderRadius","color","palette","white","fontSize","small","background","themeDarkAlt","themeDark","variantBorder","flex","alignItems","_a","marginLeft","fontWeight","semibold","xLarge","imageContent","backgroundColor","borderColor","themePrimary","whiteSpace","_b","themeLighter","_c","regular","subComponentStyles","callout","beak","calloutMain"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\office-ui-fabric-react\\lib\\components\\src\\components\\TeachingBubble\\TeachingBubble.styles.ts"],"sourcesContent":["import { ITeachingBubbleStyleProps, ITeachingBubbleStyles } from './TeachingBubble.types';\nimport { ICalloutContentStyleProps } from '../../Callout';\nimport {\n  AnimationVariables,\n  FontWeights,\n  getGlobalClassNames,\n  GlobalClassNames,\n  IStyle,\n  keyframes,\n} from '../../Styling';\nimport { memoizeFunction } from '../../Utilities';\n\nconst globalClassNames = {\n  root: 'ms-TeachingBubble',\n  body: 'ms-TeachingBubble-body',\n  bodyContent: 'ms-TeachingBubble-bodycontent',\n  closeButton: 'ms-TeachingBubble-closebutton',\n  content: 'ms-TeachingBubble-content',\n  footer: 'ms-TeachingBubble-footer',\n  header: 'ms-TeachingBubble-header',\n  headerIsCondensed: 'ms-TeachingBubble-header--condensed',\n  headerIsSmall: 'ms-TeachingBubble-header--small',\n  headerIsLarge: 'ms-TeachingBubble-header--large',\n  headline: 'ms-TeachingBubble-headline',\n  image: 'ms-TeachingBubble-image',\n  primaryButton: 'ms-TeachingBubble-primaryButton',\n  secondaryButton: 'ms-TeachingBubble-secondaryButton',\n  subText: 'ms-TeachingBubble-subText',\n\n  // TODO: Button global class name usage should be converted to a styles function once\n  //        Button supports JS styling, which means these button names can be removed.\n  button: 'ms-Button',\n  buttonLabel: 'ms-Button-label',\n};\n\nconst opacityFadeIn = memoizeFunction(() =>\n  keyframes({\n    '0%': {\n      opacity: 0,\n      animationTimingFunction: AnimationVariables.easeFunction1,\n      transform: 'scale3d(.90,.90,.90)',\n    },\n    '100%': {\n      opacity: 1,\n      transform: 'scale3d(1,1,1)',\n    },\n  }),\n);\n\nconst rootStyle = (isWide?: boolean, calloutProps?: ICalloutContentStyleProps): IStyle[] => {\n  const { calloutWidth, calloutMaxWidth } = calloutProps || {};\n\n  return [\n    {\n      display: 'block',\n      maxWidth: 364,\n      border: 0,\n      outline: 'transparent',\n      width: calloutWidth || 'calc(100% + 1px)',\n      animationName: `${opacityFadeIn()}`,\n      animationDuration: '300ms',\n      animationTimingFunction: 'linear',\n      animationFillMode: 'both',\n    },\n    isWide && {\n      maxWidth: calloutMaxWidth || 456,\n    },\n  ];\n};\n\nconst headerStyle = (\n  classNames: Partial<GlobalClassNames<typeof globalClassNames>>,\n  hasCondensedHeadline?: boolean,\n  hasSmallHeadline?: boolean,\n): IStyle[] => {\n  if (hasCondensedHeadline) {\n    return [\n      classNames.headerIsCondensed,\n      {\n        marginBottom: 14,\n      },\n    ];\n  }\n\n  return [\n    hasSmallHeadline && classNames.headerIsSmall,\n    !hasSmallHeadline && classNames.headerIsLarge,\n    {\n      selectors: {\n        ':not(:last-child)': {\n          marginBottom: 14,\n        },\n      },\n    },\n  ];\n};\n\nexport const getStyles = (props: ITeachingBubbleStyleProps): ITeachingBubbleStyles => {\n  const {\n    hasCondensedHeadline,\n    hasSmallHeadline,\n    hasCloseButton,\n    hasHeadline,\n    isWide,\n    primaryButtonClassName,\n    secondaryButtonClassName,\n    theme,\n    calloutProps = { className: undefined, theme },\n  } = props;\n  const hasLargeHeadline: boolean = !hasCondensedHeadline && !hasSmallHeadline;\n  const { palette, semanticColors, fonts } = theme;\n  const classNames = getGlobalClassNames(globalClassNames, theme);\n\n  return {\n    root: [classNames.root, fonts.medium, calloutProps.className],\n    body: [\n      classNames.body,\n      hasCloseButton && !hasHeadline && { marginRight: 24 },\n      {\n        selectors: {\n          ':not(:last-child)': {\n            marginBottom: 20,\n          },\n        },\n      },\n    ],\n    bodyContent: [\n      classNames.bodyContent,\n      {\n        padding: '20px 24px 20px 24px',\n      },\n    ],\n    closeButton: [\n      classNames.closeButton,\n      {\n        position: 'absolute',\n        right: 0,\n        top: 0,\n        margin: '15px 15px 0 0',\n        borderRadius: 0,\n        color: palette.white,\n        fontSize: fonts.small.fontSize,\n        selectors: {\n          ':hover': {\n            background: palette.themeDarkAlt,\n            color: palette.white,\n          },\n          ':active': {\n            background: palette.themeDark,\n            color: palette.white,\n          },\n          ':focus': {\n            border: `1px solid ${semanticColors.variantBorder}`,\n          },\n        },\n      },\n    ],\n    content: [\n      classNames.content,\n      ...rootStyle(isWide),\n      isWide && {\n        display: 'flex',\n      },\n    ],\n    footer: [\n      classNames.footer,\n      {\n        display: 'flex',\n        flex: 'auto',\n        alignItems: 'center',\n        color: palette.white,\n        selectors: {\n          // TODO: global class name usage should be converted to a styles function once Button supports JS styling\n          [`.${classNames.button}:not(:first-child)`]: {\n            marginLeft: 10,\n          },\n        },\n      },\n    ],\n    header: [\n      classNames.header,\n      ...headerStyle(classNames, hasCondensedHeadline, hasSmallHeadline),\n      hasCloseButton && { marginRight: 24 },\n      (hasCondensedHeadline || hasSmallHeadline) && [\n        fonts.medium,\n        {\n          fontWeight: FontWeights.semibold,\n        },\n      ],\n    ],\n    headline: [\n      classNames.headline,\n      {\n        margin: 0,\n        color: palette.white,\n        fontWeight: FontWeights.semibold,\n      },\n      hasLargeHeadline && [\n        {\n          fontSize: fonts.xLarge.fontSize,\n        },\n      ],\n    ],\n    imageContent: [\n      classNames.header,\n      classNames.image,\n      isWide && {\n        display: 'flex',\n        alignItems: 'center',\n        maxWidth: 154,\n      },\n    ],\n    primaryButton: [\n      classNames.primaryButton,\n      primaryButtonClassName,\n      {\n        backgroundColor: palette.white,\n        borderColor: palette.white,\n        color: palette.themePrimary,\n        whiteSpace: 'nowrap',\n        selectors: {\n          // TODO: global class name usage should be converted to a styles function once Button supports JS styling\n          [`.${classNames.buttonLabel}`]: fonts.medium,\n          ':hover': {\n            backgroundColor: palette.themeLighter,\n            borderColor: palette.themeLighter,\n            color: palette.themePrimary,\n          },\n          ':focus': {\n            backgroundColor: palette.themeLighter,\n            borderColor: palette.white,\n          },\n          ':active': {\n            backgroundColor: palette.white,\n            borderColor: palette.white,\n            color: palette.themePrimary,\n          },\n        },\n      },\n    ],\n    secondaryButton: [\n      classNames.secondaryButton,\n      secondaryButtonClassName,\n      {\n        backgroundColor: palette.themePrimary,\n        borderColor: palette.white,\n        whiteSpace: 'nowrap',\n        selectors: {\n          // TODO: global class name usage should be converted to a styles function once Button supports JS styling\n          [`.${classNames.buttonLabel}`]: [\n            fonts.medium,\n            {\n              color: palette.white,\n            },\n          ],\n          '&:hover, &:focus': {\n            backgroundColor: palette.themeDarkAlt,\n            borderColor: palette.white,\n          },\n          ':active': {\n            backgroundColor: palette.themePrimary,\n            borderColor: palette.white,\n          },\n        },\n      },\n    ],\n    subText: [\n      classNames.subText,\n      {\n        margin: 0,\n        fontSize: fonts.medium.fontSize,\n        color: palette.white,\n        fontWeight: FontWeights.regular,\n      },\n    ],\n    subComponentStyles: {\n      callout: {\n        root: [...rootStyle(isWide, calloutProps), fonts.medium],\n        beak: [\n          {\n            background: palette.themePrimary,\n          },\n        ],\n        calloutMain: [\n          {\n            background: palette.themePrimary,\n          },\n        ],\n      },\n    },\n  };\n};\n"]},"metadata":{},"sourceType":"module"}