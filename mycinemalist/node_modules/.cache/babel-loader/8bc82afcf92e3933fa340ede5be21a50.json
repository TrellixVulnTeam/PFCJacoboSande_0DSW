{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { classNamesFunction, KeyCodes, Async, initializeComponentRef } from '../../Utilities';\nimport { ExpandingCardMode } from './ExpandingCard.types';\nimport { CardCallout } from './CardCallout/CardCallout';\nvar getClassNames = classNamesFunction();\n\nvar ExpandingCardBase =\n/** @class */\nfunction (_super) {\n  __extends(ExpandingCardBase, _super);\n\n  function ExpandingCardBase(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this._expandedElem = React.createRef();\n\n    _this._onKeyDown = function (ev) {\n      if (ev.which === KeyCodes.escape) {\n        _this.props.onLeave && _this.props.onLeave(ev);\n      }\n    };\n\n    _this._onRenderCompactCard = function () {\n      return React.createElement(\"div\", {\n        className: _this._classNames.compactCard\n      }, _this.props.onRenderCompactCard(_this.props.renderData));\n    };\n\n    _this._onRenderExpandedCard = function () {\n      // firstFrameRendered helps in initially setting height of expanded card to 1px, even if mode prop is set to\n      // ExpandingCardMode.expanded on first render. This is to make sure transition animation takes place.\n      !_this.state.firstFrameRendered && _this._async.requestAnimationFrame(function () {\n        _this.setState({\n          firstFrameRendered: true\n        });\n      });\n      return React.createElement(\"div\", {\n        className: _this._classNames.expandedCard,\n        ref: _this._expandedElem\n      }, React.createElement(\"div\", {\n        className: _this._classNames.expandedCardScroll\n      }, _this.props.onRenderExpandedCard && _this.props.onRenderExpandedCard(_this.props.renderData)));\n    };\n\n    _this._checkNeedsScroll = function () {\n      var expandedCardHeight = _this.props.expandedCardHeight;\n\n      _this._async.requestAnimationFrame(function () {\n        if (_this._expandedElem.current && _this._expandedElem.current.scrollHeight >= expandedCardHeight) {\n          _this.setState({\n            needsScroll: true\n          });\n        }\n      });\n    };\n\n    _this._async = new Async(_this);\n    initializeComponentRef(_this);\n    _this.state = {\n      firstFrameRendered: false,\n      needsScroll: false\n    };\n    return _this;\n  }\n\n  ExpandingCardBase.prototype.componentDidMount = function () {\n    this._checkNeedsScroll();\n  };\n\n  ExpandingCardBase.prototype.componentWillUnmount = function () {\n    this._async.dispose();\n  };\n\n  ExpandingCardBase.prototype.render = function () {\n    var _a = this.props,\n        styles = _a.styles,\n        compactCardHeight = _a.compactCardHeight,\n        expandedCardHeight = _a.expandedCardHeight,\n        theme = _a.theme,\n        mode = _a.mode,\n        className = _a.className;\n    var _b = this.state,\n        needsScroll = _b.needsScroll,\n        firstFrameRendered = _b.firstFrameRendered;\n    var finalHeight = compactCardHeight + expandedCardHeight;\n    this._classNames = getClassNames(styles, {\n      theme: theme,\n      compactCardHeight: compactCardHeight,\n      className: className,\n      expandedCardHeight: expandedCardHeight,\n      needsScroll: needsScroll,\n      expandedCardFirstFrameRendered: mode === ExpandingCardMode.expanded && firstFrameRendered\n    });\n    var content = React.createElement(\"div\", {\n      onMouseEnter: this.props.onEnter,\n      onMouseLeave: this.props.onLeave,\n      onKeyDown: this._onKeyDown\n    }, this._onRenderCompactCard(), this._onRenderExpandedCard());\n    return React.createElement(CardCallout, __assign({}, this.props, {\n      content: content,\n      finalHeight: finalHeight,\n      className: this._classNames.root\n    }));\n  };\n\n  ExpandingCardBase.defaultProps = {\n    compactCardHeight: 156,\n    expandedCardHeight: 384,\n    directionalHintFixed: true\n  };\n  return ExpandingCardBase;\n}(React.Component);\n\nexport { ExpandingCardBase };","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,kBAAT,EAA6BC,QAA7B,EAAuCC,KAAvC,EAA8CC,sBAA9C,QAA4E,iBAA5E;AACA,SACEC,iBADF,QAKO,uBALP;AAMA,SAASC,WAAT,QAA4B,2BAA5B;AAEA,IAAMC,aAAa,GAAGN,kBAAkB,EAAxC;;AAOA;AAAA;AAAA;AAAuCO;;AAWrC,6BAAYC,KAAZ,EAAsC;AAAtC,gBACEC,kBAAMD,KAAN,KAAY,IADd;;AAHQE,0BAAgBX,KAAK,CAACY,SAAN,EAAhB;;AAkDAD,uBAAa,UAACE,EAAD,EAAqC;AACxD,UAAIA,EAAE,CAACC,KAAH,KAAaZ,QAAQ,CAACa,MAA1B,EAAkC;AAChCJ,aAAI,CAACF,KAAL,CAAWO,OAAX,IAAsBL,KAAI,CAACF,KAAL,CAAWO,OAAX,CAAmBH,EAAnB,CAAtB;AACD;AACF,KAJO;;AAMAF,iCAAuB;AAC7B,aAAOX;AAAKiB,iBAAS,EAAEN,KAAI,CAACO,WAAL,CAAiBC;AAAjC,SAA+CR,KAAI,CAACF,KAAL,CAAWW,mBAAX,CAAgCT,KAAI,CAACF,KAAL,CAAWY,UAA3C,CAA/C,CAAP;AACD,KAFO;;AAIAV,kCAAwB;AAC9B;AACA;AACA,OAACA,KAAI,CAACW,KAAL,CAAWC,kBAAZ,IACEZ,KAAI,CAACa,MAAL,CAAYC,qBAAZ,CAAkC;AAChCd,aAAI,CAACe,QAAL,CAAc;AACZH,4BAAkB,EAAE;AADR,SAAd;AAGD,OAJD,CADF;AAOA,aACEvB;AAAKiB,iBAAS,EAAEN,KAAI,CAACO,WAAL,CAAiBS,YAAjC;AAA+CC,WAAG,EAAEjB,KAAI,CAACkB;AAAzD,SACE7B;AAAKiB,iBAAS,EAAEN,KAAI,CAACO,WAAL,CAAiBY;AAAjC,SACGnB,KAAI,CAACF,KAAL,CAAWsB,oBAAX,IAAmCpB,KAAI,CAACF,KAAL,CAAWsB,oBAAX,CAAgCpB,KAAI,CAACF,KAAL,CAAWY,UAA3C,CADtC,CADF,CADF;AAOD,KAjBO;;AAmBAV,8BAAoB;AAClB;;AACRA,WAAI,CAACa,MAAL,CAAYC,qBAAZ,CAAkC;AAChC,YAAId,KAAI,CAACkB,aAAL,CAAmBG,OAAnB,IAA8BrB,KAAI,CAACkB,aAAL,CAAmBG,OAAnB,CAA2BC,YAA3B,IAA2CC,kBAA7E,EAAkG;AAChGvB,eAAI,CAACe,QAAL,CAAc;AACZS,uBAAW,EAAE;AADD,WAAd;AAGD;AACF,OAND;AAOD,KATO;;AAzENxB,SAAI,CAACa,MAAL,GAAc,IAAIrB,KAAJ,CAAUQ,KAAV,CAAd;AACAP,0BAAsB,CAACO,KAAD,CAAtB;AAEAA,SAAI,CAACW,KAAL,GAAa;AACXC,wBAAkB,EAAE,KADT;AAEXY,iBAAW,EAAE;AAFF,KAAb;;AAID;;AAEMC,kDAAP;AACE,SAAKC,iBAAL;AACD,GAFM;;AAIAD,qDAAP;AACE,SAAKZ,MAAL,CAAYc,OAAZ;AACD,GAFM;;AAIAF,uCAAP;AACQ;AAAA,QAAEG,kBAAF;AAAA,QAAUC,wCAAV;AAAA,QAA6BN,0CAA7B;AAAA,QAAiDO,gBAAjD;AAAA,QAAwDC,cAAxD;AAAA,QAA8DzB,wBAA9D;AACA;AAAA,QAAEkB,4BAAF;AAAA,QAAeZ,0CAAf;AAEN,QAAMoB,WAAW,GAAGH,iBAAkB,GAAGN,kBAAzC;AAEA,SAAKhB,WAAL,GAAmBX,aAAa,CAACgC,MAAD,EAAU;AACxCE,WAAK,EAAEA,KADiC;AAExCD,uBAAiB,mBAFuB;AAGxCvB,eAAS,WAH+B;AAIxCiB,wBAAkB,oBAJsB;AAKxCC,iBAAW,EAAEA,WAL2B;AAMxCS,oCAA8B,EAAEF,IAAI,KAAKrC,iBAAiB,CAACwC,QAA3B,IAAuCtB;AAN/B,KAAV,CAAhC;AASA,QAAMuB,OAAO,GACX9C;AAAK+C,kBAAY,EAAE,KAAKtC,KAAL,CAAWuC,OAA9B;AAAuCC,kBAAY,EAAE,KAAKxC,KAAL,CAAWO,OAAhE;AAAyEkC,eAAS,EAAE,KAAKC;AAAzF,OACG,KAAKC,oBAAL,EADH,EAEG,KAAKC,qBAAL,EAFH,CADF;AAOA,WACErD,oBAACM,WAAD,EAAYgD,aAAK,KAAK7C,KAAV,EAAe;AAAEqC,aAAO,EAAEA,OAAX;AAAoBH,iBAAW,EAAEA,WAAjC;AAA8C1B,eAAS,EAAE,KAAKC,WAAL,CAAiBqC;AAA1E,KAAf,CAAZ,CADF;AAGD,GAzBM;;AA9BOnB,mCAAe;AAC3BI,qBAAiB,EAAE,GADQ;AAE3BN,sBAAkB,EAAE,GAFO;AAG3BsB,wBAAoB,EAAE;AAHK,GAAf;AAgGhB;AAAC,CAjGD,CAAuCxD,KAAK,CAACyD,SAA7C;;SAAarB","names":["React","classNamesFunction","KeyCodes","Async","initializeComponentRef","ExpandingCardMode","CardCallout","getClassNames","__extends","props","_super","_this","createRef","ev","which","escape","onLeave","className","_classNames","compactCard","onRenderCompactCard","renderData","state","firstFrameRendered","_async","requestAnimationFrame","setState","expandedCard","ref","_expandedElem","expandedCardScroll","onRenderExpandedCard","current","scrollHeight","expandedCardHeight","needsScroll","ExpandingCardBase","_checkNeedsScroll","dispose","styles","compactCardHeight","theme","mode","finalHeight","expandedCardFirstFrameRendered","expanded","content","onMouseEnter","onEnter","onMouseLeave","onKeyDown","_onKeyDown","_onRenderCompactCard","_onRenderExpandedCard","__assign","root","directionalHintFixed","Component"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\office-ui-fabric-react\\lib\\components\\src\\components\\HoverCard\\ExpandingCard.base.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNamesFunction, KeyCodes, Async, initializeComponentRef } from '../../Utilities';\nimport {\n  ExpandingCardMode,\n  IExpandingCardProps,\n  IExpandingCardStyles,\n  IExpandingCardStyleProps,\n} from './ExpandingCard.types';\nimport { CardCallout } from './CardCallout/CardCallout';\n\nconst getClassNames = classNamesFunction<IExpandingCardStyleProps, IExpandingCardStyles>();\n\nexport interface IExpandingCardState {\n  firstFrameRendered: boolean;\n  needsScroll: boolean;\n}\n\nexport class ExpandingCardBase extends React.Component<IExpandingCardProps, IExpandingCardState> {\n  public static defaultProps = {\n    compactCardHeight: 156,\n    expandedCardHeight: 384,\n    directionalHintFixed: true,\n  };\n\n  private _classNames: { [key in keyof IExpandingCardStyles]: string };\n  private _expandedElem = React.createRef<HTMLDivElement>();\n  private _async: Async;\n\n  constructor(props: IExpandingCardProps) {\n    super(props);\n\n    this._async = new Async(this);\n    initializeComponentRef(this);\n\n    this.state = {\n      firstFrameRendered: false,\n      needsScroll: false,\n    };\n  }\n\n  public componentDidMount(): void {\n    this._checkNeedsScroll();\n  }\n\n  public componentWillUnmount(): void {\n    this._async.dispose();\n  }\n\n  public render(): JSX.Element {\n    const { styles, compactCardHeight, expandedCardHeight, theme, mode, className } = this.props;\n    const { needsScroll, firstFrameRendered } = this.state;\n\n    const finalHeight = compactCardHeight! + expandedCardHeight!;\n\n    this._classNames = getClassNames(styles!, {\n      theme: theme!,\n      compactCardHeight,\n      className,\n      expandedCardHeight,\n      needsScroll: needsScroll,\n      expandedCardFirstFrameRendered: mode === ExpandingCardMode.expanded && firstFrameRendered,\n    });\n\n    const content: JSX.Element = (\n      <div onMouseEnter={this.props.onEnter} onMouseLeave={this.props.onLeave} onKeyDown={this._onKeyDown}>\n        {this._onRenderCompactCard()}\n        {this._onRenderExpandedCard()}\n      </div>\n    );\n\n    return (\n      <CardCallout {...this.props} content={content} finalHeight={finalHeight} className={this._classNames.root} />\n    );\n  }\n\n  private _onKeyDown = (ev: React.KeyboardEvent<HTMLElement>): void => {\n    if (ev.which === KeyCodes.escape) {\n      this.props.onLeave && this.props.onLeave(ev);\n    }\n  };\n\n  private _onRenderCompactCard = (): JSX.Element => {\n    return <div className={this._classNames.compactCard}>{this.props.onRenderCompactCard!(this.props.renderData)}</div>;\n  };\n\n  private _onRenderExpandedCard = (): JSX.Element => {\n    // firstFrameRendered helps in initially setting height of expanded card to 1px, even if mode prop is set to\n    // ExpandingCardMode.expanded on first render. This is to make sure transition animation takes place.\n    !this.state.firstFrameRendered &&\n      this._async.requestAnimationFrame(() => {\n        this.setState({\n          firstFrameRendered: true,\n        });\n      });\n\n    return (\n      <div className={this._classNames.expandedCard} ref={this._expandedElem}>\n        <div className={this._classNames.expandedCardScroll}>\n          {this.props.onRenderExpandedCard && this.props.onRenderExpandedCard(this.props.renderData)}\n        </div>\n      </div>\n    );\n  };\n\n  private _checkNeedsScroll = (): void => {\n    const { expandedCardHeight } = this.props;\n    this._async.requestAnimationFrame(() => {\n      if (this._expandedElem.current && this._expandedElem.current.scrollHeight >= expandedCardHeight!) {\n        this.setState({\n          needsScroll: true,\n        });\n      }\n    });\n  };\n}\n"]},"metadata":{},"sourceType":"module"}