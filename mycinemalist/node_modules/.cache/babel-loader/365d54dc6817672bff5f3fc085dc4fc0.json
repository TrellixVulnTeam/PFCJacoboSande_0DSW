{"ast":null,"code":"import { HighContrastSelector, AnimationVariables, normalize, getPlaceholderStyles, getGlobalClassNames, getInputFocusStyle } from '../../Styling';\nimport { getRTL } from '../../Utilities';\nvar GlobalClassNames = {\n  root: 'ms-SearchBox',\n  iconContainer: 'ms-SearchBox-iconContainer',\n  icon: 'ms-SearchBox-icon',\n  clearButton: 'ms-SearchBox-clearButton',\n  field: 'ms-SearchBox-field'\n};\nexport function getStyles(props) {\n  var _a, _b, _c, _d;\n\n  var theme = props.theme,\n      underlined = props.underlined,\n      disabled = props.disabled,\n      hasFocus = props.hasFocus,\n      className = props.className,\n      hasInput = props.hasInput,\n      disableAnimation = props.disableAnimation;\n  var palette = theme.palette,\n      fonts = theme.fonts,\n      semanticColors = theme.semanticColors,\n      effects = theme.effects;\n  var classNames = getGlobalClassNames(GlobalClassNames, theme); // placeholder style constants\n\n  var placeholderStyles = {\n    color: semanticColors.inputPlaceholderText,\n    opacity: 1\n  };\n  var inputIconAlt = palette.neutralSecondary;\n  var inputIconAltHovered = palette.neutralPrimary;\n  var inputBorderDisabled = palette.neutralLighter;\n  var inputBackgroundHovered = palette.neutralLighter;\n  var inputBackgroundDisabled = palette.neutralLighter;\n  return {\n    root: [classNames.root, fonts.medium, normalize, {\n      color: semanticColors.inputText,\n      backgroundColor: semanticColors.inputBackground,\n      display: 'flex',\n      flexDirection: 'row',\n      flexWrap: 'nowrap',\n      alignItems: 'stretch',\n      // The 1px top and bottom padding ensure the input field does not overlap the border\n      padding: '1px 0 1px 4px',\n      borderRadius: effects.roundedCorner2,\n      border: \"1px solid \" + semanticColors.inputBorder,\n      height: 32,\n      selectors: (_a = {}, _a[HighContrastSelector] = {\n        borderColor: 'WindowText'\n      }, _a[':hover'] = {\n        borderColor: semanticColors.inputBorderHovered,\n        selectors: (_b = {}, _b[HighContrastSelector] = {\n          borderColor: 'Highlight'\n        }, _b)\n      }, _a[\":hover .\" + classNames.iconContainer] = {\n        color: semanticColors.inputIconHovered\n      }, _a)\n    }, !hasFocus && hasInput && {\n      selectors: (_c = {}, _c[\":hover .\" + classNames.iconContainer] = {\n        width: 4\n      }, _c[\":hover .\" + classNames.icon] = {\n        opacity: 0\n      }, _c)\n    }, hasFocus && ['is-active', {\n      position: 'relative'\n    }, getInputFocusStyle(semanticColors.inputFocusBorderAlt, underlined ? 0 : effects.roundedCorner2, underlined ? 'borderBottom' : 'border')], disabled && ['is-disabled', {\n      borderColor: inputBorderDisabled,\n      backgroundColor: inputBackgroundDisabled,\n      pointerEvents: 'none',\n      cursor: 'default',\n      selectors: (_d = {}, _d[HighContrastSelector] = {\n        borderColor: 'GrayText'\n      }, _d)\n    }], underlined && ['is-underlined', {\n      borderWidth: '0 0 1px 0',\n      borderRadius: 0,\n      // Underlined SearchBox has a larger padding left to vertically align with the waffle in product\n      padding: '1px 0 1px 8px'\n    }], underlined && disabled && {\n      backgroundColor: 'transparent'\n    }, hasInput && 'can-clear', className],\n    iconContainer: [classNames.iconContainer, {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      flexShrink: 0,\n      fontSize: 16,\n      width: 32,\n      textAlign: 'center',\n      color: semanticColors.inputIcon,\n      cursor: 'text'\n    }, hasFocus && {\n      width: 4\n    }, disabled && {\n      color: semanticColors.inputIconDisabled\n    }, !disableAnimation && {\n      transition: \"width \" + AnimationVariables.durationValue1\n    }],\n    icon: [classNames.icon, {\n      opacity: 1\n    }, hasFocus && {\n      opacity: 0\n    }, !disableAnimation && {\n      transition: \"opacity \" + AnimationVariables.durationValue1 + \" 0s\"\n    }],\n    clearButton: [classNames.clearButton, {\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'stretch',\n      cursor: 'pointer',\n      flexBasis: '32px',\n      flexShrink: 0,\n      padding: 0,\n      margin: '-1px 0px',\n      selectors: {\n        '&:hover .ms-Button': {\n          backgroundColor: inputBackgroundHovered\n        },\n        '&:hover .ms-Button-icon': {\n          color: inputIconAltHovered\n        },\n        '.ms-Button': {\n          borderRadius: getRTL(theme) ? '1px 0 0 1px' : '0 1px 1px 0'\n        },\n        '.ms-Button-icon': {\n          color: inputIconAlt\n        }\n      }\n    }],\n    field: [classNames.field, normalize, getPlaceholderStyles(placeholderStyles), {\n      backgroundColor: 'transparent',\n      border: 'none',\n      outline: 'none',\n      fontWeight: 'inherit',\n      fontFamily: 'inherit',\n      fontSize: 'inherit',\n      color: semanticColors.inputText,\n      flex: '1 1 0px',\n      // The default implicit value of 'auto' prevents the input from shrinking. Setting min-width to\n      // 0px allows the input element to shrink to fit the container.\n      minWidth: '0px',\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      // This padding forces the text placement to round up.\n      paddingBottom: 0.5,\n      // This removes the IE specific clear button in the input since we implimented our own\n      selectors: {\n        '::-ms-clear': {\n          display: 'none'\n        }\n      }\n    }, disabled && {\n      color: semanticColors.disabledText\n    }]\n  };\n}","map":{"version":3,"mappings":"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","names":["HighContrastSelector","AnimationVariables","normalize","getPlaceholderStyles","getGlobalClassNames","getInputFocusStyle","getRTL","GlobalClassNames","root","iconContainer","icon","clearButton","field","getStyles","props","underlined","disabled","hasFocus","className","hasInput","disableAnimation","fonts","semanticColors","effects","classNames","theme","placeholderStyles","color","inputPlaceholderText","opacity","inputIconAlt","palette","neutralSecondary","inputIconAltHovered","neutralPrimary","inputBorderDisabled","neutralLighter","inputBackgroundHovered","inputBackgroundDisabled","medium","inputText","backgroundColor","inputBackground","display","flexDirection","flexWrap","alignItems","padding","borderRadius","roundedCorner2","border","inputBorder","height","selectors","_a","borderColor","inputBorderHovered","_b","inputIconHovered","_c","width","position","inputFocusBorderAlt","pointerEvents","cursor","_d","borderWidth","justifyContent","flexShrink","fontSize","textAlign","inputIcon","inputIconDisabled","transition","durationValue1","flexBasis","margin","outline","fontWeight","fontFamily","flex","minWidth","overflow","textOverflow","paddingBottom","disabledText"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\office-ui-fabric-react\\lib\\components\\src\\components\\SearchBox\\SearchBox.styles.tsx"],"sourcesContent":["import {\n  HighContrastSelector,\n  AnimationVariables,\n  normalize,\n  IStyle,\n  getPlaceholderStyles,\n  getGlobalClassNames,\n  getInputFocusStyle,\n} from '../../Styling';\nimport { ISearchBoxStyleProps, ISearchBoxStyles } from './SearchBox.types';\nimport { getRTL } from '../../Utilities';\n\nconst GlobalClassNames = {\n  root: 'ms-SearchBox',\n  iconContainer: 'ms-SearchBox-iconContainer',\n  icon: 'ms-SearchBox-icon',\n  clearButton: 'ms-SearchBox-clearButton',\n  field: 'ms-SearchBox-field',\n};\n\nexport function getStyles(props: ISearchBoxStyleProps): ISearchBoxStyles {\n  const { theme, underlined, disabled, hasFocus, className, hasInput, disableAnimation } = props;\n  const { palette, fonts, semanticColors, effects } = theme;\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  // placeholder style constants\n  const placeholderStyles: IStyle = {\n    color: semanticColors.inputPlaceholderText,\n    opacity: 1,\n  };\n\n  const inputIconAlt = palette.neutralSecondary;\n  const inputIconAltHovered = palette.neutralPrimary;\n  const inputBorderDisabled = palette.neutralLighter;\n  const inputBackgroundHovered = palette.neutralLighter;\n  const inputBackgroundDisabled = palette.neutralLighter;\n\n  return {\n    root: [\n      classNames.root,\n      fonts.medium,\n      normalize,\n      {\n        color: semanticColors.inputText,\n        backgroundColor: semanticColors.inputBackground,\n        display: 'flex',\n        flexDirection: 'row',\n        flexWrap: 'nowrap',\n        alignItems: 'stretch',\n        // The 1px top and bottom padding ensure the input field does not overlap the border\n        padding: '1px 0 1px 4px',\n        borderRadius: effects.roundedCorner2,\n        border: `1px solid ${semanticColors.inputBorder}`,\n        height: 32,\n        selectors: {\n          [HighContrastSelector]: {\n            borderColor: 'WindowText',\n          },\n          ':hover': {\n            borderColor: semanticColors.inputBorderHovered,\n            selectors: {\n              [HighContrastSelector]: {\n                borderColor: 'Highlight',\n              },\n            },\n          },\n          [`:hover .${classNames.iconContainer}`]: {\n            color: semanticColors.inputIconHovered,\n          },\n        },\n      },\n      !hasFocus &&\n        hasInput && {\n          selectors: {\n            [`:hover .${classNames.iconContainer}`]: {\n              width: 4,\n            },\n            [`:hover .${classNames.icon}`]: {\n              opacity: 0,\n            },\n          },\n        },\n      hasFocus && [\n        'is-active',\n        {\n          position: 'relative',\n        },\n        getInputFocusStyle(\n          semanticColors.inputFocusBorderAlt,\n          underlined ? 0 : effects.roundedCorner2,\n          underlined ? 'borderBottom' : 'border',\n        ),\n      ],\n      disabled && [\n        'is-disabled',\n        {\n          borderColor: inputBorderDisabled,\n          backgroundColor: inputBackgroundDisabled,\n          pointerEvents: 'none',\n          cursor: 'default',\n          selectors: {\n            [HighContrastSelector]: {\n              borderColor: 'GrayText',\n            },\n          },\n        },\n      ],\n      underlined && [\n        'is-underlined',\n        {\n          borderWidth: '0 0 1px 0',\n          borderRadius: 0,\n          // Underlined SearchBox has a larger padding left to vertically align with the waffle in product\n          padding: '1px 0 1px 8px',\n        },\n      ],\n      underlined &&\n        disabled && {\n          backgroundColor: 'transparent',\n        },\n      hasInput && 'can-clear',\n      className,\n    ],\n    iconContainer: [\n      classNames.iconContainer,\n      {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        flexShrink: 0,\n        fontSize: 16,\n        width: 32,\n        textAlign: 'center',\n        color: semanticColors.inputIcon,\n        cursor: 'text',\n      },\n      hasFocus && {\n        width: 4,\n      },\n      disabled && {\n        color: semanticColors.inputIconDisabled,\n      },\n      !disableAnimation && {\n        transition: `width ${AnimationVariables.durationValue1}`,\n      },\n    ],\n    icon: [\n      classNames.icon,\n      {\n        opacity: 1,\n      },\n      hasFocus && {\n        opacity: 0,\n      },\n      !disableAnimation && {\n        transition: `opacity ${AnimationVariables.durationValue1} 0s`,\n      },\n    ],\n    clearButton: [\n      classNames.clearButton,\n      {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'stretch',\n        cursor: 'pointer',\n        flexBasis: '32px',\n        flexShrink: 0,\n        padding: 0,\n        margin: '-1px 0px',\n        selectors: {\n          '&:hover .ms-Button': {\n            backgroundColor: inputBackgroundHovered,\n          },\n          '&:hover .ms-Button-icon': {\n            color: inputIconAltHovered,\n          },\n          '.ms-Button': {\n            borderRadius: getRTL(theme) ? '1px 0 0 1px' : '0 1px 1px 0',\n          },\n          '.ms-Button-icon': {\n            color: inputIconAlt,\n          },\n        },\n      },\n    ],\n    field: [\n      classNames.field,\n      normalize,\n      getPlaceholderStyles(placeholderStyles),\n      {\n        backgroundColor: 'transparent',\n        border: 'none',\n        outline: 'none',\n        fontWeight: 'inherit',\n        fontFamily: 'inherit',\n        fontSize: 'inherit',\n        color: semanticColors.inputText,\n        flex: '1 1 0px',\n        // The default implicit value of 'auto' prevents the input from shrinking. Setting min-width to\n        // 0px allows the input element to shrink to fit the container.\n        minWidth: '0px',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        // This padding forces the text placement to round up.\n        paddingBottom: 0.5,\n        // This removes the IE specific clear button in the input since we implimented our own\n        selectors: {\n          '::-ms-clear': {\n            display: 'none',\n          },\n        },\n      },\n      disabled && {\n        color: semanticColors.disabledText,\n      },\n    ],\n  };\n}\n"]},"metadata":{},"sourceType":"module"}