{"ast":null,"code":"import { concatStyleSets, HighContrastSelector } from '../../../Styling';\nimport { memoizeFunction } from '../../../Utilities';\nimport { getStyles as getBaseButtonStyles } from '../BaseButton.styles';\nvar DEFAULT_BUTTON_HEIGHT = '40px';\nvar DEFAULT_PADDING = '0 4px';\nexport var getStyles = memoizeFunction(function (theme, customStyles) {\n  var _a;\n\n  var baseButtonStyles = getBaseButtonStyles(theme);\n  var actionButtonStyles = {\n    root: {\n      padding: DEFAULT_PADDING,\n      height: DEFAULT_BUTTON_HEIGHT,\n      color: theme.palette.neutralPrimary,\n      backgroundColor: 'transparent',\n      border: '1px solid transparent'\n    },\n    rootHovered: {\n      color: theme.palette.themePrimary,\n      selectors: (_a = {}, _a[HighContrastSelector] = {\n        borderColor: 'Highlight',\n        color: 'Highlight'\n      }, _a)\n    },\n    iconHovered: {\n      color: theme.palette.themePrimary\n    },\n    rootPressed: {\n      color: theme.palette.black\n    },\n    rootExpanded: {\n      color: theme.palette.themePrimary\n    },\n    iconPressed: {\n      color: theme.palette.themeDarker\n    },\n    rootDisabled: {\n      color: theme.palette.neutralTertiary,\n      backgroundColor: 'transparent',\n      borderColor: 'transparent'\n    },\n    rootChecked: {\n      color: theme.palette.black\n    },\n    iconChecked: {\n      color: theme.palette.themeDarker\n    },\n    flexContainer: {\n      justifyContent: 'flex-start'\n    },\n    icon: {\n      color: theme.palette.themeDarkAlt\n    },\n    iconDisabled: {\n      color: 'inherit'\n    },\n    menuIcon: {\n      color: theme.palette.neutralSecondary\n    },\n    textContainer: {\n      flexGrow: 0\n    }\n  };\n  return concatStyleSets(baseButtonStyles, actionButtonStyles, customStyles);\n});","map":{"version":3,"mappings":"AACA,SAAiBA,eAAjB,EAAkCC,oBAAlC,QAA8D,kBAA9D;AACA,SAASC,eAAT,QAAgC,oBAAhC;AACA,SAASC,SAAS,IAAIC,mBAAtB,QAAiD,sBAAjD;AAEA,IAAMC,qBAAqB,GAAG,MAA9B;AACA,IAAMC,eAAe,GAAG,OAAxB;AAEA,OAAO,IAAMH,SAAS,GAAGD,eAAe,CACtC,UAACK,KAAD,EAAgBC,YAAhB,EAA4C;;;AAC1C,MAAMC,gBAAgB,GAAkBL,mBAAmB,CAACG,KAAD,CAA3D;AACA,MAAMG,kBAAkB,GAAkB;AACxCC,QAAI,EAAE;AACJC,aAAO,EAAEN,eADL;AAEJO,YAAM,EAAER,qBAFJ;AAGJS,WAAK,EAAEP,KAAK,CAACQ,OAAN,CAAcC,cAHjB;AAIJC,qBAAe,EAAE,aAJb;AAKJC,YAAM,EAAE;AALJ,KADkC;AASxCC,eAAW,EAAE;AACXL,WAAK,EAAEP,KAAK,CAACQ,OAAN,CAAcK,YADV;AAEXC,eAAS,YACPC,GAACrB,oBAAD,IAAwB;AACtBsB,mBAAW,EAAE,WADS;AAEtBT,aAAK,EAAE;AAFe,OADjB;AAFE,KAT2B;AAmBxCU,eAAW,EAAE;AACXV,WAAK,EAAEP,KAAK,CAACQ,OAAN,CAAcK;AADV,KAnB2B;AAuBxCK,eAAW,EAAE;AACXX,WAAK,EAAEP,KAAK,CAACQ,OAAN,CAAcW;AADV,KAvB2B;AA2BxCC,gBAAY,EAAE;AACZb,WAAK,EAAEP,KAAK,CAACQ,OAAN,CAAcK;AADT,KA3B0B;AA+BxCQ,eAAW,EAAE;AACXd,WAAK,EAAEP,KAAK,CAACQ,OAAN,CAAcc;AADV,KA/B2B;AAmCxCC,gBAAY,EAAE;AACZhB,WAAK,EAAEP,KAAK,CAACQ,OAAN,CAAcgB,eADT;AAEZd,qBAAe,EAAE,aAFL;AAGZM,iBAAW,EAAE;AAHD,KAnC0B;AAyCxCS,eAAW,EAAE;AACXlB,WAAK,EAAEP,KAAK,CAACQ,OAAN,CAAcW;AADV,KAzC2B;AA6CxCO,eAAW,EAAE;AACXnB,WAAK,EAAEP,KAAK,CAACQ,OAAN,CAAcc;AADV,KA7C2B;AAiDxCK,iBAAa,EAAE;AACbC,oBAAc,EAAE;AADH,KAjDyB;AAqDxCC,QAAI,EAAE;AACJtB,WAAK,EAAEP,KAAK,CAACQ,OAAN,CAAcsB;AADjB,KArDkC;AAyDxCC,gBAAY,EAAE;AACZxB,WAAK,EAAE;AADK,KAzD0B;AA6DxCyB,YAAQ,EAAE;AACRzB,WAAK,EAAEP,KAAK,CAACQ,OAAN,CAAcyB;AADb,KA7D8B;AAiExCC,iBAAa,EAAE;AACbC,cAAQ,EAAE;AADG;AAjEyB,GAA1C;AAsEA,SAAO1C,eAAe,CAACS,gBAAD,EAAmBC,kBAAnB,EAAuCF,YAAvC,CAAtB;AACD,CA1EqC,CAAjC","names":["concatStyleSets","HighContrastSelector","memoizeFunction","getStyles","getBaseButtonStyles","DEFAULT_BUTTON_HEIGHT","DEFAULT_PADDING","theme","customStyles","baseButtonStyles","actionButtonStyles","root","padding","height","color","palette","neutralPrimary","backgroundColor","border","rootHovered","themePrimary","selectors","_a","borderColor","iconHovered","rootPressed","black","rootExpanded","iconPressed","themeDarker","rootDisabled","neutralTertiary","rootChecked","iconChecked","flexContainer","justifyContent","icon","themeDarkAlt","iconDisabled","menuIcon","neutralSecondary","textContainer","flexGrow"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\office-ui-fabric-react\\lib\\components\\Button\\src\\components\\Button\\ActionButton\\ActionButton.styles.ts"],"sourcesContent":["import { IButtonStyles } from '../Button.types';\nimport { ITheme, concatStyleSets, HighContrastSelector } from '../../../Styling';\nimport { memoizeFunction } from '../../../Utilities';\nimport { getStyles as getBaseButtonStyles } from '../BaseButton.styles';\n\nconst DEFAULT_BUTTON_HEIGHT = '40px';\nconst DEFAULT_PADDING = '0 4px';\n\nexport const getStyles = memoizeFunction(\n  (theme: ITheme, customStyles?: IButtonStyles): IButtonStyles => {\n    const baseButtonStyles: IButtonStyles = getBaseButtonStyles(theme);\n    const actionButtonStyles: IButtonStyles = {\n      root: {\n        padding: DEFAULT_PADDING,\n        height: DEFAULT_BUTTON_HEIGHT,\n        color: theme.palette.neutralPrimary,\n        backgroundColor: 'transparent',\n        border: '1px solid transparent',\n      },\n\n      rootHovered: {\n        color: theme.palette.themePrimary,\n        selectors: {\n          [HighContrastSelector]: {\n            borderColor: 'Highlight',\n            color: 'Highlight',\n          },\n        },\n      },\n\n      iconHovered: {\n        color: theme.palette.themePrimary,\n      },\n\n      rootPressed: {\n        color: theme.palette.black,\n      },\n\n      rootExpanded: {\n        color: theme.palette.themePrimary,\n      },\n\n      iconPressed: {\n        color: theme.palette.themeDarker,\n      },\n\n      rootDisabled: {\n        color: theme.palette.neutralTertiary,\n        backgroundColor: 'transparent',\n        borderColor: 'transparent',\n      },\n\n      rootChecked: {\n        color: theme.palette.black,\n      },\n\n      iconChecked: {\n        color: theme.palette.themeDarker,\n      },\n\n      flexContainer: {\n        justifyContent: 'flex-start',\n      },\n\n      icon: {\n        color: theme.palette.themeDarkAlt,\n      },\n\n      iconDisabled: {\n        color: 'inherit',\n      },\n\n      menuIcon: {\n        color: theme.palette.neutralSecondary,\n      },\n\n      textContainer: {\n        flexGrow: 0,\n      },\n    };\n\n    return concatStyleSets(baseButtonStyles, actionButtonStyles, customStyles)!;\n  },\n);\n"]},"metadata":{},"sourceType":"module"}