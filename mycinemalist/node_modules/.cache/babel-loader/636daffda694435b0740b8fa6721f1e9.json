{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { ComboBox } from './ComboBox';\nimport { List } from '../../List';\nimport { initializeComponentRef } from '../../Utilities';\n\nvar VirtualizedComboBox =\n/** @class */\nfunction (_super) {\n  __extends(VirtualizedComboBox, _super);\n\n  function VirtualizedComboBox(props) {\n    var _this = _super.call(this, props) || this;\n    /** The combo box element */\n\n\n    _this._comboBox = React.createRef();\n    /** The virtualized list element */\n\n    _this._list = React.createRef();\n\n    _this._onRenderList = function (props) {\n      var onRenderItem = props.onRenderItem; // Render virtualized list\n\n      return React.createElement(List, {\n        componentRef: _this._list,\n        role: \"listbox\",\n        items: props.options,\n        // eslint-disable-next-line react/jsx-no-bind\n        onRenderCell: onRenderItem ? function (item) {\n          return onRenderItem(item);\n        } : function () {\n          return null;\n        }\n      });\n    };\n\n    _this._onScrollToItem = function (itemIndex) {\n      // We are using the List component, call scrollToIndex\n      _this._list.current && _this._list.current.scrollToIndex(itemIndex);\n    };\n\n    initializeComponentRef(_this);\n    return _this;\n  }\n\n  Object.defineProperty(VirtualizedComboBox.prototype, \"selectedOptions\", {\n    /**\n     * All selected options\n     */\n    get: function get() {\n      if (this._comboBox.current) {\n        return this._comboBox.current.selectedOptions;\n      }\n\n      return [];\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  VirtualizedComboBox.prototype.dismissMenu = function () {\n    if (this._comboBox.current) {\n      return this._comboBox.current.dismissMenu();\n    }\n  };\n\n  VirtualizedComboBox.prototype.focus = function (shouldOpenOnFocus, useFocusAsync) {\n    if (this._comboBox.current) {\n      this._comboBox.current.focus(shouldOpenOnFocus, useFocusAsync);\n\n      return true;\n    }\n\n    return false;\n  };\n\n  VirtualizedComboBox.prototype.render = function () {\n    return React.createElement(ComboBox, __assign({}, this.props, {\n      componentRef: this._comboBox,\n      onRenderList: this._onRenderList,\n      onScrollToItem: this._onScrollToItem\n    }));\n  };\n\n  return VirtualizedComboBox;\n}(React.Component);\n\nexport { VirtualizedComboBox };","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,QAAyB,YAAzB;AAEA,SAAgBC,IAAhB,QAA4B,YAA5B;AAEA,SAASC,sBAAT,QAAuC,iBAAvC;;AAEA;AAAA;AAAA;EAAyCC;;EAMvC,6BAAYC,KAAZ,EAAiC;IAAjC,YACEC,kBAAMD,KAAN,KAAY,IADd;IALA;;;IACQE,kBAAYP,KAAK,CAACQ,SAAN,EAAZ;IACR;;IACQD,cAAQP,KAAK,CAACQ,SAAN,EAAR;;IA4CED,sBAAgB,UAACF,KAAD,EAAsB;MACtC,sCADsC,CAG9C;;MACA,OACEL,oBAACE,IAAD,EAAK;QACHO,YAAY,EAAEF,KAAI,CAACG,KADhB;QAEHC,IAAI,EAAC,SAFF;QAGHC,KAAK,EAAEP,KAAK,CAACQ,OAHV;QAIH;QACAC,YAAY,EAAEC,YAAY,GAAG,UAACC,IAAD,EAAwB;UAAK,mBAAY,CAACA,IAAD,CAAZ;QAAkB,CAAlD,GAAqD;UAAM;QAAI;MALtF,CAAL,CADF;IASD,CAbS;;IAeAT,wBAAkB,UAACU,SAAD,EAAkB;MAC5C;MACAV,KAAI,CAACG,KAAL,CAAWQ,OAAX,IAAsBX,KAAI,CAACG,KAAL,CAAWQ,OAAX,CAAmBC,aAAnB,CAAiCF,SAAjC,CAAtB;IACD,CAHS;;IAtDRd,sBAAsB,CAACI,KAAD,CAAtB;;EACD;;EAKDa,sBAAWC,6BAAX,EAAW,iBAAX,EAA0B;IAH1B;;;SAGA;MACE,IAAI,KAAKC,SAAL,CAAeJ,OAAnB,EAA4B;QAC1B,OAAO,KAAKI,SAAL,CAAeJ,OAAf,CAAuBK,eAA9B;MACD;;MACD,OAAO,EAAP;IACD,CALyB;oBAAA;;EAAA,CAA1B;;EAOOF,4CAAP;IACE,IAAI,KAAKC,SAAL,CAAeJ,OAAnB,EAA4B;MAC1B,OAAO,KAAKI,SAAL,CAAeJ,OAAf,CAAuBM,WAAvB,EAAP;IACD;EACF,CAJM;;EAMAH,sCAAP,UAAaI,iBAAb,EAA0CC,aAA1C,EAAiE;IAC/D,IAAI,KAAKJ,SAAL,CAAeJ,OAAnB,EAA4B;MAC1B,KAAKI,SAAL,CAAeJ,OAAf,CAAuBS,KAAvB,CAA6BF,iBAA7B,EAAgDC,aAAhD;;MACA,OAAO,IAAP;IACD;;IAED,OAAO,KAAP;EACD,CAPM;;EASAL,uCAAP;IACE,OACErB,oBAACC,QAAD,EAAS2B,aACH,KAAKvB,KADF,EACO;MACdI,YAAY,EAAE,KAAKa,SADL;MAEdO,YAAY,EAAE,KAAKC,aAFL;MAGdC,cAAc,EAAE,KAAKC;IAHP,CADP,CAAT,CADF;EAQD,CATM;;EA8BT;AAAC,CAnED,CAAyChC,KAAK,CAACiC,SAA/C","names":["React","ComboBox","List","initializeComponentRef","__extends","props","_super","_this","createRef","componentRef","_list","role","items","options","onRenderCell","onRenderItem","item","itemIndex","current","scrollToIndex","Object","VirtualizedComboBox","_comboBox","selectedOptions","dismissMenu","shouldOpenOnFocus","useFocusAsync","focus","__assign","onRenderList","_onRenderList","onScrollToItem","_onScrollToItem","Component"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\office-ui-fabric-react\\lib\\components\\src\\components\\ComboBox\\VirtualizedComboBox.tsx"],"sourcesContent":["import * as React from 'react';\nimport { ComboBox } from './ComboBox';\nimport { IComboBoxProps, IComboBox, IComboBoxOption } from './ComboBox.types';\nimport { IList, List } from '../../List';\nimport { ISelectableOption } from '../../utilities/selectableOption/SelectableOption.types';\nimport { initializeComponentRef } from '../../Utilities';\n\nexport class VirtualizedComboBox extends React.Component<IComboBoxProps, {}> implements IComboBox {\n  /** The combo box element */\n  private _comboBox = React.createRef<IComboBox>();\n  /** The virtualized list element */\n  private _list = React.createRef<IList>();\n\n  constructor(props: IComboBoxProps) {\n    super(props);\n\n    initializeComponentRef(this);\n  }\n\n  /**\n   * All selected options\n   */\n  public get selectedOptions(): IComboBoxOption[] {\n    if (this._comboBox.current) {\n      return this._comboBox.current.selectedOptions;\n    }\n    return [];\n  }\n\n  public dismissMenu(): void {\n    if (this._comboBox.current) {\n      return this._comboBox.current.dismissMenu();\n    }\n  }\n\n  public focus(shouldOpenOnFocus?: boolean, useFocusAsync?: boolean) {\n    if (this._comboBox.current) {\n      this._comboBox.current.focus(shouldOpenOnFocus, useFocusAsync);\n      return true;\n    }\n\n    return false;\n  }\n\n  public render(): JSX.Element {\n    return (\n      <ComboBox\n        {...this.props}\n        componentRef={this._comboBox}\n        onRenderList={this._onRenderList}\n        onScrollToItem={this._onScrollToItem}\n      />\n    );\n  }\n\n  protected _onRenderList = (props: IComboBoxProps): JSX.Element => {\n    const { onRenderItem } = props;\n\n    // Render virtualized list\n    return (\n      <List\n        componentRef={this._list}\n        role=\"listbox\"\n        items={props.options}\n        // eslint-disable-next-line react/jsx-no-bind\n        onRenderCell={onRenderItem ? (item: ISelectableOption) => onRenderItem(item) : () => null}\n      />\n    );\n  };\n\n  protected _onScrollToItem = (itemIndex: number): void => {\n    // We are using the List component, call scrollToIndex\n    this._list.current && this._list.current.scrollToIndex(itemIndex);\n  };\n}\n"]},"metadata":{},"sourceType":"module"}