{"ast":null,"code":"import { memoizeFunction } from '../../Utilities';\nimport { mergeStyles } from '../../Styling';\nimport { Position } from '../../utilities/positioning';\nexport var getClassNames = memoizeFunction(function (styles, disabled, isFocused, keyboardSpinDirection, labelPosition, className) {\n  if (labelPosition === void 0) {\n    labelPosition = Position.start;\n  }\n\n  if (className === void 0) {\n    className = undefined;\n  }\n\n  return {\n    root: mergeStyles(styles.root, className),\n    labelWrapper: mergeStyles(styles.labelWrapper, _getStyleForLabelBasedOnPosition(labelPosition, styles)),\n    icon: mergeStyles(styles.icon, disabled && styles.iconDisabled),\n    label: mergeStyles(styles.label),\n    spinButtonWrapper: mergeStyles(styles.spinButtonWrapper, _getStyleForRootBasedOnPosition(labelPosition, styles), !disabled && [{\n      selectors: {\n        ':hover': styles.spinButtonWrapperHovered\n      }\n    }, isFocused && {\n      // This is to increase the specificity of the focus styles\n      // and make it equal to that of the hover styles.\n      selectors: {\n        '&&': styles.spinButtonWrapperFocused\n      }\n    }], disabled && styles.spinButtonWrapperDisabled),\n    input: mergeStyles('ms-spinButton-input', styles.input, !disabled && {\n      selectors: {\n        '::selection': styles.inputTextSelected\n      }\n    }, disabled && styles.inputDisabled),\n    arrowBox: mergeStyles(styles.arrowButtonsContainer, disabled && styles.arrowButtonsContainerDisabled)\n  };\n});\n/**\n * Returns the Style corresponding to the label position\n */\n\nfunction _getStyleForLabelBasedOnPosition(labelPosition, styles) {\n  switch (labelPosition) {\n    case Position.start:\n      return styles.labelWrapperStart;\n\n    case Position.end:\n      return styles.labelWrapperEnd;\n\n    case Position.top:\n      return styles.labelWrapperTop;\n\n    case Position.bottom:\n      return styles.labelWrapperBottom;\n  }\n}\n/**\n * Returns the Style corresponding to the label position\n */\n\n\nfunction _getStyleForRootBasedOnPosition(labelPosition, styles) {\n  switch (labelPosition) {\n    case Position.top:\n    case Position.bottom:\n      return styles.spinButtonWrapperTopBottom;\n\n    default:\n      return {};\n  }\n}","map":{"version":3,"mappings":"AAAA,SAASA,eAAT,QAAgC,iBAAhC;AACA,SAASC,WAAT,QAAoC,eAApC;AAGA,SAASC,QAAT,QAAyB,6BAAzB;AAEA,OAAO,IAAMC,aAAa,GAAGH,eAAe,CAC1C,UACEI,MADF,EAEEC,QAFF,EAGEC,SAHF,EAIEC,qBAJF,EAKEC,aALF,EAMEC,SANF,EAM2C;EADzC;IAAAD,gBAA0BN,QAAQ,CAACQ,KAAnC;EAAwC;;EACxC;IAAAD;EAAyC;;EAEzC,OAAO;IACLE,IAAI,EAAEV,WAAW,CAACG,MAAM,CAACO,IAAR,EAAcF,SAAd,CADZ;IAELG,YAAY,EAAEX,WAAW,CAACG,MAAM,CAACQ,YAAR,EAAsBC,gCAAgC,CAACL,aAAD,EAAgBJ,MAAhB,CAAtD,CAFpB;IAGLU,IAAI,EAAEb,WAAW,CAACG,MAAM,CAACU,IAAR,EAAcT,QAAQ,IAAID,MAAM,CAACW,YAAjC,CAHZ;IAILC,KAAK,EAAEf,WAAW,CAACG,MAAM,CAACY,KAAR,CAJb;IAKLC,iBAAiB,EAAEhB,WAAW,CAC5BG,MAAM,CAACa,iBADqB,EAE5BC,+BAA+B,CAACV,aAAD,EAAgBJ,MAAhB,CAFH,EAG5B,CAACC,QAAD,IAAa,CACX;MACEc,SAAS,EAAE;QACT,UAAUf,MAAM,CAACgB;MADR;IADb,CADW,EAMXd,SAAS,IAAI;MACX;MACA;MACAa,SAAS,EAAE;QACT,MAAMf,MAAM,CAACiB;MADJ;IAHA,CANF,CAHe,EAiB5BhB,QAAQ,IAAID,MAAM,CAACkB,yBAjBS,CALzB;IAwBLC,KAAK,EAAEtB,WAAW,CAChB,qBADgB,EAEhBG,MAAM,CAACmB,KAFS,EAGhB,CAAClB,QAAD,IAAa;MACXc,SAAS,EAAE;QACT,eAAef,MAAM,CAACoB;MADb;IADA,CAHG,EAQhBnB,QAAQ,IAAID,MAAM,CAACqB,aARH,CAxBb;IAkCLC,QAAQ,EAAEzB,WAAW,CAACG,MAAM,CAACuB,qBAAR,EAA+BtB,QAAQ,IAAID,MAAM,CAACwB,6BAAlD;EAlChB,CAAP;AAoCD,CA7CyC,CAArC;AAgDP;;;;AAGA,SAASf,gCAAT,CAA0CL,aAA1C,EAAmEJ,MAAnE,EAA4F;EAC1F,QAAQI,aAAR;IACE,KAAKN,QAAQ,CAACQ,KAAd;MACE,OAAON,MAAM,CAACyB,iBAAd;;IACF,KAAK3B,QAAQ,CAAC4B,GAAd;MACE,OAAO1B,MAAM,CAAC2B,eAAd;;IACF,KAAK7B,QAAQ,CAAC8B,GAAd;MACE,OAAO5B,MAAM,CAAC6B,eAAd;;IACF,KAAK/B,QAAQ,CAACgC,MAAd;MACE,OAAO9B,MAAM,CAAC+B,kBAAd;EARJ;AAUD;AAED;;;;;AAGA,SAASjB,+BAAT,CAAyCV,aAAzC,EAAkEJ,MAAlE,EAA2F;EACzF,QAAQI,aAAR;IACE,KAAKN,QAAQ,CAAC8B,GAAd;IACA,KAAK9B,QAAQ,CAACgC,MAAd;MACE,OAAO9B,MAAM,CAACgC,0BAAd;;IACF;MACE,OAAO,EAAP;EALJ;AAOD","names":["memoizeFunction","mergeStyles","Position","getClassNames","styles","disabled","isFocused","keyboardSpinDirection","labelPosition","className","start","root","labelWrapper","_getStyleForLabelBasedOnPosition","icon","iconDisabled","label","spinButtonWrapper","_getStyleForRootBasedOnPosition","selectors","spinButtonWrapperHovered","spinButtonWrapperFocused","spinButtonWrapperDisabled","input","inputTextSelected","inputDisabled","arrowBox","arrowButtonsContainer","arrowButtonsContainerDisabled","labelWrapperStart","end","labelWrapperEnd","top","labelWrapperTop","bottom","labelWrapperBottom","spinButtonWrapperTopBottom"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\office-ui-fabric-react\\lib\\components\\src\\components\\SpinButton\\SpinButton.classNames.ts"],"sourcesContent":["import { memoizeFunction } from '../../Utilities';\nimport { mergeStyles, IStyle } from '../../Styling';\nimport { ISpinButtonClassNames, ISpinButtonStyles } from './SpinButton.types';\nimport { KeyboardSpinDirection } from './SpinButton';\nimport { Position } from '../../utilities/positioning';\n\nexport const getClassNames = memoizeFunction(\n  (\n    styles: ISpinButtonStyles,\n    disabled: boolean,\n    isFocused: boolean,\n    keyboardSpinDirection: KeyboardSpinDirection,\n    labelPosition: Position = Position.start,\n    className: string | undefined = undefined,\n  ): ISpinButtonClassNames => {\n    return {\n      root: mergeStyles(styles.root, className),\n      labelWrapper: mergeStyles(styles.labelWrapper, _getStyleForLabelBasedOnPosition(labelPosition, styles)),\n      icon: mergeStyles(styles.icon, disabled && styles.iconDisabled),\n      label: mergeStyles(styles.label),\n      spinButtonWrapper: mergeStyles(\n        styles.spinButtonWrapper,\n        _getStyleForRootBasedOnPosition(labelPosition, styles),\n        !disabled && [\n          {\n            selectors: {\n              ':hover': styles.spinButtonWrapperHovered,\n            },\n          },\n          isFocused && {\n            // This is to increase the specificity of the focus styles\n            // and make it equal to that of the hover styles.\n            selectors: {\n              '&&': styles.spinButtonWrapperFocused,\n            },\n          },\n        ],\n        disabled && styles.spinButtonWrapperDisabled,\n      ),\n      input: mergeStyles(\n        'ms-spinButton-input',\n        styles.input,\n        !disabled && {\n          selectors: {\n            '::selection': styles.inputTextSelected,\n          },\n        },\n        disabled && styles.inputDisabled,\n      ),\n      arrowBox: mergeStyles(styles.arrowButtonsContainer, disabled && styles.arrowButtonsContainerDisabled),\n    };\n  },\n);\n\n/**\n * Returns the Style corresponding to the label position\n */\nfunction _getStyleForLabelBasedOnPosition(labelPosition: Position, styles: ISpinButtonStyles): IStyle {\n  switch (labelPosition) {\n    case Position.start:\n      return styles.labelWrapperStart;\n    case Position.end:\n      return styles.labelWrapperEnd;\n    case Position.top:\n      return styles.labelWrapperTop;\n    case Position.bottom:\n      return styles.labelWrapperBottom;\n  }\n}\n\n/**\n * Returns the Style corresponding to the label position\n */\nfunction _getStyleForRootBasedOnPosition(labelPosition: Position, styles: ISpinButtonStyles): IStyle {\n  switch (labelPosition) {\n    case Position.top:\n    case Position.bottom:\n      return styles.spinButtonWrapperTopBottom;\n    default:\n      return {};\n  }\n}\n"]},"metadata":{},"sourceType":"module"}