{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { initializeComponentRef, classNamesFunction, KeyCodes } from '../../Utilities';\nimport { PrimaryButton, DefaultButton, IconButton } from '../../Button';\nimport { Image } from '../../Image';\nimport { Stack } from '../../Stack';\nimport { FocusTrapZone } from '../../FocusTrapZone';\nvar getClassNames = classNamesFunction();\n\nvar TeachingBubbleContentBase =\n/** @class */\nfunction (_super) {\n  __extends(TeachingBubbleContentBase, _super);\n\n  function TeachingBubbleContentBase(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.rootElement = React.createRef();\n\n    _this._onKeyDown = function (e) {\n      if (_this.props.onDismiss) {\n        if (e.which === KeyCodes.escape) {\n          _this.props.onDismiss();\n        }\n      }\n    };\n\n    initializeComponentRef(_this);\n    _this.state = {};\n    return _this;\n  }\n\n  TeachingBubbleContentBase.prototype.componentDidMount = function () {\n    if (this.props.onDismiss) {\n      document.addEventListener('keydown', this._onKeyDown, false);\n    }\n  };\n\n  TeachingBubbleContentBase.prototype.componentWillUnmount = function () {\n    if (this.props.onDismiss) {\n      document.removeEventListener('keydown', this._onKeyDown);\n    }\n  };\n\n  TeachingBubbleContentBase.prototype.focus = function () {\n    if (this.rootElement.current) {\n      this.rootElement.current.focus();\n    }\n  };\n\n  TeachingBubbleContentBase.prototype.render = function () {\n    var _a = this.props,\n        children = _a.children,\n        illustrationImage = _a.illustrationImage,\n        primaryButtonProps = _a.primaryButtonProps,\n        secondaryButtonProps = _a.secondaryButtonProps,\n        headline = _a.headline,\n        hasCondensedHeadline = _a.hasCondensedHeadline,\n        // eslint-disable-next-line deprecation/deprecation\n    _b = _a.hasCloseButton,\n        // eslint-disable-next-line deprecation/deprecation\n    hasCloseButton = _b === void 0 ? this.props.hasCloseIcon : _b,\n        onDismiss = _a.onDismiss,\n        closeButtonAriaLabel = _a.closeButtonAriaLabel,\n        hasSmallHeadline = _a.hasSmallHeadline,\n        isWide = _a.isWide,\n        styles = _a.styles,\n        theme = _a.theme,\n        ariaDescribedBy = _a.ariaDescribedBy,\n        ariaLabelledBy = _a.ariaLabelledBy,\n        customFooterContent = _a.footerContent,\n        focusTrapZoneProps = _a.focusTrapZoneProps;\n    var imageContent;\n    var headerContent;\n    var bodyContent;\n    var footerContent;\n    var closeButton;\n    var classNames = getClassNames(styles, {\n      theme: theme,\n      hasCondensedHeadline: hasCondensedHeadline,\n      hasSmallHeadline: hasSmallHeadline,\n      hasCloseButton: hasCloseButton,\n      hasHeadline: !!headline,\n      isWide: isWide,\n      primaryButtonClassName: primaryButtonProps ? primaryButtonProps.className : undefined,\n      secondaryButtonClassName: secondaryButtonProps ? secondaryButtonProps.className : undefined\n    });\n\n    if (illustrationImage && illustrationImage.src) {\n      imageContent = React.createElement(\"div\", {\n        className: classNames.imageContent\n      }, React.createElement(Image, __assign({}, illustrationImage)));\n    }\n\n    if (headline) {\n      var HeaderWrapperAs = typeof headline === 'string' ? 'p' : 'div';\n      headerContent = React.createElement(\"div\", {\n        className: classNames.header\n      }, React.createElement(HeaderWrapperAs, {\n        role: \"heading\",\n        className: classNames.headline,\n        id: ariaLabelledBy\n      }, headline));\n    }\n\n    if (children) {\n      var BodyContentWrapperAs = typeof children === 'string' ? 'p' : 'div';\n      bodyContent = React.createElement(\"div\", {\n        className: classNames.body\n      }, React.createElement(BodyContentWrapperAs, {\n        className: classNames.subText,\n        id: ariaDescribedBy\n      }, children));\n    }\n\n    if (primaryButtonProps || secondaryButtonProps || customFooterContent) {\n      footerContent = React.createElement(Stack, {\n        className: classNames.footer,\n        horizontal: true,\n        horizontalAlign: customFooterContent ? 'space-between' : 'end'\n      }, React.createElement(Stack.Item, {\n        align: \"center\"\n      }, React.createElement(\"span\", null, customFooterContent)), React.createElement(Stack.Item, null, secondaryButtonProps && React.createElement(DefaultButton, __assign({}, secondaryButtonProps, {\n        className: classNames.secondaryButton\n      })), primaryButtonProps && React.createElement(PrimaryButton, __assign({}, primaryButtonProps, {\n        className: classNames.primaryButton\n      }))));\n    }\n\n    if (hasCloseButton) {\n      closeButton = React.createElement(IconButton, {\n        className: classNames.closeButton,\n        iconProps: {\n          iconName: 'Cancel'\n        },\n        title: closeButtonAriaLabel,\n        ariaLabel: closeButtonAriaLabel,\n        onClick: onDismiss\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: classNames.content,\n      ref: this.rootElement,\n      role: 'dialog',\n      tabIndex: -1,\n      \"aria-labelledby\": ariaLabelledBy,\n      \"aria-describedby\": ariaDescribedBy,\n      \"data-is-focusable\": true\n    }, imageContent, React.createElement(FocusTrapZone, __assign({\n      isClickableOutsideFocusTrap: true\n    }, focusTrapZoneProps), React.createElement(\"div\", {\n      className: classNames.bodyContent\n    }, headerContent, bodyContent, footerContent, closeButton)));\n  };\n\n  return TeachingBubbleContentBase;\n}(React.Component);\n\nexport { TeachingBubbleContentBase };","map":{"version":3,"mappings":"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","names":["React","initializeComponentRef","classNamesFunction","KeyCodes","PrimaryButton","DefaultButton","IconButton","Image","Stack","FocusTrapZone","getClassNames","__extends","props","_super","_this","createRef","e","onDismiss","which","escape","state","TeachingBubbleContentBase","document","addEventListener","_onKeyDown","removeEventListener","rootElement","current","focus","children","illustrationImage","primaryButtonProps","secondaryButtonProps","headline","hasCondensedHeadline","_b","hasCloseButton","closeButtonAriaLabel","hasSmallHeadline","isWide","styles","theme","ariaDescribedBy","ariaLabelledBy","customFooterContent","focusTrapZoneProps","imageContent","headerContent","bodyContent","footerContent","closeButton","classNames","hasHeadline","primaryButtonClassName","className","undefined","secondaryButtonClassName","src","__assign","HeaderWrapperAs","header","role","id","BodyContentWrapperAs","body","subText","footer","horizontal","horizontalAlign","Item","align","secondaryButton","primaryButton","iconProps","iconName","title","ariaLabel","onClick","content","ref","tabIndex","isClickableOutsideFocusTrap","Component"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\office-ui-fabric-react\\lib\\components\\src\\components\\TeachingBubble\\TeachingBubbleContent.base.tsx"],"sourcesContent":["import * as React from 'react';\nimport { initializeComponentRef, classNamesFunction, KeyCodes } from '../../Utilities';\nimport { ITeachingBubbleProps, ITeachingBubbleStyleProps, ITeachingBubbleStyles } from './TeachingBubble.types';\nimport { ITeachingBubbleState } from './TeachingBubble.base';\nimport { PrimaryButton, DefaultButton, IconButton } from '../../Button';\nimport { Image } from '../../Image';\nimport { Stack } from '../../Stack';\nimport { FocusTrapZone } from '../../FocusTrapZone';\n\nconst getClassNames = classNamesFunction<ITeachingBubbleStyleProps, ITeachingBubbleStyles>();\n\nexport class TeachingBubbleContentBase extends React.Component<ITeachingBubbleProps, ITeachingBubbleState> {\n  public rootElement = React.createRef<HTMLDivElement>();\n\n  constructor(props: ITeachingBubbleProps) {\n    super(props);\n\n    initializeComponentRef(this);\n    this.state = {};\n  }\n\n  public componentDidMount(): void {\n    if (this.props.onDismiss) {\n      document.addEventListener('keydown', this._onKeyDown, false);\n    }\n  }\n\n  public componentWillUnmount(): void {\n    if (this.props.onDismiss) {\n      document.removeEventListener('keydown', this._onKeyDown);\n    }\n  }\n\n  public focus(): void {\n    if (this.rootElement.current) {\n      this.rootElement.current.focus();\n    }\n  }\n\n  public render(): JSX.Element {\n    const {\n      children,\n      illustrationImage,\n      primaryButtonProps,\n      secondaryButtonProps,\n      headline,\n      hasCondensedHeadline,\n      // eslint-disable-next-line deprecation/deprecation\n      hasCloseButton = this.props.hasCloseIcon,\n      onDismiss,\n      closeButtonAriaLabel,\n      hasSmallHeadline,\n      isWide,\n      styles,\n      theme,\n      ariaDescribedBy,\n      ariaLabelledBy,\n      footerContent: customFooterContent,\n      focusTrapZoneProps,\n    } = this.props;\n\n    let imageContent;\n    let headerContent;\n    let bodyContent;\n    let footerContent;\n    let closeButton;\n\n    const classNames = getClassNames(styles, {\n      theme: theme!,\n      hasCondensedHeadline,\n      hasSmallHeadline,\n      hasCloseButton,\n      hasHeadline: !!headline,\n      isWide,\n      primaryButtonClassName: primaryButtonProps ? primaryButtonProps.className : undefined,\n      secondaryButtonClassName: secondaryButtonProps ? secondaryButtonProps.className : undefined,\n    });\n\n    if (illustrationImage && illustrationImage.src) {\n      imageContent = (\n        <div className={classNames.imageContent}>\n          <Image {...(illustrationImage as any)} />\n        </div>\n      );\n    }\n\n    if (headline) {\n      const HeaderWrapperAs = typeof headline === 'string' ? 'p' : 'div';\n\n      headerContent = (\n        <div className={classNames.header}>\n          <HeaderWrapperAs role=\"heading\" className={classNames.headline} id={ariaLabelledBy}>\n            {headline}\n          </HeaderWrapperAs>\n        </div>\n      );\n    }\n\n    if (children) {\n      const BodyContentWrapperAs = typeof children === 'string' ? 'p' : 'div';\n\n      bodyContent = (\n        <div className={classNames.body}>\n          <BodyContentWrapperAs className={classNames.subText} id={ariaDescribedBy}>\n            {children}\n          </BodyContentWrapperAs>\n        </div>\n      );\n    }\n\n    if (primaryButtonProps || secondaryButtonProps || customFooterContent) {\n      footerContent = (\n        <Stack className={classNames.footer} horizontal horizontalAlign={customFooterContent ? 'space-between' : 'end'}>\n          <Stack.Item align=\"center\">{<span>{customFooterContent}</span>}</Stack.Item>\n          <Stack.Item>\n            {secondaryButtonProps && <DefaultButton {...secondaryButtonProps} className={classNames.secondaryButton} />}\n            {primaryButtonProps && <PrimaryButton {...primaryButtonProps} className={classNames.primaryButton} />}\n          </Stack.Item>\n        </Stack>\n      );\n    }\n\n    if (hasCloseButton) {\n      closeButton = (\n        <IconButton\n          className={classNames.closeButton}\n          iconProps={{ iconName: 'Cancel' }}\n          title={closeButtonAriaLabel}\n          ariaLabel={closeButtonAriaLabel}\n          onClick={onDismiss}\n        />\n      );\n    }\n\n    return (\n      <div\n        className={classNames.content}\n        ref={this.rootElement}\n        role={'dialog'}\n        tabIndex={-1}\n        aria-labelledby={ariaLabelledBy}\n        aria-describedby={ariaDescribedBy}\n        data-is-focusable={true}\n      >\n        {imageContent}\n        <FocusTrapZone isClickableOutsideFocusTrap={true} {...focusTrapZoneProps}>\n          <div className={classNames.bodyContent}>\n            {headerContent}\n            {bodyContent}\n            {footerContent}\n            {closeButton}\n          </div>\n        </FocusTrapZone>\n      </div>\n    );\n  }\n\n  private _onKeyDown = (e: any): void => {\n    if (this.props.onDismiss) {\n      if (e.which === KeyCodes.escape) {\n        this.props.onDismiss();\n      }\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}