{"ast":null,"code":"var SuggestionsStore =\n/** @class */\nfunction () {\n  function SuggestionsStore(options) {\n    var _this = this;\n\n    this._isSuggestionModel = function (value) {\n      return value.item !== undefined;\n    };\n\n    this._ensureSuggestionModel = function (suggestion) {\n      if (_this._isSuggestionModel(suggestion)) {\n        return suggestion;\n      } else {\n        return {\n          item: suggestion,\n          selected: false,\n          ariaLabel: _this.getAriaLabel !== undefined ? _this.getAriaLabel(suggestion) : suggestion.name || suggestion.text || suggestion.primaryText\n        };\n      }\n    };\n\n    this.suggestions = [];\n    this.getAriaLabel = options && options.getAriaLabel;\n  }\n\n  SuggestionsStore.prototype.updateSuggestions = function (newSuggestions) {\n    if (newSuggestions && newSuggestions.length > 0) {\n      this.suggestions = this.convertSuggestionsToSuggestionItems(newSuggestions);\n    } else {\n      this.suggestions = [];\n    }\n  };\n\n  SuggestionsStore.prototype.getSuggestions = function () {\n    return this.suggestions;\n  };\n\n  SuggestionsStore.prototype.getSuggestionAtIndex = function (index) {\n    return this.suggestions[index];\n  };\n\n  SuggestionsStore.prototype.removeSuggestion = function (index) {\n    this.suggestions.splice(index, 1);\n  };\n\n  SuggestionsStore.prototype.convertSuggestionsToSuggestionItems = function (suggestions) {\n    return Array.isArray(suggestions) ? suggestions.map(this._ensureSuggestionModel) : [];\n  };\n\n  return SuggestionsStore;\n}();\n\nexport { SuggestionsStore };","map":{"version":3,"mappings":"AAOA;AAAA;AAAA;EAIE,0BAAYA,OAAZ,EAAgD;IAAhD;;IA6BQ,0BAAqB,UAACC,KAAD,EAA+B;MAC1D,OAA6BA,KAAM,CAACC,IAAP,KAAgBC,SAA7C;IACD,CAFO;;IAIA,8BAAyB,UAACC,UAAD,EAAoC;MACnE,IAAIC,KAAI,CAACC,kBAAL,CAAwBF,UAAxB,CAAJ,EAAyC;QACvC,OAAOA,UAAP;MACD,CAFD,MAEO;QACL,OAAO;UACLF,IAAI,EAAEE,UADD;UAELG,QAAQ,EAAE,KAFL;UAGLC,SAAS,EACPH,KAAI,CAACI,YAAL,KAAsBN,SAAtB,GACIE,KAAI,CAACI,YAAL,CAAkBL,UAAlB,CADJ,GAEMA,UAA2B,CAACM,IAA5B,IACcN,UAAW,CAACO,IAD1B,IAEcP,UAAW,CAACQ;QAR7B,CAAP;MAUD;IACF,CAfO;;IAhCN,KAAKC,WAAL,GAAmB,EAAnB;IACA,KAAKJ,YAAL,GAAoBT,OAAO,IAAIA,OAAO,CAACS,YAAvC;EACD;;EAEMK,+CAAP,UAAyBC,cAAzB,EAA4C;IAC1C,IAAIA,cAAc,IAAIA,cAAc,CAACC,MAAf,GAAwB,CAA9C,EAAiD;MAC/C,KAAKH,WAAL,GAAmB,KAAKI,mCAAL,CAAyCF,cAAzC,CAAnB;IACD,CAFD,MAEO;MACL,KAAKF,WAAL,GAAmB,EAAnB;IACD;EACF,CANM;;EAQAC,4CAAP;IACE,OAAO,KAAKD,WAAZ;EACD,CAFM;;EAIAC,kDAAP,UAA4BI,KAA5B,EAAyC;IACvC,OAAO,KAAKL,WAAL,CAAiBK,KAAjB,CAAP;EACD,CAFM;;EAIAJ,8CAAP,UAAwBI,KAAxB,EAAqC;IACnC,KAAKL,WAAL,CAAiBM,MAAjB,CAAwBD,KAAxB,EAA+B,CAA/B;EACD,CAFM;;EAIAJ,iEAAP,UAA2CD,WAA3C,EAAsF;IACpF,OAAOO,KAAK,CAACC,OAAN,CAAcR,WAAd,IAA6BA,WAAW,CAACS,GAAZ,CAAgB,KAAKC,sBAArB,CAA7B,GAA4E,EAAnF;EACD,CAFM;;EAwBT;AAAC,CArDD","names":["options","value","item","undefined","suggestion","_this","_isSuggestionModel","selected","ariaLabel","getAriaLabel","name","text","primaryText","suggestions","SuggestionsStore","newSuggestions","length","convertSuggestionsToSuggestionItems","index","splice","Array","isArray","map","_ensureSuggestionModel"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\office-ui-fabric-react\\lib\\components\\FloatingPicker\\src\\components\\FloatingPicker\\Suggestions\\SuggestionsStore.ts"],"sourcesContent":["import { ISuggestionModel, ITag } from '../../../Pickers';\nimport { IPersonaProps } from '../../../Persona';\n\nexport type SuggestionsStoreOptions<T> = {\n  getAriaLabel?: (item: T) => string;\n};\n\nexport class SuggestionsStore<T> {\n  public suggestions: ISuggestionModel<T>[];\n  private getAriaLabel?: (item: T) => string;\n\n  constructor(options?: SuggestionsStoreOptions<T>) {\n    this.suggestions = [];\n    this.getAriaLabel = options && options.getAriaLabel;\n  }\n\n  public updateSuggestions(newSuggestions: T[]): void {\n    if (newSuggestions && newSuggestions.length > 0) {\n      this.suggestions = this.convertSuggestionsToSuggestionItems(newSuggestions);\n    } else {\n      this.suggestions = [];\n    }\n  }\n\n  public getSuggestions(): ISuggestionModel<T>[] {\n    return this.suggestions;\n  }\n\n  public getSuggestionAtIndex(index: number): ISuggestionModel<T> {\n    return this.suggestions[index];\n  }\n\n  public removeSuggestion(index: number): void {\n    this.suggestions.splice(index, 1);\n  }\n\n  public convertSuggestionsToSuggestionItems(suggestions: Array<ISuggestionModel<T> | T>): ISuggestionModel<T>[] {\n    return Array.isArray(suggestions) ? suggestions.map(this._ensureSuggestionModel) : [];\n  }\n\n  private _isSuggestionModel = (value: ISuggestionModel<T> | T): value is ISuggestionModel<T> => {\n    return (<ISuggestionModel<T>>value).item !== undefined;\n  };\n\n  private _ensureSuggestionModel = (suggestion: ISuggestionModel<T> | T): ISuggestionModel<T> => {\n    if (this._isSuggestionModel(suggestion)) {\n      return suggestion;\n    } else {\n      return {\n        item: suggestion,\n        selected: false,\n        ariaLabel:\n          this.getAriaLabel !== undefined\n            ? this.getAriaLabel(suggestion)\n            : ((suggestion as any) as ITag).name ||\n              (<IPersonaProps>suggestion).text ||\n              (<IPersonaProps>suggestion).primaryText, // eslint-disable-line deprecation/deprecation\n      };\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}