{"ast":null,"code":"import { getWindow } from './dom/getWindow';\n/**\n * Fetches an item from session storage without throwing an exception\n * @param key The key of the item to fetch from session storage\n */\n\nexport function getItem(key) {\n  var result = null;\n\n  try {\n    var win = getWindow();\n    result = win ? win.sessionStorage.getItem(key) : null;\n  } catch (e) {\n    /* Eat the exception */\n  }\n\n  return result;\n}\n/**\n * Inserts an item into session storage without throwing an exception\n * @param key The key of the item to add to session storage\n * @param data The data to put into session storage\n */\n\nexport function setItem(key, data) {\n  var _a;\n\n  try {\n    (_a = getWindow()) === null || _a === void 0 ? void 0 : _a.sessionStorage.setItem(key, data);\n  } catch (e) {\n    /* Eat the exception */\n  }\n}","map":{"version":3,"mappings":"AAAA,SAASA,SAAT,QAA0B,iBAA1B;AAEA;;;;;AAIA,OAAM,SAAUC,OAAV,CAAkBC,GAAlB,EAA6B;EACjC,IAAIC,MAAM,GAAG,IAAb;;EACA,IAAI;IACF,IAAMC,GAAG,GAAGJ,SAAS,EAArB;IACAG,MAAM,GAAGC,GAAG,GAAGA,GAAG,CAACC,cAAJ,CAAmBJ,OAAnB,CAA2BC,GAA3B,CAAH,GAAqC,IAAjD;EACD,CAHD,CAGE,OAAOI,CAAP,EAAU;IACV;EACD;;EACD,OAAOH,MAAP;AACD;AAED;;;;;;AAKA,OAAM,SAAUI,OAAV,CAAkBL,GAAlB,EAA+BM,IAA/B,EAA2C;;;EAC/C,IAAI;IACF,eAAS,EAAT,MAAW,IAAX,IAAWC,aAAX,GAAW,MAAX,GAAWA,GAAEJ,cAAF,CAAiBE,OAAjB,CAAyBL,GAAzB,EAA8BM,IAA9B,CAAX;EACD,CAFD,CAEE,OAAOF,CAAP,EAAU;IACV;EACD;AACF","names":["getWindow","getItem","key","result","win","sessionStorage","e","setItem","data","_a"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\office-ui-fabric-react\\node_modules\\@uifabric\\utilities\\src\\sessionStorage.ts"],"sourcesContent":["import { getWindow } from './dom/getWindow';\n\n/**\n * Fetches an item from session storage without throwing an exception\n * @param key The key of the item to fetch from session storage\n */\nexport function getItem(key: string): string | null {\n  let result = null;\n  try {\n    const win = getWindow();\n    result = win ? win.sessionStorage.getItem(key) : null;\n  } catch (e) {\n    /* Eat the exception */\n  }\n  return result;\n}\n\n/**\n * Inserts an item into session storage without throwing an exception\n * @param key The key of the item to add to session storage\n * @param data The data to put into session storage\n */\nexport function setItem(key: string, data: string): void {\n  try {\n    getWindow()?.sessionStorage.setItem(key, data);\n  } catch (e) {\n    /* Eat the exception */\n  }\n}\n"]},"metadata":{},"sourceType":"module"}