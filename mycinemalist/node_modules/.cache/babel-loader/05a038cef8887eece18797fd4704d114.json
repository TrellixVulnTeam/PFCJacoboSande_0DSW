{"ast":null,"code":"import { __extends } from \"tslib\";\nimport * as React from 'react';\nimport { classNamesFunction, initializeComponentRef } from '../../Utilities';\nimport { PersonaSize } from '../../Persona';\nimport { PersonaCoin } from '../../PersonaCoin';\nvar getClassNames = classNamesFunction();\n/**\n * {@docCategory DocumentCard}\n */\n\nvar DocumentCardActivityBase =\n/** @class */\nfunction (_super) {\n  __extends(DocumentCardActivityBase, _super);\n\n  function DocumentCardActivityBase(props) {\n    var _this = _super.call(this, props) || this;\n\n    initializeComponentRef(_this);\n    return _this;\n  }\n\n  DocumentCardActivityBase.prototype.render = function () {\n    var _a = this.props,\n        activity = _a.activity,\n        people = _a.people,\n        styles = _a.styles,\n        theme = _a.theme,\n        className = _a.className;\n    this._classNames = getClassNames(styles, {\n      theme: theme,\n      className: className,\n      multiplePeople: people.length > 1\n    });\n\n    if (!people || people.length === 0) {\n      return null;\n    }\n\n    return React.createElement(\"div\", {\n      className: this._classNames.root\n    }, this._renderAvatars(people), React.createElement(\"div\", {\n      className: this._classNames.details\n    }, React.createElement(\"span\", {\n      className: this._classNames.name\n    }, this._getNameString(people)), React.createElement(\"span\", {\n      className: this._classNames.activity\n    }, activity)));\n  };\n\n  DocumentCardActivityBase.prototype._renderAvatars = function (people) {\n    return React.createElement(\"div\", {\n      className: this._classNames.avatars\n    }, people.length > 1 ? this._renderAvatar(people[1]) : null, this._renderAvatar(people[0]));\n  };\n\n  DocumentCardActivityBase.prototype._renderAvatar = function (person) {\n    return React.createElement(\"div\", {\n      className: this._classNames.avatar\n    }, React.createElement(PersonaCoin, {\n      imageInitials: person.initials,\n      text: person.name,\n      imageUrl: person.profileImageSrc,\n      initialsColor: person.initialsColor,\n      allowPhoneInitials: person.allowPhoneInitials,\n      role: \"presentation\",\n      size: PersonaSize.size32\n    }));\n  };\n\n  DocumentCardActivityBase.prototype._getNameString = function (people) {\n    var nameString = people[0].name;\n\n    if (people.length >= 2) {\n      nameString += ' +' + (people.length - 1);\n    }\n\n    return nameString;\n  };\n\n  return DocumentCardActivityBase;\n}(React.Component);\n\nexport { DocumentCardActivityBase };","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,kBAAT,EAA6BC,sBAA7B,QAA2D,iBAA3D;AAQA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,WAAT,QAA4B,mBAA5B;AAEA,IAAMC,aAAa,GAAGJ,kBAAkB,EAAxC;AAEA;;;;AAGA;AAAA;AAAA;AAA8CK;;AAG5C,oCAAYC,KAAZ,EAA6C;AAA7C,gBACEC,kBAAMD,KAAN,KAAY,IADd;;AAGEL,0BAAsB,CAACO,KAAD,CAAtB;;AACD;;AAEMC,8CAAP;AACQ;AAAA,QAAEC,sBAAF;AAAA,QAAYC,kBAAZ;AAAA,QAAoBC,kBAApB;AAAA,QAA4BC,gBAA5B;AAAA,QAAmCC,wBAAnC;AAEN,SAAKC,WAAL,GAAmBX,aAAa,CAACQ,MAAD,EAAU;AACxCC,WAAK,EAAEA,KADiC;AAExCC,eAAS,WAF+B;AAGxCE,oBAAc,EAAEL,MAAM,CAACM,MAAP,GAAgB;AAHQ,KAAV,CAAhC;;AAMA,QAAI,CAACN,MAAD,IAAWA,MAAM,CAACM,MAAP,KAAkB,CAAjC,EAAoC;AAClC,aAAO,IAAP;AACD;;AAED,WACElB;AAAKe,eAAS,EAAE,KAAKC,WAAL,CAAiBG;AAAjC,OACG,KAAKC,cAAL,CAAoBR,MAApB,CADH,EAEEZ;AAAKe,eAAS,EAAE,KAAKC,WAAL,CAAiBK;AAAjC,OACErB;AAAMe,eAAS,EAAE,KAAKC,WAAL,CAAiBM;AAAlC,OAAyC,KAAKC,cAAL,CAAoBX,MAApB,CAAzC,CADF,EAEEZ;AAAMe,eAAS,EAAE,KAAKC,WAAL,CAAiBL;AAAlC,OAA6CA,QAA7C,CAFF,CAFF,CADF;AASD,GAtBM;;AAwBCD,sDAAR,UAAuBE,MAAvB,EAA4D;AAC1D,WACEZ;AAAKe,eAAS,EAAE,KAAKC,WAAL,CAAiBQ;AAAjC,OACGZ,MAAM,CAACM,MAAP,GAAgB,CAAhB,GAAoB,KAAKO,aAAL,CAAmBb,MAAM,CAAC,CAAD,CAAzB,CAApB,GAAoD,IADvD,EAEG,KAAKa,aAAL,CAAmBb,MAAM,CAAC,CAAD,CAAzB,CAFH,CADF;AAMD,GAPO;;AASAF,qDAAR,UAAsBgB,MAAtB,EAAyD;AACvD,WACE1B;AAAKe,eAAS,EAAE,KAAKC,WAAL,CAAiBW;AAAjC,OACE3B,oBAACI,WAAD,EAAY;AACVwB,mBAAa,EAAEF,MAAM,CAACG,QADZ;AAEVC,UAAI,EAAEJ,MAAM,CAACJ,IAFH;AAGVS,cAAQ,EAAEL,MAAM,CAACM,eAHP;AAIVC,mBAAa,EAAEP,MAAM,CAACO,aAJZ;AAKVC,wBAAkB,EAAER,MAAM,CAACQ,kBALjB;AAMVC,UAAI,EAAC,cANK;AAOVC,UAAI,EAAEjC,WAAW,CAACkC;AAPR,KAAZ,CADF,CADF;AAaD,GAdO;;AAgBA3B,sDAAR,UAAuBE,MAAvB,EAA4D;AAC1D,QAAI0B,UAAU,GAAG1B,MAAM,CAAC,CAAD,CAAN,CAAUU,IAA3B;;AAEA,QAAIV,MAAM,CAACM,MAAP,IAAiB,CAArB,EAAwB;AACtBoB,gBAAU,IAAI,QAAQ1B,MAAM,CAACM,MAAP,GAAgB,CAAxB,CAAd;AACD;;AAED,WAAOoB,UAAP;AACD,GARO;;AASV;AAAC,CAnED,CAA8CtC,KAAK,CAACuC,SAApD","names":["React","classNamesFunction","initializeComponentRef","PersonaSize","PersonaCoin","getClassNames","__extends","props","_super","_this","DocumentCardActivityBase","activity","people","styles","theme","className","_classNames","multiplePeople","length","root","_renderAvatars","details","name","_getNameString","avatars","_renderAvatar","person","avatar","imageInitials","initials","text","imageUrl","profileImageSrc","initialsColor","allowPhoneInitials","role","size","size32","nameString","Component"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\office-ui-fabric-react\\lib\\components\\src\\components\\DocumentCard\\DocumentCardActivity.base.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNamesFunction, initializeComponentRef } from '../../Utilities';\nimport {\n  IDocumentCardActivityProps,\n  IDocumentCardActivityPerson,\n  IDocumentCardActivityStyleProps,\n  IDocumentCardActivityStyles,\n} from './DocumentCardActivity.types';\nimport { IProcessedStyleSet } from '../../Styling';\nimport { PersonaSize } from '../../Persona';\nimport { PersonaCoin } from '../../PersonaCoin';\n\nconst getClassNames = classNamesFunction<IDocumentCardActivityStyleProps, IDocumentCardActivityStyles>();\n\n/**\n * {@docCategory DocumentCard}\n */\nexport class DocumentCardActivityBase extends React.Component<IDocumentCardActivityProps, any> {\n  private _classNames: IProcessedStyleSet<IDocumentCardActivityStyles>;\n\n  constructor(props: IDocumentCardActivityProps) {\n    super(props);\n\n    initializeComponentRef(this);\n  }\n\n  public render(): JSX.Element | null {\n    const { activity, people, styles, theme, className } = this.props;\n\n    this._classNames = getClassNames(styles!, {\n      theme: theme!,\n      className,\n      multiplePeople: people.length > 1,\n    });\n\n    if (!people || people.length === 0) {\n      return null;\n    }\n\n    return (\n      <div className={this._classNames.root}>\n        {this._renderAvatars(people)}\n        <div className={this._classNames.details}>\n          <span className={this._classNames.name}>{this._getNameString(people)}</span>\n          <span className={this._classNames.activity}>{activity}</span>\n        </div>\n      </div>\n    );\n  }\n\n  private _renderAvatars(people: IDocumentCardActivityPerson[]): React.ReactElement<{}> {\n    return (\n      <div className={this._classNames.avatars}>\n        {people.length > 1 ? this._renderAvatar(people[1]) : null}\n        {this._renderAvatar(people[0])}\n      </div>\n    );\n  }\n\n  private _renderAvatar(person: IDocumentCardActivityPerson): JSX.Element {\n    return (\n      <div className={this._classNames.avatar}>\n        <PersonaCoin\n          imageInitials={person.initials}\n          text={person.name}\n          imageUrl={person.profileImageSrc}\n          initialsColor={person.initialsColor}\n          allowPhoneInitials={person.allowPhoneInitials}\n          role=\"presentation\"\n          size={PersonaSize.size32}\n        />\n      </div>\n    );\n  }\n\n  private _getNameString(people: IDocumentCardActivityPerson[]): string {\n    let nameString = people[0].name;\n\n    if (people.length >= 2) {\n      nameString += ' +' + (people.length - 1);\n    }\n\n    return nameString;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}