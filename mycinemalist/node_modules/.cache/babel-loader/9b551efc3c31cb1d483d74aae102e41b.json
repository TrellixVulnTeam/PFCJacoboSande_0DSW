{"ast":null,"code":"import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { getId, classNamesFunction, styled } from '../../../../Utilities';\nimport { Persona, PersonaSize } from '../../../../Persona';\nimport { IconButton } from '../../../../Button';\nimport { ValidationState } from '../../BasePicker.types';\nimport { getStyles } from './PeoplePickerItem.styles';\nvar getClassNames = classNamesFunction();\nexport var PeoplePickerItemBase = function (props) {\n  var item = props.item,\n      onRemoveItem = props.onRemoveItem,\n      index = props.index,\n      selected = props.selected,\n      removeButtonAriaLabel = props.removeButtonAriaLabel,\n      styles = props.styles,\n      theme = props.theme,\n      className = props.className,\n      disabled = props.disabled;\n  var itemId = getId();\n  var classNames = getClassNames(styles, {\n    theme: theme,\n    className: className,\n    selected: selected,\n    disabled: disabled,\n    invalid: item.ValidationState === ValidationState.warning\n  });\n  var personaStyles = classNames.subComponentStyles ? classNames.subComponentStyles.persona : undefined;\n  var personaCoinStyles = classNames.subComponentStyles ? classNames.subComponentStyles.personaCoin : undefined;\n  return React.createElement(\"div\", {\n    className: classNames.root,\n    \"data-is-focusable\": !disabled,\n    \"data-is-sub-focuszone\": true,\n    \"data-selection-index\": index,\n    role: 'listitem',\n    \"aria-labelledby\": 'selectedItemPersona-' + itemId\n  }, React.createElement(\"div\", {\n    className: classNames.itemContent,\n    id: 'selectedItemPersona-' + itemId\n  }, React.createElement(Persona, __assign({\n    size: PersonaSize.size24,\n    styles: personaStyles,\n    coinProps: {\n      styles: personaCoinStyles\n    }\n  }, item))), React.createElement(IconButton, {\n    onClick: onRemoveItem,\n    disabled: disabled,\n    iconProps: {\n      iconName: 'Cancel',\n      styles: {\n        root: {\n          fontSize: '12px'\n        }\n      }\n    },\n    className: classNames.removeButton,\n    ariaLabel: removeButtonAriaLabel\n  }));\n};\nexport var PeoplePickerItem = styled(PeoplePickerItemBase, getStyles, undefined, {\n  scope: 'PeoplePickerItem'\n});","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SAASC,KAAT,EAAgBC,kBAAhB,EAAoCC,MAApC,QAA0E,uBAA1E;AACA,SACEC,OADF,EAEEC,WAFF,QAOO,qBAPP;AAQA,SAASC,UAAT,QAA2B,oBAA3B;AACA,SAASC,eAAT,QAAgC,wBAAhC;AAMA,SAASC,SAAT,QAA0B,2BAA1B;AAEA,IAAMC,aAAa,GAAGP,kBAAkB,EAAxC;AAEA,OAAO,IAAMQ,oBAAoB,GAAG,UAACC,KAAD,EAAsC;EAChE;EAAA,IAAMC,iCAAN;EAAA,IAAoBC,mBAApB;EAAA,IAA2BC,yBAA3B;EAAA,IAAqCC,mDAArC;EAAA,IAA4DC,qBAA5D;EAAA,IAAoEC,mBAApE;EAAA,IAA2EC,2BAA3E;EAAA,IAAsFC,yBAAtF;EAER,IAAMC,MAAM,GAAGnB,KAAK,EAApB;EAEA,IAAMoB,UAAU,GAAGZ,aAAa,CAACO,MAAD,EAAS;IACvCC,KAAK,EAAEA,KADgC;IAEvCC,SAAS,WAF8B;IAGvCJ,QAAQ,UAH+B;IAIvCK,QAAQ,UAJ+B;IAKvCG,OAAO,EAAEC,IAAI,CAAChB,eAAL,KAAyBA,eAAe,CAACiB;EALX,CAAT,CAAhC;EAQA,IAAMC,aAAa,GAAGJ,UAAU,CAACK,kBAAX,GACjBL,UAAU,CAACK,kBAAX,CAA8BC,OADb,GAElBC,SAFJ;EAIA,IAAMC,iBAAiB,GAAGR,UAAU,CAACK,kBAAX,GACrBL,UAAU,CAACK,kBAAX,CAA8BI,WADT,GAEtBF,SAFJ;EAIA,OACE5B;IACEkB,SAAS,EAAEG,UAAU,CAACU,IADxB;IAC4B,qBACP,CAACZ,QAFtB;IAE8B,yBACL,IAHzB;IAG6B,wBACLN,KAJxB;IAKEmB,IAAI,EAAE,UALR;IAKkB,mBACC,yBAAyBZ;EAN5C,GAQEpB;IAAKkB,SAAS,EAAEG,UAAU,CAACY,WAA3B;IAAwCC,EAAE,EAAE,yBAAyBd;EAArE,GACEpB,oBAACI,OAAD,EAAQ+B;IAACC,IAAI,EAAE/B,WAAW,CAACgC,MAAnB;IAA2BrB,MAAM,EAAES,aAAnC;IAAkDa,SAAS,EAAE;MAAEtB,MAAM,EAAEa;IAAV;EAA7D,GAAgGN,IAAhG,CAAR,CADF,CARF,EAWEvB,oBAACM,UAAD,EAAW;IACTiC,OAAO,EAAE3B,YADA;IAETO,QAAQ,EAAEA,QAFD;IAGTqB,SAAS,EAAE;MAAEC,QAAQ,EAAE,QAAZ;MAAsBzB,MAAM,EAAE;QAAEe,IAAI,EAAE;UAAEW,QAAQ,EAAE;QAAZ;MAAR;IAA9B,CAHF;IAITxB,SAAS,EAAEG,UAAU,CAACsB,YAJb;IAKTC,SAAS,EAAE7B;EALF,CAAX,CAXF,CADF;AAqBD,CA1CM;AA4CP,OAAO,IAAM8B,gBAAgB,GAAG1C,MAAM,CAIpCO,oBAJoC,EAIdF,SAJc,EAIHoB,SAJG,EAIQ;EAAEkB,KAAK,EAAE;AAAT,CAJR,CAA/B","names":["React","getId","classNamesFunction","styled","Persona","PersonaSize","IconButton","ValidationState","getStyles","getClassNames","PeoplePickerItemBase","props","onRemoveItem","index","selected","removeButtonAriaLabel","styles","theme","className","disabled","itemId","classNames","invalid","item","warning","personaStyles","subComponentStyles","persona","undefined","personaCoinStyles","personaCoin","root","role","itemContent","id","__assign","size","size24","coinProps","onClick","iconProps","iconName","fontSize","removeButton","ariaLabel","PeoplePickerItem","scope"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\office-ui-fabric-react\\lib\\components\\pickers\\PeoplePicker\\src\\components\\pickers\\PeoplePicker\\PeoplePickerItems\\PeoplePickerItem.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { getId, classNamesFunction, styled, IStyleFunctionOrObject } from '../../../../Utilities';\nimport {\n  Persona,\n  PersonaSize,\n  IPersonaStyleProps,\n  IPersonaStyles,\n  IPersonaCoinStyleProps,\n  IPersonaCoinStyles,\n} from '../../../../Persona';\nimport { IconButton } from '../../../../Button';\nimport { ValidationState } from '../../BasePicker.types';\nimport {\n  IPeoplePickerItemSelectedProps,\n  IPeoplePickerItemSelectedStyleProps,\n  IPeoplePickerItemSelectedStyles,\n} from './PeoplePickerItem.types';\nimport { getStyles } from './PeoplePickerItem.styles';\n\nconst getClassNames = classNamesFunction<IPeoplePickerItemSelectedStyleProps, IPeoplePickerItemSelectedStyles>();\n\nexport const PeoplePickerItemBase = (props: IPeoplePickerItemSelectedProps) => {\n  const { item, onRemoveItem, index, selected, removeButtonAriaLabel, styles, theme, className, disabled } = props;\n\n  const itemId = getId();\n\n  const classNames = getClassNames(styles, {\n    theme: theme!,\n    className,\n    selected,\n    disabled,\n    invalid: item.ValidationState === ValidationState.warning,\n  });\n\n  const personaStyles = classNames.subComponentStyles\n    ? (classNames.subComponentStyles.persona as IStyleFunctionOrObject<IPersonaStyleProps, IPersonaStyles>)\n    : undefined;\n\n  const personaCoinStyles = classNames.subComponentStyles\n    ? (classNames.subComponentStyles.personaCoin as IStyleFunctionOrObject<IPersonaCoinStyleProps, IPersonaCoinStyles>)\n    : undefined;\n\n  return (\n    <div\n      className={classNames.root}\n      data-is-focusable={!disabled}\n      data-is-sub-focuszone={true}\n      data-selection-index={index}\n      role={'listitem'}\n      aria-labelledby={'selectedItemPersona-' + itemId}\n    >\n      <div className={classNames.itemContent} id={'selectedItemPersona-' + itemId}>\n        <Persona size={PersonaSize.size24} styles={personaStyles} coinProps={{ styles: personaCoinStyles }} {...item} />\n      </div>\n      <IconButton\n        onClick={onRemoveItem}\n        disabled={disabled}\n        iconProps={{ iconName: 'Cancel', styles: { root: { fontSize: '12px' } } }}\n        className={classNames.removeButton}\n        ariaLabel={removeButtonAriaLabel}\n      />\n    </div>\n  );\n};\n\nexport const PeoplePickerItem = styled<\n  IPeoplePickerItemSelectedProps,\n  IPeoplePickerItemSelectedStyleProps,\n  IPeoplePickerItemSelectedStyles\n>(PeoplePickerItemBase, getStyles, undefined, { scope: 'PeoplePickerItem' });\n"]},"metadata":{},"sourceType":"module"}