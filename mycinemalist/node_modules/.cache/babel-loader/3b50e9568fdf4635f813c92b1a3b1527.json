{"ast":null,"code":"import { memoizeFunction } from '../../Utilities';\nimport { HighContrastSelector, getFocusStyle, hiddenContentStyle } from '../../Styling';\nvar noOutline = {\n  outline: 0\n};\n\nvar iconStyle = function (fontSize) {\n  return {\n    fontSize: fontSize,\n    margin: '0 4px',\n    height: '16px',\n    lineHeight: '16px',\n    textAlign: 'center',\n    flexShrink: 0\n  };\n};\n/**\n * Gets the base button styles. Note: because it is a base class to be used with the `mergeRules`\n * helper, it should have values for all class names in the interface. This let `mergeRules` optimize\n * mixing class names together.\n */\n\n\nexport var getStyles = memoizeFunction(function (theme) {\n  var _a, _b;\n\n  var semanticColors = theme.semanticColors,\n      effects = theme.effects,\n      fonts = theme.fonts;\n  var border = semanticColors.buttonBorder;\n  var disabledBackground = semanticColors.disabledBackground;\n  var disabledText = semanticColors.disabledText;\n  var buttonHighContrastFocus = {\n    left: -2,\n    top: -2,\n    bottom: -2,\n    right: -2,\n    outlineColor: 'ButtonText'\n  };\n  return {\n    root: [getFocusStyle(theme, {\n      inset: 1,\n      highContrastStyle: buttonHighContrastFocus,\n      borderColor: 'transparent'\n    }), theme.fonts.medium, {\n      boxSizing: 'border-box',\n      border: '1px solid ' + border,\n      userSelect: 'none',\n      display: 'inline-block',\n      textDecoration: 'none',\n      textAlign: 'center',\n      cursor: 'pointer',\n      padding: '0 16px',\n      borderRadius: effects.roundedCorner2,\n      selectors: {\n        // IE11 workaround for preventing shift of child elements of a button when active.\n        ':active > *': {\n          position: 'relative',\n          left: 0,\n          top: 0\n        }\n      }\n    }],\n    rootDisabled: [getFocusStyle(theme, {\n      inset: 1,\n      highContrastStyle: buttonHighContrastFocus,\n      borderColor: 'transparent'\n    }), {\n      backgroundColor: disabledBackground,\n      borderColor: disabledBackground,\n      color: disabledText,\n      cursor: 'default',\n      pointerEvents: 'none',\n      selectors: {\n        ':hover': noOutline,\n        ':focus': noOutline\n      }\n    }],\n    iconDisabled: {\n      color: disabledText,\n      selectors: (_a = {}, _a[HighContrastSelector] = {\n        color: 'GrayText'\n      }, _a)\n    },\n    menuIconDisabled: {\n      color: disabledText,\n      selectors: (_b = {}, _b[HighContrastSelector] = {\n        color: 'GrayText'\n      }, _b)\n    },\n    flexContainer: {\n      display: 'flex',\n      height: '100%',\n      flexWrap: 'nowrap',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    description: {\n      display: 'block'\n    },\n    textContainer: {\n      flexGrow: 1,\n      display: 'block'\n    },\n    icon: iconStyle(fonts.mediumPlus.fontSize),\n    menuIcon: iconStyle(fonts.small.fontSize),\n    label: {\n      margin: '0 4px',\n      lineHeight: '100%',\n      display: 'block'\n    },\n    screenReaderText: hiddenContentStyle\n  };\n});","map":{"version":3,"mappings":"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","names":["memoizeFunction","HighContrastSelector","getFocusStyle","hiddenContentStyle","noOutline","outline","iconStyle","fontSize","margin","height","lineHeight","textAlign","flexShrink","getStyles","theme","effects","fonts","border","semanticColors","buttonBorder","disabledBackground","disabledText","buttonHighContrastFocus","left","top","bottom","right","outlineColor","root","inset","highContrastStyle","borderColor","medium","boxSizing","userSelect","display","textDecoration","cursor","padding","borderRadius","roundedCorner2","selectors","position","rootDisabled","backgroundColor","color","pointerEvents","iconDisabled","_a","menuIconDisabled","_b","flexContainer","flexWrap","justifyContent","alignItems","description","textContainer","flexGrow","icon","mediumPlus","menuIcon","small","label","screenReaderText"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\office-ui-fabric-react\\lib\\components\\src\\components\\Button\\BaseButton.styles.ts"],"sourcesContent":["import { IButtonStyles } from './Button.types';\nimport { memoizeFunction } from '../../Utilities';\nimport { HighContrastSelector, ITheme, IRawStyle, getFocusStyle, hiddenContentStyle } from '../../Styling';\n\nconst noOutline: IRawStyle = {\n  outline: 0,\n};\n\nconst iconStyle = (fontSize?: string | number): IRawStyle => {\n  return {\n    fontSize: fontSize,\n    margin: '0 4px',\n    height: '16px',\n    lineHeight: '16px',\n    textAlign: 'center',\n    flexShrink: 0,\n  };\n};\n\n/**\n * Gets the base button styles. Note: because it is a base class to be used with the `mergeRules`\n * helper, it should have values for all class names in the interface. This let `mergeRules` optimize\n * mixing class names together.\n */\nexport const getStyles = memoizeFunction(\n  (theme: ITheme): IButtonStyles => {\n    const { semanticColors, effects, fonts } = theme;\n\n    const border = semanticColors.buttonBorder;\n    const disabledBackground = semanticColors.disabledBackground;\n    const disabledText = semanticColors.disabledText;\n    const buttonHighContrastFocus = {\n      left: -2,\n      top: -2,\n      bottom: -2,\n      right: -2,\n      outlineColor: 'ButtonText',\n    };\n\n    return {\n      root: [\n        getFocusStyle(theme, { inset: 1, highContrastStyle: buttonHighContrastFocus, borderColor: 'transparent' }),\n        theme.fonts.medium,\n        {\n          boxSizing: 'border-box',\n          border: '1px solid ' + border,\n          userSelect: 'none',\n          display: 'inline-block',\n          textDecoration: 'none',\n          textAlign: 'center',\n          cursor: 'pointer',\n          padding: '0 16px',\n          borderRadius: effects.roundedCorner2,\n\n          selectors: {\n            // IE11 workaround for preventing shift of child elements of a button when active.\n            ':active > *': {\n              position: 'relative',\n              left: 0,\n              top: 0,\n            },\n          },\n        },\n      ],\n\n      rootDisabled: [\n        getFocusStyle(theme, { inset: 1, highContrastStyle: buttonHighContrastFocus, borderColor: 'transparent' }),\n        {\n          backgroundColor: disabledBackground,\n          borderColor: disabledBackground,\n          color: disabledText,\n          cursor: 'default',\n          pointerEvents: 'none',\n          selectors: {\n            ':hover': noOutline,\n            ':focus': noOutline,\n          },\n        },\n      ],\n\n      iconDisabled: {\n        color: disabledText,\n        selectors: {\n          [HighContrastSelector]: {\n            color: 'GrayText',\n          },\n        },\n      },\n\n      menuIconDisabled: {\n        color: disabledText,\n        selectors: {\n          [HighContrastSelector]: {\n            color: 'GrayText',\n          },\n        },\n      },\n\n      flexContainer: {\n        display: 'flex',\n        height: '100%',\n        flexWrap: 'nowrap',\n        justifyContent: 'center',\n        alignItems: 'center',\n      },\n      description: {\n        display: 'block',\n      },\n\n      textContainer: {\n        flexGrow: 1,\n        display: 'block',\n      },\n\n      icon: iconStyle(fonts.mediumPlus.fontSize),\n\n      menuIcon: iconStyle(fonts.small.fontSize),\n\n      label: {\n        margin: '0 4px',\n        lineHeight: '100%',\n        display: 'block',\n      },\n\n      screenReaderText: hiddenContentStyle,\n    };\n  },\n);\n"]},"metadata":{},"sourceType":"module"}