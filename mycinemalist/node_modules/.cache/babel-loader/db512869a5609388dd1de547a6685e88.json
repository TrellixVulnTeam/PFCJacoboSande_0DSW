{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { hasSubmenu, getIsChecked } from '../../utilities/contextualMenu/index';\nimport { getRTL, initializeComponentRef } from '../../Utilities';\nimport { Icon } from '../../Icon';\n\nvar renderItemIcon = function (props) {\n  var item = props.item,\n      hasIcons = props.hasIcons,\n      classNames = props.classNames;\n  var iconProps = item.iconProps;\n\n  if (!hasIcons) {\n    return null;\n  }\n\n  if (item.onRenderIcon) {\n    return item.onRenderIcon(props);\n  }\n\n  return React.createElement(Icon, __assign({}, iconProps, {\n    className: classNames.icon\n  }));\n};\n\nvar renderCheckMarkIcon = function (_a) {\n  var onCheckmarkClick = _a.onCheckmarkClick,\n      item = _a.item,\n      classNames = _a.classNames;\n  var isItemChecked = getIsChecked(item);\n\n  if (onCheckmarkClick) {\n    // Ensures that the item is passed as the first argument to the checkmark click callback.\n    var onClick = function (e) {\n      return onCheckmarkClick(item, e);\n    };\n\n    return React.createElement(Icon, {\n      iconName: item.canCheck !== false && isItemChecked ? 'CheckMark' : '',\n      className: classNames.checkmarkIcon,\n      // eslint-disable-next-line react/jsx-no-bind\n      onClick: onClick\n    });\n  }\n\n  return null;\n};\n\nvar renderItemName = function (_a) {\n  var item = _a.item,\n      classNames = _a.classNames;\n  /* eslint-disable deprecation/deprecation */\n\n  if (item.text || item.name) {\n    return React.createElement(\"span\", {\n      className: classNames.label\n    }, item.text || item.name);\n  }\n  /* eslint-enable deprecation/deprecation */\n\n\n  return null;\n};\n\nvar renderSecondaryText = function (_a) {\n  var item = _a.item,\n      classNames = _a.classNames;\n\n  if (item.secondaryText) {\n    return React.createElement(\"span\", {\n      className: classNames.secondaryText\n    }, item.secondaryText);\n  }\n\n  return null;\n};\n\nvar renderSubMenuIcon = function (_a) {\n  var item = _a.item,\n      classNames = _a.classNames,\n      theme = _a.theme;\n\n  if (hasSubmenu(item)) {\n    return React.createElement(Icon, __assign({\n      iconName: getRTL(theme) ? 'ChevronLeft' : 'ChevronRight'\n    }, item.submenuIconProps, {\n      className: classNames.subMenuIcon\n    }));\n  }\n\n  return null;\n};\n\nvar ContextualMenuItemBase =\n/** @class */\nfunction (_super) {\n  __extends(ContextualMenuItemBase, _super);\n\n  function ContextualMenuItemBase(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.openSubMenu = function () {\n      var _a = _this.props,\n          item = _a.item,\n          openSubMenu = _a.openSubMenu,\n          getSubmenuTarget = _a.getSubmenuTarget;\n\n      if (getSubmenuTarget) {\n        var submenuTarget = getSubmenuTarget();\n\n        if (hasSubmenu(item) && openSubMenu && submenuTarget) {\n          openSubMenu(item, submenuTarget);\n        }\n      }\n    };\n\n    _this.dismissSubMenu = function () {\n      var _a = _this.props,\n          item = _a.item,\n          dismissSubMenu = _a.dismissSubMenu;\n\n      if (hasSubmenu(item) && dismissSubMenu) {\n        dismissSubMenu();\n      }\n    };\n\n    _this.dismissMenu = function (dismissAll) {\n      var dismissMenu = _this.props.dismissMenu;\n\n      if (dismissMenu) {\n        dismissMenu(undefined\n        /* ev */\n        , dismissAll);\n      }\n    };\n\n    initializeComponentRef(_this);\n    return _this;\n  }\n\n  ContextualMenuItemBase.prototype.render = function () {\n    var _a = this.props,\n        item = _a.item,\n        classNames = _a.classNames;\n    var renderContent = item.onRenderContent || this._renderLayout;\n    return React.createElement(\"div\", {\n      className: item.split ? classNames.linkContentMenu : classNames.linkContent\n    }, renderContent(this.props, {\n      renderCheckMarkIcon: renderCheckMarkIcon,\n      renderItemIcon: renderItemIcon,\n      renderItemName: renderItemName,\n      renderSecondaryText: renderSecondaryText,\n      renderSubMenuIcon: renderSubMenuIcon\n    }));\n  };\n\n  ContextualMenuItemBase.prototype._renderLayout = function (props, defaultRenders) {\n    return React.createElement(React.Fragment, null, defaultRenders.renderCheckMarkIcon(props), defaultRenders.renderItemIcon(props), defaultRenders.renderItemName(props), defaultRenders.renderSecondaryText(props), defaultRenders.renderSubMenuIcon(props));\n  };\n\n  return ContextualMenuItemBase;\n}(React.Component);\n\nexport { ContextualMenuItemBase };","map":{"version":3,"mappings":"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","names":["React","hasSubmenu","getIsChecked","getRTL","initializeComponentRef","Icon","renderItemIcon","props","hasIcons","classNames","item","onRenderIcon","__assign","iconProps","className","icon","renderCheckMarkIcon","_a","onCheckmarkClick","isItemChecked","onClick","e","iconName","canCheck","checkmarkIcon","renderItemName","text","name","label","renderSecondaryText","secondaryText","renderSubMenuIcon","theme","submenuIconProps","subMenuIcon","__extends","_super","_this","openSubMenu","getSubmenuTarget","submenuTarget","dismissSubMenu","dismissAll","dismissMenu","undefined","ContextualMenuItemBase","renderContent","onRenderContent","_renderLayout","split","linkContentMenu","linkContent","defaultRenders","Component"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\office-ui-fabric-react\\lib\\components\\src\\components\\ContextualMenu\\ContextualMenuItem.base.tsx"],"sourcesContent":["import * as React from 'react';\nimport { hasSubmenu, getIsChecked } from '../../utilities/contextualMenu/index';\nimport { getRTL, initializeComponentRef } from '../../Utilities';\nimport { Icon } from '../../Icon';\nimport { IContextualMenuItemProps, IContextualMenuItemRenderFunctions } from './ContextualMenuItem.types';\n\nconst renderItemIcon = (props: IContextualMenuItemProps) => {\n  const { item, hasIcons, classNames } = props;\n\n  const { iconProps } = item;\n\n  if (!hasIcons) {\n    return null;\n  }\n\n  if (item.onRenderIcon) {\n    return item.onRenderIcon(props);\n  }\n\n  return <Icon {...iconProps} className={classNames.icon} />;\n};\n\nconst renderCheckMarkIcon = ({ onCheckmarkClick, item, classNames }: IContextualMenuItemProps) => {\n  const isItemChecked = getIsChecked(item);\n  if (onCheckmarkClick) {\n    // Ensures that the item is passed as the first argument to the checkmark click callback.\n    const onClick = (e: React.MouseEvent<HTMLElement>) => onCheckmarkClick(item, e);\n\n    return (\n      <Icon\n        iconName={item.canCheck !== false && isItemChecked ? 'CheckMark' : ''}\n        className={classNames.checkmarkIcon}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={onClick}\n      />\n    );\n  }\n  return null;\n};\n\nconst renderItemName = ({ item, classNames }: IContextualMenuItemProps) => {\n  /* eslint-disable deprecation/deprecation */\n  if (item.text || item.name) {\n    return <span className={classNames.label}>{item.text || item.name}</span>;\n  }\n  /* eslint-enable deprecation/deprecation */\n  return null;\n};\n\nconst renderSecondaryText = ({ item, classNames }: IContextualMenuItemProps) => {\n  if (item.secondaryText) {\n    return <span className={classNames.secondaryText}>{item.secondaryText}</span>;\n  }\n  return null;\n};\n\nconst renderSubMenuIcon = ({ item, classNames, theme }: IContextualMenuItemProps) => {\n  if (hasSubmenu(item)) {\n    return (\n      <Icon\n        iconName={getRTL(theme) ? 'ChevronLeft' : 'ChevronRight'}\n        {...item.submenuIconProps}\n        className={classNames.subMenuIcon}\n      />\n    );\n  }\n  return null;\n};\n\nexport class ContextualMenuItemBase extends React.Component<IContextualMenuItemProps, {}> {\n  constructor(props: IContextualMenuItemProps) {\n    super(props);\n\n    initializeComponentRef(this);\n  }\n\n  public render() {\n    const { item, classNames } = this.props;\n    const renderContent = item.onRenderContent || this._renderLayout;\n\n    return (\n      <div className={item.split ? classNames.linkContentMenu : classNames.linkContent}>\n        {renderContent(this.props, {\n          renderCheckMarkIcon,\n          renderItemIcon,\n          renderItemName,\n          renderSecondaryText,\n          renderSubMenuIcon,\n        })}\n      </div>\n    );\n  }\n\n  public openSubMenu = (): void => {\n    const { item, openSubMenu, getSubmenuTarget } = this.props;\n    if (getSubmenuTarget) {\n      const submenuTarget = getSubmenuTarget();\n      if (hasSubmenu(item) && openSubMenu && submenuTarget) {\n        openSubMenu(item, submenuTarget);\n      }\n    }\n  };\n\n  public dismissSubMenu = (): void => {\n    const { item, dismissSubMenu } = this.props;\n    if (hasSubmenu(item) && dismissSubMenu) {\n      dismissSubMenu();\n    }\n  };\n\n  public dismissMenu = (dismissAll?: boolean): void => {\n    const { dismissMenu } = this.props;\n    if (dismissMenu) {\n      dismissMenu(undefined /* ev */, dismissAll);\n    }\n  };\n\n  private _renderLayout(props: IContextualMenuItemProps, defaultRenders: IContextualMenuItemRenderFunctions) {\n    return (\n      <>\n        {defaultRenders.renderCheckMarkIcon(props)}\n        {defaultRenders.renderItemIcon(props)}\n        {defaultRenders.renderItemName(props)}\n        {defaultRenders.renderSecondaryText(props)}\n        {defaultRenders.renderSubMenuIcon(props)}\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}