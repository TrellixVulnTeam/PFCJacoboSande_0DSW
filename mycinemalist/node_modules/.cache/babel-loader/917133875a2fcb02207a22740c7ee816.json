{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { buttonProperties, classNamesFunction, getId, getNativeProps, initializeComponentRef } from '../../Utilities';\nimport { OverflowButtonType } from './Facepile.types';\nimport { FacepileButton } from './FacepileButton';\nimport { Icon } from '../../Icon';\nimport { Persona } from '../../Persona';\nimport { PersonaCoin, PersonaSize, PersonaInitialsColor } from '../../PersonaCoin';\nvar getClassNames = classNamesFunction();\n/**\n * FacePile with no default styles.\n * [Use the `styles` API to add your own styles.](https://github.com/microsoft/fluentui/wiki/Component-Styling)\n */\n\nvar FacepileBase =\n/** @class */\nfunction (_super) {\n  __extends(FacepileBase, _super);\n\n  function FacepileBase(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this._classNames = getClassNames(_this.props.styles, {\n      theme: _this.props.theme,\n      className: _this.props.className\n    });\n\n    _this._getPersonaControl = function (persona) {\n      var _a = _this.props,\n          getPersonaProps = _a.getPersonaProps,\n          personaSize = _a.personaSize;\n      var personaStyles = {\n        details: {\n          flex: '1 0 auto'\n        }\n      };\n      return React.createElement(Persona, __assign({\n        imageInitials: persona.imageInitials,\n        imageUrl: persona.imageUrl,\n        initialsColor: persona.initialsColor,\n        allowPhoneInitials: persona.allowPhoneInitials,\n        text: persona.personaName,\n        size: personaSize\n      }, getPersonaProps ? getPersonaProps(persona) : null, {\n        styles: personaStyles\n      }));\n    };\n\n    _this._getPersonaCoinControl = function (persona) {\n      var _a = _this.props,\n          getPersonaProps = _a.getPersonaProps,\n          personaSize = _a.personaSize;\n      return React.createElement(PersonaCoin, __assign({\n        imageInitials: persona.imageInitials,\n        imageUrl: persona.imageUrl,\n        initialsColor: persona.initialsColor,\n        allowPhoneInitials: persona.allowPhoneInitials,\n        text: persona.personaName,\n        size: personaSize\n      }, getPersonaProps ? getPersonaProps(persona) : null));\n    };\n\n    initializeComponentRef(_this);\n    _this._ariaDescriptionId = getId();\n    return _this;\n  }\n\n  FacepileBase.prototype.render = function () {\n    var overflowButtonProps = this.props.overflowButtonProps;\n    var _a = this.props,\n        chevronButtonProps = _a.chevronButtonProps,\n        // eslint-disable-line deprecation/deprecation\n    maxDisplayablePersonas = _a.maxDisplayablePersonas,\n        personas = _a.personas,\n        overflowPersonas = _a.overflowPersonas,\n        showAddButton = _a.showAddButton,\n        ariaLabel = _a.ariaLabel;\n    var _classNames = this._classNames; // Add a check to make sure maxDisplayalePersonas is defined to cover the edge case of it being 0.\n\n    var numPersonasToShow = typeof maxDisplayablePersonas === 'number' ? Math.min(personas.length, maxDisplayablePersonas) : personas.length; // Added for deprecating chevronButtonProps.  Can remove after v1.0\n\n    if (chevronButtonProps && !overflowButtonProps) {\n      overflowButtonProps = chevronButtonProps;\n    }\n\n    var hasOverflowPersonas = overflowPersonas && overflowPersonas.length > 0;\n    var personasPrimary = hasOverflowPersonas ? personas : personas.slice(0, numPersonasToShow);\n    var personasOverflow = (hasOverflowPersonas ? overflowPersonas : personas.slice(numPersonasToShow)) || [];\n    return React.createElement(\"div\", {\n      className: _classNames.root\n    }, this.onRenderAriaDescription(), React.createElement(\"div\", {\n      className: _classNames.itemContainer\n    }, showAddButton ? this._getAddNewElement() : null, React.createElement(\"ul\", {\n      className: _classNames.members,\n      \"aria-label\": ariaLabel\n    }, this._onRenderVisiblePersonas(personasPrimary, personasOverflow.length === 0 && personas.length === 1)), overflowButtonProps ? this._getOverflowElement(personasOverflow) : null));\n  };\n\n  FacepileBase.prototype.onRenderAriaDescription = function () {\n    var ariaDescription = this.props.ariaDescription;\n    var _classNames = this._classNames; // If ariaDescription is given, descriptionId will be assigned to ariaDescriptionSpan,\n    // otherwise it will be assigned to descriptionSpan.\n\n    return ariaDescription && React.createElement(\"span\", {\n      className: _classNames.screenReaderOnly,\n      id: this._ariaDescriptionId\n    }, ariaDescription);\n  };\n\n  FacepileBase.prototype._onRenderVisiblePersonas = function (personas, singlePersona) {\n    var _this = this;\n\n    var _a = this.props,\n        _b = _a.onRenderPersona,\n        onRenderPersona = _b === void 0 ? this._getPersonaControl : _b,\n        _c = _a.onRenderPersonaCoin,\n        onRenderPersonaCoin = _c === void 0 ? this._getPersonaCoinControl : _c;\n    return personas.map(function (persona, index) {\n      var personaControl = singlePersona ? onRenderPersona(persona, _this._getPersonaControl) : onRenderPersonaCoin(persona, _this._getPersonaCoinControl);\n      return React.createElement(\"li\", {\n        key: (singlePersona ? 'persona' : 'personaCoin') + \"-\" + index,\n        className: _this._classNames.member\n      }, persona.onClick ? _this._getElementWithOnClickEvent(personaControl, persona, index) : _this._getElementWithoutOnClickEvent(personaControl, persona, index));\n    });\n  };\n\n  FacepileBase.prototype._getElementWithOnClickEvent = function (personaControl, persona, index) {\n    var keytipProps = persona.keytipProps;\n    return React.createElement(FacepileButton, __assign({}, getNativeProps(persona, buttonProperties), this._getElementProps(persona, index), {\n      keytipProps: keytipProps,\n      // eslint-disable-next-line react/jsx-no-bind\n      onClick: this._onPersonaClick.bind(this, persona)\n    }), personaControl);\n  };\n\n  FacepileBase.prototype._getElementWithoutOnClickEvent = function (personaControl, persona, index) {\n    return React.createElement(\"div\", __assign({}, getNativeProps(persona, buttonProperties), this._getElementProps(persona, index)), personaControl);\n  };\n\n  FacepileBase.prototype._getElementProps = function (persona, index) {\n    var _classNames = this._classNames;\n    return {\n      key: (persona.imageUrl ? 'i' : '') + index,\n      'data-is-focusable': true,\n      className: _classNames.itemButton,\n      title: persona.personaName,\n      onMouseMove: this._onPersonaMouseMove.bind(this, persona),\n      onMouseOut: this._onPersonaMouseOut.bind(this, persona)\n    };\n  };\n\n  FacepileBase.prototype._getOverflowElement = function (personasOverflow) {\n    switch (this.props.overflowButtonType) {\n      case OverflowButtonType.descriptive:\n        return this._getDescriptiveOverflowElement(personasOverflow);\n\n      case OverflowButtonType.downArrow:\n        return this._getIconElement('ChevronDown');\n\n      case OverflowButtonType.more:\n        return this._getIconElement('More');\n\n      default:\n        return null;\n    }\n  };\n\n  FacepileBase.prototype._getDescriptiveOverflowElement = function (personasOverflow) {\n    var personaSize = this.props.personaSize;\n\n    if (!personasOverflow || personasOverflow.length < 1) {\n      return null;\n    }\n\n    var personaNames = personasOverflow.map(function (p) {\n      return p.personaName;\n    }).join(', ');\n\n    var overflowButtonProps = __assign({\n      title: personaNames\n    }, this.props.overflowButtonProps);\n\n    var numPersonasNotPictured = Math.max(personasOverflow.length, 0);\n    var _classNames = this._classNames;\n    return React.createElement(FacepileButton, __assign({}, overflowButtonProps, {\n      ariaDescription: overflowButtonProps.title,\n      className: _classNames.descriptiveOverflowButton\n    }), React.createElement(PersonaCoin, {\n      size: personaSize,\n      onRenderInitials: this._renderInitialsNotPictured(numPersonasNotPictured),\n      initialsColor: PersonaInitialsColor.transparent\n    }));\n  };\n\n  FacepileBase.prototype._getIconElement = function (icon) {\n    var _a = this.props,\n        overflowButtonProps = _a.overflowButtonProps,\n        personaSize = _a.personaSize;\n    var overflowInitialsIcon = true;\n    var _classNames = this._classNames;\n    return React.createElement(FacepileButton, __assign({}, overflowButtonProps, {\n      className: _classNames.overflowButton\n    }), React.createElement(PersonaCoin, {\n      size: personaSize,\n      onRenderInitials: this._renderInitials(icon, overflowInitialsIcon),\n      initialsColor: PersonaInitialsColor.transparent\n    }));\n  };\n\n  FacepileBase.prototype._getAddNewElement = function () {\n    var _a = this.props,\n        addButtonProps = _a.addButtonProps,\n        personaSize = _a.personaSize;\n    var _classNames = this._classNames;\n    return React.createElement(FacepileButton, __assign({}, addButtonProps, {\n      className: _classNames.addButton\n    }), React.createElement(PersonaCoin, {\n      size: personaSize,\n      onRenderInitials: this._renderInitials('AddFriend')\n    }));\n  };\n\n  FacepileBase.prototype._onPersonaClick = function (persona, ev) {\n    persona.onClick(ev, persona);\n    ev.preventDefault();\n    ev.stopPropagation();\n  };\n\n  FacepileBase.prototype._onPersonaMouseMove = function (persona, ev) {\n    if (persona.onMouseMove) {\n      persona.onMouseMove(ev, persona);\n    }\n  };\n\n  FacepileBase.prototype._onPersonaMouseOut = function (persona, ev) {\n    if (persona.onMouseOut) {\n      persona.onMouseOut(ev, persona);\n    }\n  };\n\n  FacepileBase.prototype._renderInitials = function (iconName, overflowButton) {\n    var _classNames = this._classNames;\n    return function () {\n      return React.createElement(Icon, {\n        iconName: iconName,\n        className: overflowButton ? _classNames.overflowInitialsIcon : ''\n      });\n    };\n  };\n\n  FacepileBase.prototype._renderInitialsNotPictured = function (numPersonasNotPictured) {\n    var _classNames = this._classNames;\n    return function () {\n      return React.createElement(\"span\", {\n        className: _classNames.overflowInitialsIcon\n      }, numPersonasNotPictured < 100 ? '+' + numPersonasNotPictured : '99+');\n    };\n  };\n\n  FacepileBase.defaultProps = {\n    maxDisplayablePersonas: 5,\n    personas: [],\n    overflowPersonas: [],\n    personaSize: PersonaSize.size32\n  };\n  return FacepileBase;\n}(React.Component);\n\nexport { FacepileBase };","map":{"version":3,"mappings":"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","names":["React","buttonProperties","classNamesFunction","getId","getNativeProps","initializeComponentRef","OverflowButtonType","FacepileButton","Icon","Persona","PersonaCoin","PersonaSize","PersonaInitialsColor","getClassNames","__extends","props","_super","_this","styles","theme","className","persona","getPersonaProps","personaSize","personaStyles","details","flex","__assign","imageInitials","imageUrl","initialsColor","allowPhoneInitials","text","personaName","size","_ariaDescriptionId","FacepileBase","chevronButtonProps","maxDisplayablePersonas","personas","overflowPersonas","showAddButton","ariaLabel","numPersonasToShow","Math","min","length","overflowButtonProps","hasOverflowPersonas","personasPrimary","slice","personasOverflow","_classNames","root","onRenderAriaDescription","itemContainer","_getAddNewElement","members","_onRenderVisiblePersonas","_getOverflowElement","ariaDescription","screenReaderOnly","id","singlePersona","_b","onRenderPersona","_c","onRenderPersonaCoin","map","index","personaControl","_getPersonaControl","_getPersonaCoinControl","key","member","onClick","_getElementWithOnClickEvent","_getElementWithoutOnClickEvent","_getElementProps","keytipProps","_onPersonaClick","bind","itemButton","title","onMouseMove","_onPersonaMouseMove","onMouseOut","_onPersonaMouseOut","overflowButtonType","descriptive","_getDescriptiveOverflowElement","downArrow","_getIconElement","more","personaNames","p","join","numPersonasNotPictured","max","descriptiveOverflowButton","onRenderInitials","_renderInitialsNotPictured","transparent","icon","overflowInitialsIcon","overflowButton","_renderInitials","addButtonProps","addButton","ev","preventDefault","stopPropagation","iconName","size32","Component"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\office-ui-fabric-react\\lib\\components\\src\\components\\Facepile\\Facepile.base.tsx"],"sourcesContent":["import * as React from 'react';\nimport { buttonProperties, classNamesFunction, getId, getNativeProps, initializeComponentRef } from '../../Utilities';\nimport {\n  IFacepileProps,\n  IFacepilePersona,\n  IFacepileStyleProps,\n  IFacepileStyles,\n  OverflowButtonType,\n} from './Facepile.types';\nimport { FacepileButton } from './FacepileButton';\nimport { Icon } from '../../Icon';\nimport { Persona, IPersonaStyles } from '../../Persona';\nimport { PersonaCoin, PersonaSize, PersonaInitialsColor } from '../../PersonaCoin';\nimport { IButtonProps } from '../Button/Button.types';\n\nconst getClassNames = classNamesFunction<IFacepileStyleProps, IFacepileStyles>();\n\n/**\n * FacePile with no default styles.\n * [Use the `styles` API to add your own styles.](https://github.com/microsoft/fluentui/wiki/Component-Styling)\n */\nexport class FacepileBase extends React.Component<IFacepileProps, {}> {\n  public static defaultProps: IFacepileProps = {\n    maxDisplayablePersonas: 5,\n    personas: [],\n    overflowPersonas: [],\n    personaSize: PersonaSize.size32,\n  };\n\n  private _ariaDescriptionId: string;\n\n  private _classNames = getClassNames(this.props.styles, {\n    theme: this.props.theme!,\n    className: this.props.className,\n  });\n\n  constructor(props: IFacepileProps) {\n    super(props);\n\n    initializeComponentRef(this);\n    this._ariaDescriptionId = getId();\n  }\n\n  public render(): JSX.Element {\n    let { overflowButtonProps } = this.props;\n    const {\n      chevronButtonProps, // eslint-disable-line deprecation/deprecation\n      maxDisplayablePersonas,\n      personas,\n      overflowPersonas,\n      showAddButton,\n      ariaLabel,\n    } = this.props;\n\n    const { _classNames } = this;\n\n    // Add a check to make sure maxDisplayalePersonas is defined to cover the edge case of it being 0.\n    const numPersonasToShow: number =\n      typeof maxDisplayablePersonas === 'number' ? Math.min(personas.length, maxDisplayablePersonas) : personas.length;\n\n    // Added for deprecating chevronButtonProps.  Can remove after v1.0\n    if (chevronButtonProps && !overflowButtonProps) {\n      overflowButtonProps = chevronButtonProps;\n    }\n\n    const hasOverflowPersonas = overflowPersonas && overflowPersonas.length > 0;\n    const personasPrimary: IFacepilePersona[] = hasOverflowPersonas ? personas : personas.slice(0, numPersonasToShow);\n    const personasOverflow: IFacepilePersona[] =\n      (hasOverflowPersonas ? overflowPersonas : personas.slice(numPersonasToShow)) || [];\n\n    return (\n      <div className={_classNames.root}>\n        {this.onRenderAriaDescription()}\n        <div className={_classNames.itemContainer}>\n          {showAddButton ? this._getAddNewElement() : null}\n          <ul className={_classNames.members} aria-label={ariaLabel}>\n            {this._onRenderVisiblePersonas(personasPrimary, personasOverflow.length === 0 && personas.length === 1)}\n          </ul>\n          {overflowButtonProps ? this._getOverflowElement(personasOverflow) : null}\n        </div>\n      </div>\n    );\n  }\n\n  protected onRenderAriaDescription() {\n    const { ariaDescription } = this.props;\n\n    const { _classNames } = this;\n\n    // If ariaDescription is given, descriptionId will be assigned to ariaDescriptionSpan,\n    // otherwise it will be assigned to descriptionSpan.\n    return (\n      ariaDescription && (\n        <span className={_classNames.screenReaderOnly} id={this._ariaDescriptionId}>\n          {ariaDescription}\n        </span>\n      )\n    );\n  }\n\n  private _onRenderVisiblePersonas(personas: IFacepilePersona[], singlePersona: boolean): JSX.Element[] {\n    const { onRenderPersona = this._getPersonaControl, onRenderPersonaCoin = this._getPersonaCoinControl } = this.props;\n    return personas.map((persona: IFacepilePersona, index: number) => {\n      const personaControl: JSX.Element | null = singlePersona\n        ? onRenderPersona(persona, this._getPersonaControl)\n        : onRenderPersonaCoin(persona, this._getPersonaCoinControl);\n      return (\n        <li key={`${singlePersona ? 'persona' : 'personaCoin'}-${index}`} className={this._classNames.member}>\n          {persona.onClick\n            ? this._getElementWithOnClickEvent(personaControl, persona, index)\n            : this._getElementWithoutOnClickEvent(personaControl, persona, index)}\n        </li>\n      );\n    });\n  }\n\n  private _getPersonaControl = (persona: IFacepilePersona): JSX.Element | null => {\n    const { getPersonaProps, personaSize } = this.props;\n    const personaStyles: Partial<IPersonaStyles> = {\n      details: {\n        flex: '1 0 auto',\n      },\n    };\n\n    return (\n      <Persona\n        imageInitials={persona.imageInitials}\n        imageUrl={persona.imageUrl}\n        initialsColor={persona.initialsColor}\n        allowPhoneInitials={persona.allowPhoneInitials}\n        text={persona.personaName}\n        size={personaSize}\n        {...(getPersonaProps ? getPersonaProps(persona) : null)}\n        styles={personaStyles}\n      />\n    );\n  };\n\n  private _getPersonaCoinControl = (persona: IFacepilePersona): JSX.Element | null => {\n    const { getPersonaProps, personaSize } = this.props;\n    return (\n      <PersonaCoin\n        imageInitials={persona.imageInitials}\n        imageUrl={persona.imageUrl}\n        initialsColor={persona.initialsColor}\n        allowPhoneInitials={persona.allowPhoneInitials}\n        text={persona.personaName}\n        size={personaSize}\n        {...(getPersonaProps ? getPersonaProps(persona) : null)}\n      />\n    );\n  };\n\n  private _getElementWithOnClickEvent(\n    personaControl: JSX.Element | null,\n    persona: IFacepilePersona,\n    index: number,\n  ): JSX.Element {\n    const { keytipProps } = persona;\n    return (\n      <FacepileButton\n        {...getNativeProps(persona, buttonProperties)}\n        {...this._getElementProps(persona, index)}\n        keytipProps={keytipProps}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={this._onPersonaClick.bind(this, persona)}\n      >\n        {personaControl}\n      </FacepileButton>\n    );\n  }\n\n  private _getElementWithoutOnClickEvent(\n    personaControl: JSX.Element | null,\n    persona: IFacepilePersona,\n    index: number,\n  ): JSX.Element {\n    return (\n      <div {...getNativeProps(persona, buttonProperties)} {...this._getElementProps(persona, index)}>\n        {personaControl}\n      </div>\n    );\n  }\n\n  private _getElementProps(\n    persona: IFacepilePersona,\n    index: number,\n  ): { key: React.Key; ['data-is-focusable']: boolean } & React.HTMLAttributes<HTMLDivElement> {\n    const { _classNames } = this;\n\n    return {\n      key: (persona.imageUrl ? 'i' : '') + index,\n      'data-is-focusable': true,\n      className: _classNames.itemButton,\n      title: persona.personaName,\n      onMouseMove: this._onPersonaMouseMove.bind(this, persona),\n      onMouseOut: this._onPersonaMouseOut.bind(this, persona),\n    };\n  }\n\n  private _getOverflowElement(personasOverflow: IFacepilePersona[]): JSX.Element | null {\n    switch (this.props.overflowButtonType) {\n      case OverflowButtonType.descriptive:\n        return this._getDescriptiveOverflowElement(personasOverflow);\n      case OverflowButtonType.downArrow:\n        return this._getIconElement('ChevronDown');\n      case OverflowButtonType.more:\n        return this._getIconElement('More');\n      default:\n        return null;\n    }\n  }\n\n  private _getDescriptiveOverflowElement(personasOverflow: IFacepilePersona[]): JSX.Element | null {\n    const { personaSize } = this.props;\n    if (!personasOverflow || personasOverflow.length < 1) {\n      return null;\n    }\n\n    const personaNames: string = personasOverflow.map((p: IFacepilePersona) => p.personaName).join(', ');\n    const overflowButtonProps: IButtonProps = { ...{ title: personaNames }, ...this.props.overflowButtonProps };\n    const numPersonasNotPictured: number = Math.max(personasOverflow.length, 0);\n\n    const { _classNames } = this;\n\n    return (\n      <FacepileButton\n        {...overflowButtonProps}\n        ariaDescription={overflowButtonProps.title}\n        className={_classNames.descriptiveOverflowButton}\n      >\n        <PersonaCoin\n          size={personaSize}\n          onRenderInitials={this._renderInitialsNotPictured(numPersonasNotPictured)}\n          initialsColor={PersonaInitialsColor.transparent}\n        />\n      </FacepileButton>\n    );\n  }\n\n  private _getIconElement(icon: string): JSX.Element {\n    const { overflowButtonProps, personaSize } = this.props;\n    const overflowInitialsIcon = true;\n\n    const { _classNames } = this;\n\n    return (\n      <FacepileButton {...overflowButtonProps} className={_classNames.overflowButton}>\n        <PersonaCoin\n          size={personaSize}\n          onRenderInitials={this._renderInitials(icon, overflowInitialsIcon)}\n          initialsColor={PersonaInitialsColor.transparent}\n        />\n      </FacepileButton>\n    );\n  }\n  private _getAddNewElement(): JSX.Element {\n    const { addButtonProps, personaSize } = this.props;\n\n    const { _classNames } = this;\n\n    return (\n      <FacepileButton {...addButtonProps} className={_classNames.addButton}>\n        <PersonaCoin size={personaSize} onRenderInitials={this._renderInitials('AddFriend')} />\n      </FacepileButton>\n    );\n  }\n\n  private _onPersonaClick(persona: IFacepilePersona, ev?: React.MouseEvent<HTMLElement>): void {\n    persona.onClick!(ev, persona);\n    ev!.preventDefault();\n    ev!.stopPropagation();\n  }\n\n  private _onPersonaMouseMove(persona: IFacepilePersona, ev?: React.MouseEvent<HTMLElement>): void {\n    if (persona.onMouseMove) {\n      persona.onMouseMove(ev, persona);\n    }\n  }\n\n  private _onPersonaMouseOut(persona: IFacepilePersona, ev?: React.MouseEvent<HTMLElement>): void {\n    if (persona.onMouseOut) {\n      persona.onMouseOut(ev, persona);\n    }\n  }\n\n  private _renderInitials(iconName: string, overflowButton?: boolean): () => JSX.Element {\n    const { _classNames } = this;\n\n    return (): JSX.Element => {\n      return <Icon iconName={iconName} className={overflowButton ? _classNames.overflowInitialsIcon : ''} />;\n    };\n  }\n\n  private _renderInitialsNotPictured(numPersonasNotPictured: number): () => JSX.Element {\n    const { _classNames } = this;\n\n    return (): JSX.Element => {\n      return (\n        <span className={_classNames.overflowInitialsIcon}>\n          {numPersonasNotPictured < 100 ? '+' + numPersonasNotPictured : '99+'}\n        </span>\n      );\n    };\n  }\n}\n"]},"metadata":{},"sourceType":"module"}