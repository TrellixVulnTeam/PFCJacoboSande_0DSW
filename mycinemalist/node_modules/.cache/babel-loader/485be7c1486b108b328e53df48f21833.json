{"ast":null,"code":"import { getGlobalClassNames, getFocusStyle, HighContrastSelector } from '../../../Styling';\nimport { ButtonGlobalClassNames } from '../../Button/BaseButton.classNames';\nimport { getRTL } from '../../../Utilities';\nvar GlobalClassNames = {\n  root: 'ms-TagItem',\n  text: 'ms-TagItem-text',\n  close: 'ms-TagItem-close',\n  isSelected: 'is-selected'\n};\nvar TAG_HEIGHT = 26;\nexport function getStyles(props) {\n  var _a, _b, _c, _d;\n\n  var className = props.className,\n      theme = props.theme,\n      selected = props.selected,\n      disabled = props.disabled;\n  var palette = theme.palette,\n      effects = theme.effects,\n      fonts = theme.fonts,\n      semanticColors = theme.semanticColors;\n  var classNames = getGlobalClassNames(GlobalClassNames, theme);\n  return {\n    root: [classNames.root, fonts.medium, getFocusStyle(theme), {\n      boxSizing: 'content-box',\n      flexShrink: '1',\n      margin: 2,\n      height: TAG_HEIGHT,\n      lineHeight: TAG_HEIGHT,\n      cursor: 'default',\n      userSelect: 'none',\n      display: 'flex',\n      flexWrap: 'nowrap',\n      maxWidth: 300,\n      minWidth: 0,\n      borderRadius: effects.roundedCorner2,\n      color: semanticColors.inputText,\n      background: !selected || disabled ? palette.neutralLighter : palette.themePrimary,\n      selectors: (_a = {\n        ':hover': [!disabled && !selected && {\n          color: palette.neutralDark,\n          background: palette.neutralLight,\n          selectors: {\n            '.ms-TagItem-close': {\n              color: palette.neutralPrimary\n            }\n          }\n        }, disabled && {\n          background: palette.neutralLighter\n        }, selected && !disabled && {\n          background: palette.themePrimary\n        }]\n      }, _a[HighContrastSelector] = {\n        border: \"1px solid \" + (!selected ? 'WindowText' : 'WindowFrame')\n      }, _a)\n    }, disabled && {\n      selectors: (_b = {}, _b[HighContrastSelector] = {\n        borderColor: 'GrayText'\n      }, _b)\n    }, selected && !disabled && [classNames.isSelected, {\n      color: palette.white\n    }], className],\n    text: [classNames.text, {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap',\n      minWidth: 30,\n      margin: '0 8px'\n    }, disabled && {\n      selectors: (_c = {}, _c[HighContrastSelector] = {\n        color: 'GrayText'\n      }, _c)\n    }],\n    close: [classNames.close, {\n      color: palette.neutralSecondary,\n      width: 30,\n      height: '100%',\n      flex: '0 0 auto',\n      borderRadius: getRTL(theme) ? effects.roundedCorner2 + \" 0 0 \" + effects.roundedCorner2 : \"0 \" + effects.roundedCorner2 + \" \" + effects.roundedCorner2 + \" 0\",\n      selectors: {\n        ':hover': {\n          background: palette.neutralQuaternaryAlt,\n          color: palette.neutralPrimary\n        },\n        ':active': {\n          color: palette.white,\n          backgroundColor: palette.themeDark\n        }\n      }\n    }, selected && {\n      color: palette.white,\n      selectors: {\n        ':hover': {\n          color: palette.white,\n          background: palette.themeDark\n        }\n      }\n    }, disabled && {\n      selectors: (_d = {}, _d[\".\" + ButtonGlobalClassNames.msButtonIcon] = {\n        color: palette.neutralSecondary\n      }, _d)\n    }]\n  };\n}","map":{"version":3,"mappings":"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","names":["getGlobalClassNames","getFocusStyle","HighContrastSelector","ButtonGlobalClassNames","getRTL","GlobalClassNames","root","text","close","isSelected","TAG_HEIGHT","getStyles","props","theme","selected","disabled","effects","fonts","semanticColors","classNames","medium","boxSizing","flexShrink","margin","height","lineHeight","cursor","userSelect","display","flexWrap","maxWidth","minWidth","borderRadius","roundedCorner2","color","inputText","background","palette","neutralLighter","themePrimary","selectors","neutralDark","neutralLight","neutralPrimary","_a","border","_b","borderColor","white","className","overflow","textOverflow","whiteSpace","_c","neutralSecondary","width","flex","neutralQuaternaryAlt","backgroundColor","themeDark","_d","msButtonIcon"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\office-ui-fabric-react\\lib\\components\\pickers\\src\\components\\pickers\\TagPicker\\TagItem.styles.ts"],"sourcesContent":["import { getGlobalClassNames, getFocusStyle, HighContrastSelector } from '../../../Styling';\nimport { ButtonGlobalClassNames } from '../../Button/BaseButton.classNames';\nimport { ITagItemStyleProps, ITagItemStyles } from './TagPicker.types';\nimport { getRTL } from '../../../Utilities';\n\nconst GlobalClassNames = {\n  root: 'ms-TagItem',\n  text: 'ms-TagItem-text',\n  close: 'ms-TagItem-close',\n  isSelected: 'is-selected',\n};\n\nconst TAG_HEIGHT = 26;\n\nexport function getStyles(props: ITagItemStyleProps): ITagItemStyles {\n  const { className, theme, selected, disabled } = props;\n\n  const { palette, effects, fonts, semanticColors } = theme;\n\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  return {\n    root: [\n      classNames.root,\n      fonts.medium,\n      getFocusStyle(theme),\n      {\n        boxSizing: 'content-box',\n        flexShrink: '1',\n        margin: 2,\n        height: TAG_HEIGHT,\n        lineHeight: TAG_HEIGHT,\n        cursor: 'default',\n        userSelect: 'none',\n        display: 'flex',\n        flexWrap: 'nowrap',\n        maxWidth: 300,\n        minWidth: 0, // needed to prevent long tags from overflowing container\n        borderRadius: effects.roundedCorner2,\n        color: semanticColors.inputText,\n        background: !selected || disabled ? palette.neutralLighter : palette.themePrimary,\n        selectors: {\n          ':hover': [\n            !disabled &&\n              !selected && {\n                color: palette.neutralDark,\n                background: palette.neutralLight,\n                selectors: {\n                  '.ms-TagItem-close': {\n                    color: palette.neutralPrimary,\n                  },\n                },\n              },\n            disabled && { background: palette.neutralLighter },\n            selected && !disabled && { background: palette.themePrimary },\n          ],\n          [HighContrastSelector]: {\n            border: `1px solid ${!selected ? 'WindowText' : 'WindowFrame'}`,\n          },\n        },\n      },\n      disabled && {\n        selectors: {\n          [HighContrastSelector]: {\n            borderColor: 'GrayText',\n          },\n        },\n      },\n      selected &&\n        !disabled && [\n          classNames.isSelected,\n          {\n            color: palette.white,\n          },\n        ],\n      className,\n    ],\n    text: [\n      classNames.text,\n      {\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n        minWidth: 30,\n        margin: '0 8px',\n      },\n      disabled && {\n        selectors: {\n          [HighContrastSelector]: {\n            color: 'GrayText',\n          },\n        },\n      },\n    ],\n    close: [\n      classNames.close,\n      {\n        color: palette.neutralSecondary,\n        width: 30,\n        height: '100%',\n        flex: '0 0 auto',\n        borderRadius: getRTL(theme)\n          ? `${effects.roundedCorner2} 0 0 ${effects.roundedCorner2}`\n          : `0 ${effects.roundedCorner2} ${effects.roundedCorner2} 0`,\n        selectors: {\n          ':hover': {\n            background: palette.neutralQuaternaryAlt,\n            color: palette.neutralPrimary,\n          },\n          ':active': {\n            color: palette.white,\n            backgroundColor: palette.themeDark,\n          },\n        },\n      },\n      selected && {\n        color: palette.white,\n        selectors: {\n          ':hover': {\n            color: palette.white,\n            background: palette.themeDark,\n          },\n        },\n      },\n      disabled && {\n        selectors: {\n          [`.${ButtonGlobalClassNames.msButtonIcon}`]: {\n            color: palette.neutralSecondary,\n          },\n        },\n      },\n    ],\n  };\n}\n"]},"metadata":{},"sourceType":"module"}