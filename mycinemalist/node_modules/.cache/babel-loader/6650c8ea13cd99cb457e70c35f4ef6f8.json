{"ast":null,"code":"import { getDividerClassNames } from '../Divider/VerticalDivider.classNames';\nimport { getMenuItemStyles } from './ContextualMenu.cnstyles';\nimport { mergeStyleSets, getGlobalClassNames, getScreenSelector, ScreenWidthMaxMedium, hiddenContentStyle } from '../../Styling';\nimport { memoizeFunction, IsFocusVisibleClassName } from '../../Utilities';\nvar CONTEXTUAL_SPLIT_MENU_MINWIDTH = '28px';\nvar MediumScreenSelector = getScreenSelector(0, ScreenWidthMaxMedium);\nexport var getSplitButtonVerticalDividerClassNames = memoizeFunction(\n/* eslint-disable deprecation/deprecation */\nfunction (theme) {\n  var _a;\n\n  return mergeStyleSets(getDividerClassNames(theme), {\n    /* eslint-enable deprecation/deprecation */\n    wrapper: {\n      position: 'absolute',\n      right: 28,\n      selectors: (_a = {}, _a[MediumScreenSelector] = {\n        right: 32\n      }, _a)\n    },\n    divider: {\n      height: 16,\n      width: 1\n    }\n  });\n});\nvar GlobalClassNames = {\n  item: 'ms-ContextualMenu-item',\n  divider: 'ms-ContextualMenu-divider',\n  root: 'ms-ContextualMenu-link',\n  isChecked: 'is-checked',\n  isExpanded: 'is-expanded',\n  isDisabled: 'is-disabled',\n  linkContent: 'ms-ContextualMenu-linkContent',\n  linkContentMenu: 'ms-ContextualMenu-linkContent',\n  icon: 'ms-ContextualMenu-icon',\n  iconColor: 'ms-ContextualMenu-iconColor',\n  checkmarkIcon: 'ms-ContextualMenu-checkmarkIcon',\n  subMenuIcon: 'ms-ContextualMenu-submenuIcon',\n  label: 'ms-ContextualMenu-itemText',\n  secondaryText: 'ms-ContextualMenu-secondaryText',\n  splitMenu: 'ms-ContextualMenu-splitMenu',\n  screenReaderText: 'ms-ContextualMenu-screenReaderText'\n};\n/**\n * @deprecated To be removed in 7.0.\n * @internal\n * This is a package-internal method that has been depended on.\n * It is being kept in this form for backwards compatibility.\n * It should be cleaned up in 7.0.\n *\n * TODO: Audit perf. impact of and potentially remove memoizeFunction.\n * https://github.com/microsoft/fluentui/issues/5534\n */\n\nexport var getItemClassNames = memoizeFunction(function (theme, disabled, expanded, checked, isAnchorLink, knownIcon, itemClassName, dividerClassName, iconClassName, subMenuClassName, primaryDisabled, className) {\n  var _a, _b, _c, _d;\n\n  var styles = getMenuItemStyles(theme);\n  var classNames = getGlobalClassNames(GlobalClassNames, theme);\n  return mergeStyleSets({\n    item: [classNames.item, styles.item, itemClassName],\n    divider: [classNames.divider, styles.divider, dividerClassName],\n    root: [classNames.root, styles.root, checked && [classNames.isChecked, styles.rootChecked], isAnchorLink && styles.anchorLink, expanded && [classNames.isExpanded, styles.rootExpanded], disabled && [classNames.isDisabled, styles.rootDisabled], !disabled && !expanded && [{\n      selectors: (_a = {\n        ':hover': styles.rootHovered,\n        ':active': styles.rootPressed\n      }, _a[\".\" + IsFocusVisibleClassName + \" &:focus, .\" + IsFocusVisibleClassName + \" &:focus:hover\"] = styles.rootFocused, _a[\".\" + IsFocusVisibleClassName + \" &:hover\"] = {\n        background: 'inherit;'\n      }, _a)\n    }], className],\n    splitPrimary: [styles.root, {\n      width: \"calc(100% - \" + CONTEXTUAL_SPLIT_MENU_MINWIDTH + \")\"\n    }, checked && ['is-checked', styles.rootChecked], (disabled || primaryDisabled) && ['is-disabled', styles.rootDisabled], !(disabled || primaryDisabled) && !checked && [{\n      selectors: (_b = {\n        ':hover': styles.rootHovered\n      }, // when hovering over the splitPrimary also affect the splitMenu\n      _b[\":hover ~ .\" + classNames.splitMenu] = styles.rootHovered, _b[':active'] = styles.rootPressed, _b[\".\" + IsFocusVisibleClassName + \" &:focus, .\" + IsFocusVisibleClassName + \" &:focus:hover\"] = styles.rootFocused, _b[\".\" + IsFocusVisibleClassName + \" &:hover\"] = {\n        background: 'inherit;'\n      }, _b)\n    }]],\n    splitMenu: [classNames.splitMenu, styles.root, {\n      flexBasis: '0',\n      padding: '0 8px',\n      minWidth: CONTEXTUAL_SPLIT_MENU_MINWIDTH\n    }, expanded && ['is-expanded', styles.rootExpanded], disabled && ['is-disabled', styles.rootDisabled], !disabled && !expanded && [{\n      selectors: (_c = {\n        ':hover': styles.rootHovered,\n        ':active': styles.rootPressed\n      }, _c[\".\" + IsFocusVisibleClassName + \" &:focus, .\" + IsFocusVisibleClassName + \" &:focus:hover\"] = styles.rootFocused, _c[\".\" + IsFocusVisibleClassName + \" &:hover\"] = {\n        background: 'inherit;'\n      }, _c)\n    }]],\n    anchorLink: styles.anchorLink,\n    linkContent: [classNames.linkContent, styles.linkContent],\n    linkContentMenu: [classNames.linkContentMenu, styles.linkContent, {\n      justifyContent: 'center'\n    }],\n    icon: [classNames.icon, knownIcon && styles.iconColor, styles.icon, iconClassName, disabled && [classNames.isDisabled, styles.iconDisabled]],\n    iconColor: styles.iconColor,\n    checkmarkIcon: [classNames.checkmarkIcon, knownIcon && styles.checkmarkIcon, styles.icon, iconClassName],\n    subMenuIcon: [classNames.subMenuIcon, styles.subMenuIcon, subMenuClassName, expanded && {\n      color: theme.palette.neutralPrimary\n    }, disabled && [styles.iconDisabled]],\n    label: [classNames.label, styles.label],\n    secondaryText: [classNames.secondaryText, styles.secondaryText],\n    splitContainer: [styles.splitButtonFlexContainer, !disabled && !checked && [{\n      selectors: (_d = {}, _d[\".\" + IsFocusVisibleClassName + \" &:focus, .\" + IsFocusVisibleClassName + \" &:focus:hover\"] = styles.rootFocused, _d)\n    }]],\n    screenReaderText: [classNames.screenReaderText, styles.screenReaderText, hiddenContentStyle, {\n      visibility: 'hidden'\n    }]\n  });\n});\n/**\n * Wrapper function for generating ContextualMenuItem classNames which adheres to\n * the getStyles API, but invokes memoized className generator function with\n * primitive values.\n *\n * @param props - the ContextualMenuItem style props used to generate its styles.\n */\n\nexport var getItemStyles = function getItemStyles(props) {\n  var theme = props.theme,\n      disabled = props.disabled,\n      expanded = props.expanded,\n      checked = props.checked,\n      isAnchorLink = props.isAnchorLink,\n      knownIcon = props.knownIcon,\n      itemClassName = props.itemClassName,\n      dividerClassName = props.dividerClassName,\n      iconClassName = props.iconClassName,\n      subMenuClassName = props.subMenuClassName,\n      primaryDisabled = props.primaryDisabled,\n      className = props.className; // eslint-disable-next-line deprecation/deprecation\n\n  return getItemClassNames(theme, disabled, expanded, checked, isAnchorLink, knownIcon, itemClassName, dividerClassName, iconClassName, subMenuClassName, primaryDisabled, className);\n};","map":{"version":3,"mappings":"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","names":["getDividerClassNames","getMenuItemStyles","mergeStyleSets","getGlobalClassNames","getScreenSelector","ScreenWidthMaxMedium","hiddenContentStyle","memoizeFunction","IsFocusVisibleClassName","CONTEXTUAL_SPLIT_MENU_MINWIDTH","MediumScreenSelector","getSplitButtonVerticalDividerClassNames","theme","wrapper","position","right","selectors","_a","divider","height","width","GlobalClassNames","item","root","isChecked","isExpanded","isDisabled","linkContent","linkContentMenu","icon","iconColor","checkmarkIcon","subMenuIcon","label","secondaryText","splitMenu","screenReaderText","getItemClassNames","disabled","expanded","checked","isAnchorLink","knownIcon","itemClassName","dividerClassName","iconClassName","subMenuClassName","primaryDisabled","className","styles","classNames","rootChecked","anchorLink","rootExpanded","rootDisabled","rootHovered","rootPressed","rootFocused","background","splitPrimary","_b","flexBasis","padding","minWidth","_c","justifyContent","iconDisabled","color","palette","neutralPrimary","splitContainer","splitButtonFlexContainer","_d","visibility","getItemStyles","props"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\office-ui-fabric-react\\lib\\components\\src\\components\\ContextualMenu\\ContextualMenu.classNames.ts"],"sourcesContent":["import { getDividerClassNames } from '../Divider/VerticalDivider.classNames';\nimport { getMenuItemStyles } from './ContextualMenu.cnstyles';\nimport {\n  ITheme,\n  mergeStyleSets,\n  getGlobalClassNames,\n  getScreenSelector,\n  ScreenWidthMaxMedium,\n  hiddenContentStyle,\n} from '../../Styling';\nimport { IVerticalDividerClassNames } from '../Divider/VerticalDivider.types';\nimport { memoizeFunction, IsFocusVisibleClassName } from '../../Utilities';\nimport { IContextualMenuItemStyles, IContextualMenuItemStyleProps } from './ContextualMenuItem.types';\nimport { IContextualMenuSubComponentStyles } from './ContextualMenu.types';\n\n/**\n * @deprecated in favor of mergeStyles API.\n */\nexport interface IContextualMenuClassNames {\n  container: string;\n  root: string;\n  list: string;\n  header: string;\n  title: string;\n  subComponentStyles?: IContextualMenuSubComponentStyles;\n}\n\n/**\n * @deprecated in favor of mergeStyles API.\n */\nexport interface IMenuItemClassNames {\n  item: string;\n  divider: string;\n  root: string;\n  linkContent: string;\n  icon: string;\n  checkmarkIcon: string;\n  subMenuIcon: string;\n  label: string;\n  secondaryText: string;\n  splitContainer: string;\n  splitPrimary: string;\n  splitMenu: string;\n  linkContentMenu: string;\n  screenReaderText: string;\n}\n\nconst CONTEXTUAL_SPLIT_MENU_MINWIDTH = '28px';\n\nconst MediumScreenSelector = getScreenSelector(0, ScreenWidthMaxMedium);\n\nexport const getSplitButtonVerticalDividerClassNames = memoizeFunction(\n  /* eslint-disable deprecation/deprecation */\n  (theme: ITheme): IVerticalDividerClassNames => {\n    return mergeStyleSets(getDividerClassNames(theme), {\n      /* eslint-enable deprecation/deprecation */\n      wrapper: {\n        position: 'absolute',\n        right: 28, // width of the splitMenu based on the padding plus icon fontSize\n        selectors: {\n          [MediumScreenSelector]: {\n            right: 32, // fontSize of the icon increased from 12px to 16px\n          },\n        },\n      },\n      divider: {\n        height: 16,\n        width: 1,\n      },\n    });\n  },\n);\n\nconst GlobalClassNames = {\n  item: 'ms-ContextualMenu-item',\n  divider: 'ms-ContextualMenu-divider',\n  root: 'ms-ContextualMenu-link',\n  isChecked: 'is-checked',\n  isExpanded: 'is-expanded',\n  isDisabled: 'is-disabled',\n  linkContent: 'ms-ContextualMenu-linkContent',\n  linkContentMenu: 'ms-ContextualMenu-linkContent',\n  icon: 'ms-ContextualMenu-icon',\n  iconColor: 'ms-ContextualMenu-iconColor',\n  checkmarkIcon: 'ms-ContextualMenu-checkmarkIcon',\n  subMenuIcon: 'ms-ContextualMenu-submenuIcon',\n  label: 'ms-ContextualMenu-itemText',\n  secondaryText: 'ms-ContextualMenu-secondaryText',\n  splitMenu: 'ms-ContextualMenu-splitMenu',\n  screenReaderText: 'ms-ContextualMenu-screenReaderText',\n};\n\n/**\n * @deprecated To be removed in 7.0.\n * @internal\n * This is a package-internal method that has been depended on.\n * It is being kept in this form for backwards compatibility.\n * It should be cleaned up in 7.0.\n *\n * TODO: Audit perf. impact of and potentially remove memoizeFunction.\n * https://github.com/microsoft/fluentui/issues/5534\n */\nexport const getItemClassNames = memoizeFunction(\n  (\n    theme: ITheme,\n    disabled: boolean,\n    expanded: boolean,\n    checked: boolean,\n    isAnchorLink: boolean,\n    knownIcon: boolean,\n    itemClassName?: string,\n    dividerClassName?: string,\n    iconClassName?: string,\n    subMenuClassName?: string,\n    primaryDisabled?: boolean,\n    className?: string,\n  ): IContextualMenuItemStyles => {\n    const styles = getMenuItemStyles(theme);\n    const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n    return mergeStyleSets({\n      item: [classNames.item, styles.item, itemClassName],\n      divider: [classNames.divider, styles.divider, dividerClassName],\n      root: [\n        classNames.root,\n        styles.root,\n        checked && [classNames.isChecked, styles.rootChecked],\n        isAnchorLink && styles.anchorLink,\n        expanded && [classNames.isExpanded, styles.rootExpanded],\n        disabled && [classNames.isDisabled, styles.rootDisabled],\n        !disabled &&\n          !expanded && [\n            {\n              selectors: {\n                ':hover': styles.rootHovered,\n                ':active': styles.rootPressed,\n                [`.${IsFocusVisibleClassName} &:focus, .${IsFocusVisibleClassName} &:focus:hover`]: styles.rootFocused,\n                [`.${IsFocusVisibleClassName} &:hover`]: { background: 'inherit;' },\n              },\n            },\n          ],\n        className,\n      ],\n      splitPrimary: [\n        styles.root,\n        {\n          width: `calc(100% - ${CONTEXTUAL_SPLIT_MENU_MINWIDTH})`,\n        },\n        checked && ['is-checked', styles.rootChecked],\n        (disabled || primaryDisabled) && ['is-disabled', styles.rootDisabled],\n        !(disabled || primaryDisabled) &&\n          !checked && [\n            {\n              selectors: {\n                ':hover': styles.rootHovered,\n                // when hovering over the splitPrimary also affect the splitMenu\n                [`:hover ~ .${classNames.splitMenu}`]: styles.rootHovered,\n                ':active': styles.rootPressed,\n                [`.${IsFocusVisibleClassName} &:focus, .${IsFocusVisibleClassName} &:focus:hover`]: styles.rootFocused,\n                [`.${IsFocusVisibleClassName} &:hover`]: { background: 'inherit;' },\n              },\n            },\n          ],\n      ],\n      splitMenu: [\n        classNames.splitMenu,\n        styles.root,\n        {\n          flexBasis: '0',\n          padding: '0 8px',\n          minWidth: CONTEXTUAL_SPLIT_MENU_MINWIDTH,\n        },\n        expanded && ['is-expanded', styles.rootExpanded],\n        disabled && ['is-disabled', styles.rootDisabled],\n        !disabled &&\n          !expanded && [\n            {\n              selectors: {\n                ':hover': styles.rootHovered,\n                ':active': styles.rootPressed,\n                [`.${IsFocusVisibleClassName} &:focus, .${IsFocusVisibleClassName} &:focus:hover`]: styles.rootFocused,\n                [`.${IsFocusVisibleClassName} &:hover`]: { background: 'inherit;' },\n              },\n            },\n          ],\n      ],\n      anchorLink: styles.anchorLink,\n      linkContent: [classNames.linkContent, styles.linkContent],\n      linkContentMenu: [\n        classNames.linkContentMenu,\n        styles.linkContent,\n        {\n          justifyContent: 'center',\n        },\n      ],\n      icon: [\n        classNames.icon,\n        knownIcon && styles.iconColor,\n        styles.icon,\n        iconClassName,\n        disabled && [classNames.isDisabled, styles.iconDisabled],\n      ],\n      iconColor: styles.iconColor,\n      checkmarkIcon: [classNames.checkmarkIcon, knownIcon && styles.checkmarkIcon, styles.icon, iconClassName],\n      subMenuIcon: [\n        classNames.subMenuIcon,\n        styles.subMenuIcon,\n        subMenuClassName,\n        expanded && { color: theme.palette.neutralPrimary },\n        disabled && [styles.iconDisabled],\n      ],\n      label: [classNames.label, styles.label],\n      secondaryText: [classNames.secondaryText, styles.secondaryText],\n      splitContainer: [\n        styles.splitButtonFlexContainer,\n        !disabled &&\n          !checked && [\n            {\n              selectors: {\n                [`.${IsFocusVisibleClassName} &:focus, .${IsFocusVisibleClassName} &:focus:hover`]: styles.rootFocused,\n              },\n            },\n          ],\n      ],\n      screenReaderText: [\n        classNames.screenReaderText,\n        styles.screenReaderText,\n        hiddenContentStyle,\n        { visibility: 'hidden' },\n      ],\n    });\n  },\n);\n\n/**\n * Wrapper function for generating ContextualMenuItem classNames which adheres to\n * the getStyles API, but invokes memoized className generator function with\n * primitive values.\n *\n * @param props - the ContextualMenuItem style props used to generate its styles.\n */\nexport const getItemStyles = (props: IContextualMenuItemStyleProps): IContextualMenuItemStyles => {\n  const {\n    theme,\n    disabled,\n    expanded,\n    checked,\n    isAnchorLink,\n    knownIcon,\n    itemClassName,\n    dividerClassName,\n    iconClassName,\n    subMenuClassName,\n    primaryDisabled,\n    className,\n  } = props;\n\n  // eslint-disable-next-line deprecation/deprecation\n  return getItemClassNames(\n    theme,\n    disabled,\n    expanded,\n    checked,\n    isAnchorLink,\n    knownIcon,\n    itemClassName,\n    dividerClassName,\n    iconClassName,\n    subMenuClassName,\n    primaryDisabled,\n    className,\n  );\n};\n"]},"metadata":{},"sourceType":"module"}