{"ast":null,"code":"import { getGlobalClassNames } from '../../Styling';\nvar GlobalClassNames = {\n  root: 'ms-DetailsList',\n  compact: 'ms-DetailsList--Compact',\n  contentWrapper: 'ms-DetailsList-contentWrapper',\n  headerWrapper: 'ms-DetailsList-headerWrapper',\n  isFixed: 'is-fixed',\n  isHorizontalConstrained: 'is-horizontalConstrained',\n  listCell: 'ms-List-cell'\n};\nexport var getStyles = function getStyles(props) {\n  var _a, _b;\n\n  var theme = props.theme,\n      className = props.className,\n      isHorizontalConstrained = props.isHorizontalConstrained,\n      compact = props.compact,\n      isFixed = props.isFixed;\n  var semanticColors = theme.semanticColors;\n  var classNames = getGlobalClassNames(GlobalClassNames, theme);\n  return {\n    root: [classNames.root, theme.fonts.small, {\n      position: 'relative',\n      color: semanticColors.listText,\n      selectors: (_a = {}, _a[\"& .\" + classNames.listCell] = {\n        minHeight: 38,\n        wordBreak: 'break-word'\n      }, _a)\n    }, isFixed && classNames.isFixed, compact && [classNames.compact, {\n      selectors: (_b = {}, _b[\".\" + classNames.listCell] = {\n        minHeight: 32\n      }, _b)\n    }], isHorizontalConstrained && [classNames.isHorizontalConstrained, {\n      overflowX: 'auto',\n      overflowY: 'visible',\n      WebkitOverflowScrolling: 'touch'\n    }], className],\n    focusZone: [{\n      display: 'inline-block',\n      minWidth: '100%',\n      minHeight: 1\n    }],\n    headerWrapper: classNames.headerWrapper,\n    contentWrapper: classNames.contentWrapper\n  };\n};","map":{"version":3,"mappings":"AACA,SAASA,mBAAT,QAAoC,eAApC;AAEA,IAAMC,gBAAgB,GAAG;AACvBC,MAAI,EAAE,gBADiB;AAEvBC,SAAO,EAAE,yBAFc;AAGvBC,gBAAc,EAAE,+BAHO;AAIvBC,eAAa,EAAE,8BAJQ;AAKvBC,SAAO,EAAE,UALc;AAMvBC,yBAAuB,EAAE,0BANF;AAOvBC,UAAQ,EAAE;AAPa,CAAzB;AAUA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAA8B;;;AAC7C;AAAA,MAAOC,2BAAP;AAAA,MAAkBJ,uDAAlB;AAAA,MAA2CJ,uBAA3C;AAAA,MAAoDG,uBAApD;AACA;AACR,MAAMM,UAAU,GAAGZ,mBAAmB,CAACC,gBAAD,EAAmBY,KAAnB,CAAtC;AAEA,SAAO;AACLX,QAAI,EAAE,CACJU,UAAU,CAACV,IADP,EAEJW,KAAK,CAACC,KAAN,CAAYC,KAFR,EAGJ;AACEC,cAAQ,EAAE,UADZ;AAEEC,WAAK,EAAEC,cAAc,CAACC,QAFxB;AAGEC,eAAS,YACPC,GAAC,QAAMT,UAAU,CAACJ,QAAlB,IAA+B;AAC7Bc,iBAAS,EAAE,EADkB;AAE7BC,iBAAS,EAAE;AAFkB,OADxB;AAHX,KAHI,EAcJjB,OAAO,IAAIM,UAAU,CAACN,OAdlB,EAgBJH,OAAO,IAAI,CACTS,UAAU,CAACT,OADF,EAET;AACEiB,eAAS,YACPI,GAAC,MAAIZ,UAAU,CAACJ,QAAhB,IAA6B;AAC3Bc,iBAAS,EAAE;AADgB,OADtB;AADX,KAFS,CAhBP,EA2BJf,uBAAuB,IAAI,CACzBK,UAAU,CAACL,uBADc,EAEzB;AACEkB,eAAS,EAAE,MADb;AAEEC,eAAS,EAAE,SAFb;AAGEC,6BAAuB,EAAE;AAH3B,KAFyB,CA3BvB,EAoCJhB,SApCI,CADD;AAwCLiB,aAAS,EAAE,CACT;AACEC,aAAO,EAAE,cADX;AAEEC,cAAQ,EAAE,MAFZ;AAGER,eAAS,EAAE;AAHb,KADS,CAxCN;AA+CLjB,iBAAa,EAAEO,UAAU,CAACP,aA/CrB;AAgDLD,kBAAc,EAAEQ,UAAU,CAACR;AAhDtB,GAAP;AAkDD,CAvDM","names":["getGlobalClassNames","GlobalClassNames","root","compact","contentWrapper","headerWrapper","isFixed","isHorizontalConstrained","listCell","getStyles","props","className","classNames","theme","fonts","small","position","color","semanticColors","listText","selectors","_a","minHeight","wordBreak","_b","overflowX","overflowY","WebkitOverflowScrolling","focusZone","display","minWidth"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\office-ui-fabric-react\\lib\\components\\src\\components\\DetailsList\\DetailsList.styles.ts"],"sourcesContent":["import { IDetailsListStyleProps, IDetailsListStyles } from './DetailsList.types';\nimport { getGlobalClassNames } from '../../Styling';\n\nconst GlobalClassNames = {\n  root: 'ms-DetailsList',\n  compact: 'ms-DetailsList--Compact',\n  contentWrapper: 'ms-DetailsList-contentWrapper',\n  headerWrapper: 'ms-DetailsList-headerWrapper',\n  isFixed: 'is-fixed',\n  isHorizontalConstrained: 'is-horizontalConstrained',\n  listCell: 'ms-List-cell',\n};\n\nexport const getStyles = (props: IDetailsListStyleProps): IDetailsListStyles => {\n  const { theme, className, isHorizontalConstrained, compact, isFixed } = props;\n  const { semanticColors } = theme;\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  return {\n    root: [\n      classNames.root,\n      theme.fonts.small,\n      {\n        position: 'relative',\n        color: semanticColors.listText,\n        selectors: {\n          [`& .${classNames.listCell}`]: {\n            minHeight: 38,\n            wordBreak: 'break-word',\n          },\n        },\n      },\n\n      isFixed && classNames.isFixed,\n\n      compact && [\n        classNames.compact,\n        {\n          selectors: {\n            [`.${classNames.listCell}`]: {\n              minHeight: 32,\n            },\n          },\n        },\n      ],\n\n      isHorizontalConstrained && [\n        classNames.isHorizontalConstrained,\n        {\n          overflowX: 'auto',\n          overflowY: 'visible',\n          WebkitOverflowScrolling: 'touch',\n        },\n      ],\n\n      className,\n    ],\n\n    focusZone: [\n      {\n        display: 'inline-block',\n        minWidth: '100%',\n        minHeight: 1,\n      },\n    ],\n    headerWrapper: classNames.headerWrapper,\n    contentWrapper: classNames.contentWrapper,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}