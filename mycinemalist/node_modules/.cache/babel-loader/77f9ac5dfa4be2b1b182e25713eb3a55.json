{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport * as stylesImport from './BaseFloatingPicker.scss';\nimport { Async, initializeComponentRef, css, KeyCodes } from '../../Utilities';\nimport { Callout, DirectionalHint } from '../../Callout';\nimport { SuggestionsControl } from './Suggestions/SuggestionsControl';\nvar styles = stylesImport;\n\nvar BaseFloatingPicker =\n/** @class */\nfunction (_super) {\n  __extends(BaseFloatingPicker, _super);\n\n  function BaseFloatingPicker(basePickerProps) {\n    var _this = _super.call(this, basePickerProps) || this;\n\n    _this.root = React.createRef();\n    _this.suggestionsControl = React.createRef();\n    _this.SuggestionsControlOfProperType = SuggestionsControl;\n    _this.isComponentMounted = false;\n\n    _this.onQueryStringChanged = function (queryString) {\n      if (queryString !== _this.state.queryString) {\n        _this.setState({\n          queryString: queryString\n        });\n\n        if (_this.props.onInputChanged) {\n          _this.props.onInputChanged(queryString);\n        }\n\n        _this.updateValue(queryString);\n      }\n    };\n\n    _this.hidePicker = function () {\n      var wasShownBeforeUpdate = _this.isSuggestionsShown;\n\n      _this.setState({\n        suggestionsVisible: false\n      });\n\n      if (_this.props.onSuggestionsHidden && wasShownBeforeUpdate) {\n        _this.props.onSuggestionsHidden();\n      }\n    };\n\n    _this.showPicker = function (updateValue) {\n      if (updateValue === void 0) {\n        updateValue = false;\n      }\n\n      var wasShownBeforeUpdate = _this.isSuggestionsShown;\n\n      _this.setState({\n        suggestionsVisible: true\n      }); // Update the suggestions if updateValue == true\n\n\n      var value = _this.props.inputElement ? _this.props.inputElement.value : '';\n\n      if (updateValue) {\n        _this.updateValue(value);\n      }\n\n      if (_this.props.onSuggestionsShown && !wasShownBeforeUpdate) {\n        _this.props.onSuggestionsShown();\n      }\n    };\n\n    _this.completeSuggestion = function () {\n      if (_this.suggestionsControl.current && _this.suggestionsControl.current.hasSuggestionSelected()) {\n        _this.onChange(_this.suggestionsControl.current.currentSuggestion.item);\n      }\n    };\n\n    _this.onSuggestionClick = function (ev, item, index) {\n      _this.onChange(item);\n\n      _this._updateSuggestionsVisible(false\n      /*shouldShow*/\n      );\n    };\n\n    _this.onSuggestionRemove = function (ev, item, index) {\n      if (_this.props.onRemoveSuggestion) {\n        _this.props.onRemoveSuggestion(item);\n      }\n\n      if (_this.suggestionsControl.current) {\n        _this.suggestionsControl.current.removeSuggestion(index);\n      }\n    };\n\n    _this.onKeyDown = function (ev) {\n      if (!_this.state.suggestionsVisible || _this.props.inputElement && !_this.props.inputElement.contains(ev.target)) {\n        return;\n      } // eslint-disable-next-line deprecation/deprecation\n\n\n      var keyCode = ev.which;\n\n      switch (keyCode) {\n        case KeyCodes.escape:\n          _this.hidePicker();\n\n          ev.preventDefault();\n          ev.stopPropagation();\n          break;\n\n        case KeyCodes.tab:\n        case KeyCodes.enter:\n          if (!ev.shiftKey && !ev.ctrlKey && _this.suggestionsControl.current && _this.suggestionsControl.current.handleKeyDown(keyCode)) {\n            ev.preventDefault();\n            ev.stopPropagation();\n          } else {\n            _this._onValidateInput();\n          }\n\n          break;\n\n        case KeyCodes.del:\n          if (_this.props.onRemoveSuggestion && _this.suggestionsControl.current && _this.suggestionsControl.current.hasSuggestionSelected && _this.suggestionsControl.current.currentSuggestion && ev.shiftKey) {\n            _this.props.onRemoveSuggestion(_this.suggestionsControl.current.currentSuggestion.item);\n\n            _this.suggestionsControl.current.removeSuggestion();\n\n            _this.forceUpdate();\n\n            ev.stopPropagation();\n          }\n\n          break;\n\n        case KeyCodes.up:\n          if (_this.suggestionsControl.current && _this.suggestionsControl.current.handleKeyDown(keyCode)) {\n            ev.preventDefault();\n            ev.stopPropagation();\n\n            _this._updateActiveDescendant();\n          }\n\n          break;\n\n        case KeyCodes.down:\n          if (_this.suggestionsControl.current && _this.suggestionsControl.current.handleKeyDown(keyCode)) {\n            ev.preventDefault();\n            ev.stopPropagation();\n\n            _this._updateActiveDescendant();\n          }\n\n          break;\n      }\n    };\n\n    _this._onValidateInput = function () {\n      if (_this.state.queryString && _this.props.onValidateInput && _this.props.createGenericItem) {\n        var itemToConvert = _this.props.createGenericItem(_this.state.queryString, _this.props.onValidateInput(_this.state.queryString));\n\n        var convertedItems = _this.suggestionStore.convertSuggestionsToSuggestionItems([itemToConvert]);\n\n        _this.onChange(convertedItems[0].item);\n      }\n    };\n\n    _this._async = new Async(_this);\n    initializeComponentRef(_this);\n    _this.suggestionStore = basePickerProps.suggestionsStore;\n    _this.state = {\n      queryString: '',\n      didBind: false\n    };\n    return _this;\n  }\n\n  Object.defineProperty(BaseFloatingPicker.prototype, \"inputText\", {\n    get: function get() {\n      return this.state.queryString;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(BaseFloatingPicker.prototype, \"suggestions\", {\n    get: function get() {\n      return this.suggestionStore.suggestions;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  BaseFloatingPicker.prototype.forceResolveSuggestion = function () {\n    if (this.suggestionsControl.current && this.suggestionsControl.current.hasSuggestionSelected()) {\n      this.completeSuggestion();\n    } else {\n      this._onValidateInput();\n    }\n  };\n\n  Object.defineProperty(BaseFloatingPicker.prototype, \"currentSelectedSuggestionIndex\", {\n    get: function get() {\n      return this.suggestionsControl.current ? this.suggestionsControl.current.currentSuggestionIndex : -1;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(BaseFloatingPicker.prototype, \"isSuggestionsShown\", {\n    get: function get() {\n      return this.state.suggestionsVisible === undefined ? false : this.state.suggestionsVisible;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  BaseFloatingPicker.prototype.componentDidMount = function () {\n    this._bindToInputElement();\n\n    this.isComponentMounted = true;\n    this._onResolveSuggestions = this._async.debounce(this._onResolveSuggestions, this.props.resolveDelay);\n  };\n\n  BaseFloatingPicker.prototype.componentDidUpdate = function () {\n    this._bindToInputElement();\n  };\n\n  BaseFloatingPicker.prototype.componentWillUnmount = function () {\n    this._unbindFromInputElement();\n\n    this.isComponentMounted = false;\n  };\n\n  BaseFloatingPicker.prototype.UNSAFE_componentWillReceiveProps = function (newProps) {\n    if (newProps.suggestionItems) {\n      this.updateSuggestions(newProps.suggestionItems);\n    }\n  };\n\n  BaseFloatingPicker.prototype.updateSuggestions = function (suggestions, forceUpdate) {\n    if (forceUpdate === void 0) {\n      forceUpdate = false;\n    }\n\n    this.suggestionStore.updateSuggestions(suggestions);\n\n    if (forceUpdate) {\n      this.forceUpdate();\n    }\n  };\n\n  BaseFloatingPicker.prototype.render = function () {\n    var className = this.props.className;\n    return React.createElement(\"div\", {\n      ref: this.root,\n      className: css('ms-BasePicker ms-BaseFloatingPicker', className ? className : '')\n    }, this.renderSuggestions());\n  };\n\n  BaseFloatingPicker.prototype.renderSuggestions = function () {\n    var TypedSuggestionsControl = this.SuggestionsControlOfProperType;\n    return this.state.suggestionsVisible ? React.createElement(Callout, __assign({\n      className: styles.callout,\n      isBeakVisible: false,\n      gapSpace: 5,\n      target: this.props.inputElement,\n      onDismiss: this.hidePicker,\n      directionalHint: DirectionalHint.bottomLeftEdge,\n      directionalHintForRTL: DirectionalHint.bottomRightEdge,\n      calloutWidth: this.props.calloutWidth ? this.props.calloutWidth : 0\n    }, this.props.pickerCalloutProps), React.createElement(TypedSuggestionsControl, __assign({\n      onRenderSuggestion: this.props.onRenderSuggestionsItem,\n      onSuggestionClick: this.onSuggestionClick,\n      onSuggestionRemove: this.onSuggestionRemove,\n      suggestions: this.suggestionStore.getSuggestions(),\n      componentRef: this.suggestionsControl,\n      completeSuggestion: this.completeSuggestion,\n      shouldLoopSelection: false\n    }, this.props.pickerSuggestionsProps))) : null;\n  };\n\n  BaseFloatingPicker.prototype.onSelectionChange = function () {\n    this.forceUpdate();\n  };\n\n  BaseFloatingPicker.prototype.updateValue = function (updatedValue) {\n    if (updatedValue === '') {\n      this.updateSuggestionWithZeroState();\n    } else {\n      this._onResolveSuggestions(updatedValue);\n    }\n  };\n\n  BaseFloatingPicker.prototype.updateSuggestionWithZeroState = function () {\n    if (this.props.onZeroQuerySuggestion) {\n      var onEmptyInputFocus = this.props.onZeroQuerySuggestion;\n      var suggestions = onEmptyInputFocus(this.props.selectedItems);\n      this.updateSuggestionsList(suggestions);\n    } else {\n      this.hidePicker();\n    }\n  };\n\n  BaseFloatingPicker.prototype.updateSuggestionsList = function (suggestions) {\n    var _this = this;\n\n    var suggestionsArray = suggestions;\n    var suggestionsPromiseLike = suggestions; // Check to see if the returned value is an array, if it is then just pass it into the next function.\n    // If the returned value is not an array then check to see if it's a promise or PromiseLike.\n    // If it is then resolve it asynchronously.\n\n    if (Array.isArray(suggestionsArray)) {\n      this.updateSuggestions(suggestionsArray, true\n      /*forceUpdate*/\n      );\n    } else if (suggestionsPromiseLike && suggestionsPromiseLike.then) {\n      // Ensure that the promise will only use the callback if it was the most recent one.\n      var promise_1 = this.currentPromise = suggestionsPromiseLike;\n      promise_1.then(function (newSuggestions) {\n        // Only update if the next promise has not yet resolved and\n        // the floating picker is still mounted.\n        if (promise_1 === _this.currentPromise && _this.isComponentMounted) {\n          _this.updateSuggestions(newSuggestions, true\n          /*forceUpdate*/\n          );\n        }\n      });\n    }\n  };\n\n  BaseFloatingPicker.prototype.onChange = function (item) {\n    if (this.props.onChange) {\n      this.props.onChange(item);\n    }\n  };\n\n  BaseFloatingPicker.prototype._updateActiveDescendant = function () {\n    if (this.props.inputElement && this.suggestionsControl.current && this.suggestionsControl.current.selectedElement) {\n      var selectedElId = this.suggestionsControl.current.selectedElement.getAttribute('id');\n\n      if (selectedElId) {\n        this.props.inputElement.setAttribute('aria-activedescendant', selectedElId);\n      }\n    }\n  };\n\n  BaseFloatingPicker.prototype._onResolveSuggestions = function (updatedValue) {\n    var suggestions = this.props.onResolveSuggestions(updatedValue, this.props.selectedItems);\n\n    this._updateSuggestionsVisible(true\n    /*shouldShow*/\n    );\n\n    if (suggestions !== null) {\n      this.updateSuggestionsList(suggestions);\n    }\n  };\n\n  BaseFloatingPicker.prototype._updateSuggestionsVisible = function (shouldShow) {\n    if (shouldShow) {\n      this.showPicker();\n    } else {\n      this.hidePicker();\n    }\n  };\n\n  BaseFloatingPicker.prototype._bindToInputElement = function () {\n    if (this.props.inputElement && !this.state.didBind) {\n      this.props.inputElement.addEventListener('keydown', this.onKeyDown);\n      this.setState({\n        didBind: true\n      });\n    }\n  };\n\n  BaseFloatingPicker.prototype._unbindFromInputElement = function () {\n    if (this.props.inputElement && this.state.didBind) {\n      this.props.inputElement.removeEventListener('keydown', this.onKeyDown);\n      this.setState({\n        didBind: false\n      });\n    }\n  };\n\n  return BaseFloatingPicker;\n}(React.Component);\n\nexport { BaseFloatingPicker };","map":{"version":3,"mappings":"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","names":["React","stylesImport","Async","initializeComponentRef","css","KeyCodes","Callout","DirectionalHint","SuggestionsControl","styles","__extends","basePickerProps","_super","_this","createRef","queryString","state","setState","props","onInputChanged","updateValue","wasShownBeforeUpdate","isSuggestionsShown","suggestionsVisible","onSuggestionsHidden","value","inputElement","onSuggestionsShown","suggestionsControl","current","hasSuggestionSelected","onChange","currentSuggestion","item","ev","index","_updateSuggestionsVisible","onRemoveSuggestion","removeSuggestion","contains","target","keyCode","which","escape","hidePicker","preventDefault","stopPropagation","tab","enter","shiftKey","ctrlKey","handleKeyDown","_onValidateInput","del","forceUpdate","up","_updateActiveDescendant","down","onValidateInput","createGenericItem","itemToConvert","convertedItems","suggestionStore","convertSuggestionsToSuggestionItems","_async","suggestionsStore","didBind","Object","BaseFloatingPicker","suggestions","completeSuggestion","currentSuggestionIndex","undefined","_bindToInputElement","isComponentMounted","_onResolveSuggestions","debounce","resolveDelay","_unbindFromInputElement","newProps","suggestionItems","updateSuggestions","ref","root","className","renderSuggestions","TypedSuggestionsControl","SuggestionsControlOfProperType","__assign","callout","isBeakVisible","gapSpace","onDismiss","directionalHint","bottomLeftEdge","directionalHintForRTL","bottomRightEdge","calloutWidth","pickerCalloutProps","onRenderSuggestion","onRenderSuggestionsItem","onSuggestionClick","onSuggestionRemove","getSuggestions","componentRef","shouldLoopSelection","pickerSuggestionsProps","updatedValue","updateSuggestionWithZeroState","onZeroQuerySuggestion","onEmptyInputFocus","selectedItems","updateSuggestionsList","suggestionsArray","suggestionsPromiseLike","Array","isArray","then","promise_1","currentPromise","newSuggestions","selectedElement","selectedElId","getAttribute","setAttribute","onResolveSuggestions","shouldShow","showPicker","addEventListener","onKeyDown","removeEventListener","Component"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\office-ui-fabric-react\\lib\\components\\src\\components\\FloatingPicker\\BaseFloatingPicker.tsx"],"sourcesContent":["import * as React from 'react';\nimport * as stylesImport from './BaseFloatingPicker.scss';\nimport { Async, initializeComponentRef, css, KeyCodes } from '../../Utilities';\nimport { Callout, DirectionalHint } from '../../Callout';\nimport { IBaseFloatingPicker, IBaseFloatingPickerProps } from './BaseFloatingPicker.types';\nimport { ISuggestionModel } from '../../Pickers';\nimport { ISuggestionsControlProps } from './Suggestions/Suggestions.types';\nimport { SuggestionsControl } from './Suggestions/SuggestionsControl';\nimport { SuggestionsStore } from './Suggestions/SuggestionsStore';\nconst styles: any = stylesImport;\n\nexport interface IBaseFloatingPickerState {\n  queryString: string;\n  suggestionsVisible?: boolean;\n  didBind: boolean;\n}\n\nexport class BaseFloatingPicker<T, P extends IBaseFloatingPickerProps<T>>\n  extends React.Component<P, IBaseFloatingPickerState>\n  implements IBaseFloatingPicker {\n  protected selection: Selection;\n\n  protected root = React.createRef<HTMLDivElement>();\n  protected suggestionStore: SuggestionsStore<T>;\n  protected suggestionsControl: React.RefObject<SuggestionsControl<T>> = React.createRef();\n  protected SuggestionsControlOfProperType: new (props: ISuggestionsControlProps<T>) => SuggestionsControl<\n    T\n  > = SuggestionsControl as new (props: ISuggestionsControlProps<T>) => SuggestionsControl<T>;\n  protected currentPromise: PromiseLike<T[]>;\n  protected isComponentMounted: boolean = false;\n\n  private _async: Async;\n  constructor(basePickerProps: P) {\n    super(basePickerProps);\n\n    this._async = new Async(this);\n    initializeComponentRef(this);\n\n    this.suggestionStore = basePickerProps.suggestionsStore;\n    this.state = {\n      queryString: '',\n      didBind: false,\n    };\n  }\n\n  public get inputText(): string {\n    return this.state.queryString;\n  }\n\n  public get suggestions(): any[] {\n    return this.suggestionStore.suggestions;\n  }\n\n  public forceResolveSuggestion(): void {\n    if (this.suggestionsControl.current && this.suggestionsControl.current.hasSuggestionSelected()) {\n      this.completeSuggestion();\n    } else {\n      this._onValidateInput();\n    }\n  }\n\n  public get currentSelectedSuggestionIndex(): number {\n    return this.suggestionsControl.current ? this.suggestionsControl.current.currentSuggestionIndex : -1;\n  }\n\n  public get isSuggestionsShown(): boolean {\n    return this.state.suggestionsVisible === undefined ? false : this.state.suggestionsVisible;\n  }\n\n  public onQueryStringChanged = (queryString: string): void => {\n    if (queryString !== this.state.queryString) {\n      this.setState({\n        queryString: queryString,\n      });\n\n      if (this.props.onInputChanged) {\n        (this.props.onInputChanged as (filter: string) => void)(queryString);\n      }\n\n      this.updateValue(queryString);\n    }\n  };\n\n  public hidePicker = (): void => {\n    const wasShownBeforeUpdate = this.isSuggestionsShown;\n\n    this.setState({\n      suggestionsVisible: false,\n    });\n\n    if (this.props.onSuggestionsHidden && wasShownBeforeUpdate) {\n      this.props.onSuggestionsHidden();\n    }\n  };\n\n  public showPicker = (updateValue: boolean = false): void => {\n    const wasShownBeforeUpdate = this.isSuggestionsShown;\n    this.setState({\n      suggestionsVisible: true,\n    });\n\n    // Update the suggestions if updateValue == true\n    const value = this.props.inputElement ? this.props.inputElement.value : '';\n    if (updateValue) {\n      this.updateValue(value);\n    }\n\n    if (this.props.onSuggestionsShown && !wasShownBeforeUpdate) {\n      this.props.onSuggestionsShown();\n    }\n  };\n\n  public componentDidMount(): void {\n    this._bindToInputElement();\n    this.isComponentMounted = true;\n\n    this._onResolveSuggestions = this._async.debounce(this._onResolveSuggestions, this.props.resolveDelay);\n  }\n\n  public componentDidUpdate(): void {\n    this._bindToInputElement();\n  }\n\n  public componentWillUnmount(): void {\n    this._unbindFromInputElement();\n    this.isComponentMounted = false;\n  }\n\n  public UNSAFE_componentWillReceiveProps(newProps: IBaseFloatingPickerProps<T>): void {\n    if (newProps.suggestionItems) {\n      this.updateSuggestions(newProps.suggestionItems);\n    }\n  }\n\n  public completeSuggestion = (): void => {\n    if (this.suggestionsControl.current && this.suggestionsControl.current.hasSuggestionSelected()) {\n      this.onChange(this.suggestionsControl.current.currentSuggestion!.item);\n    }\n  };\n\n  public updateSuggestions(suggestions: T[], forceUpdate: boolean = false): void {\n    this.suggestionStore.updateSuggestions(suggestions);\n\n    if (forceUpdate) {\n      this.forceUpdate();\n    }\n  }\n\n  public render(): JSX.Element {\n    const { className } = this.props;\n    return (\n      <div ref={this.root} className={css('ms-BasePicker ms-BaseFloatingPicker', className ? className : '')}>\n        {this.renderSuggestions()}\n      </div>\n    );\n  }\n\n  protected renderSuggestions(): JSX.Element | null {\n    const TypedSuggestionsControl = this.SuggestionsControlOfProperType;\n    return this.state.suggestionsVisible ? (\n      <Callout\n        className={styles.callout}\n        isBeakVisible={false}\n        gapSpace={5}\n        target={this.props.inputElement}\n        onDismiss={this.hidePicker}\n        directionalHint={DirectionalHint.bottomLeftEdge}\n        directionalHintForRTL={DirectionalHint.bottomRightEdge}\n        calloutWidth={this.props.calloutWidth ? this.props.calloutWidth : 0}\n        {...this.props.pickerCalloutProps}\n      >\n        <TypedSuggestionsControl\n          onRenderSuggestion={this.props.onRenderSuggestionsItem}\n          onSuggestionClick={this.onSuggestionClick}\n          onSuggestionRemove={this.onSuggestionRemove}\n          suggestions={this.suggestionStore.getSuggestions()}\n          componentRef={this.suggestionsControl}\n          completeSuggestion={this.completeSuggestion}\n          shouldLoopSelection={false}\n          {...this.props.pickerSuggestionsProps}\n        />\n      </Callout>\n    ) : null;\n  }\n\n  protected onSelectionChange(): void {\n    this.forceUpdate();\n  }\n\n  protected updateValue(updatedValue: string): void {\n    if (updatedValue === '') {\n      this.updateSuggestionWithZeroState();\n    } else {\n      this._onResolveSuggestions(updatedValue);\n    }\n  }\n\n  protected updateSuggestionWithZeroState(): void {\n    if (this.props.onZeroQuerySuggestion) {\n      const onEmptyInputFocus = this.props.onZeroQuerySuggestion as (selectedItems?: T[]) => T[] | PromiseLike<T[]>;\n      const suggestions: T[] | PromiseLike<T[]> = onEmptyInputFocus(this.props.selectedItems);\n      this.updateSuggestionsList(suggestions);\n    } else {\n      this.hidePicker();\n    }\n  }\n\n  protected updateSuggestionsList(suggestions: T[] | PromiseLike<T[]>): void {\n    const suggestionsArray: T[] = suggestions as T[];\n    const suggestionsPromiseLike: PromiseLike<T[]> = suggestions as PromiseLike<T[]>;\n\n    // Check to see if the returned value is an array, if it is then just pass it into the next function.\n    // If the returned value is not an array then check to see if it's a promise or PromiseLike.\n    // If it is then resolve it asynchronously.\n    if (Array.isArray(suggestionsArray)) {\n      this.updateSuggestions(suggestionsArray, true /*forceUpdate*/);\n    } else if (suggestionsPromiseLike && suggestionsPromiseLike.then) {\n      // Ensure that the promise will only use the callback if it was the most recent one.\n      const promise: PromiseLike<T[]> = (this.currentPromise = suggestionsPromiseLike);\n      promise.then((newSuggestions: T[]) => {\n        // Only update if the next promise has not yet resolved and\n        // the floating picker is still mounted.\n        if (promise === this.currentPromise && this.isComponentMounted) {\n          this.updateSuggestions(newSuggestions, true /*forceUpdate*/);\n        }\n      });\n    }\n  }\n\n  protected onChange(item: T): void {\n    if (this.props.onChange) {\n      (this.props.onChange as (items: T) => void)(item);\n    }\n  }\n\n  protected onSuggestionClick = (ev: React.MouseEvent<HTMLElement>, item: T, index: number): void => {\n    this.onChange(item);\n    this._updateSuggestionsVisible(false /*shouldShow*/);\n  };\n\n  protected onSuggestionRemove = (ev: React.MouseEvent<HTMLElement>, item: T, index: number): void => {\n    if (this.props.onRemoveSuggestion) {\n      (this.props.onRemoveSuggestion as (item: T) => void)(item);\n    }\n\n    if (this.suggestionsControl.current) {\n      this.suggestionsControl.current.removeSuggestion(index);\n    }\n  };\n\n  protected onKeyDown = (ev: MouseEvent): void => {\n    if (\n      !this.state.suggestionsVisible ||\n      (this.props.inputElement && !(this.props.inputElement as HTMLElement).contains(ev.target as HTMLElement))\n    ) {\n      return;\n    }\n    // eslint-disable-next-line deprecation/deprecation\n    const keyCode = ev.which;\n    switch (keyCode) {\n      case KeyCodes.escape:\n        this.hidePicker();\n        ev.preventDefault();\n        ev.stopPropagation();\n        break;\n\n      case KeyCodes.tab:\n      case KeyCodes.enter:\n        if (\n          !ev.shiftKey &&\n          !ev.ctrlKey &&\n          this.suggestionsControl.current &&\n          this.suggestionsControl.current.handleKeyDown(keyCode)\n        ) {\n          ev.preventDefault();\n          ev.stopPropagation();\n        } else {\n          this._onValidateInput();\n        }\n        break;\n\n      case KeyCodes.del:\n        if (\n          this.props.onRemoveSuggestion &&\n          this.suggestionsControl.current &&\n          this.suggestionsControl.current.hasSuggestionSelected &&\n          this.suggestionsControl.current.currentSuggestion &&\n          ev.shiftKey\n        ) {\n          (this.props.onRemoveSuggestion as (item: T) => void)(this.suggestionsControl.current.currentSuggestion!.item);\n\n          this.suggestionsControl.current.removeSuggestion();\n          this.forceUpdate();\n          ev.stopPropagation();\n        }\n        break;\n\n      case KeyCodes.up:\n        if (this.suggestionsControl.current && this.suggestionsControl.current.handleKeyDown(keyCode)) {\n          ev.preventDefault();\n          ev.stopPropagation();\n          this._updateActiveDescendant();\n        }\n        break;\n\n      case KeyCodes.down:\n        if (this.suggestionsControl.current && this.suggestionsControl.current.handleKeyDown(keyCode)) {\n          ev.preventDefault();\n          ev.stopPropagation();\n          this._updateActiveDescendant();\n        }\n        break;\n    }\n  };\n\n  private _updateActiveDescendant(): void {\n    if (this.props.inputElement && this.suggestionsControl.current && this.suggestionsControl.current.selectedElement) {\n      const selectedElId = this.suggestionsControl.current.selectedElement.getAttribute('id');\n      if (selectedElId) {\n        this.props.inputElement.setAttribute('aria-activedescendant', selectedElId as string);\n      }\n    }\n  }\n\n  private _onResolveSuggestions(updatedValue: string): void {\n    const suggestions: T[] | PromiseLike<T[]> | null = this.props.onResolveSuggestions(\n      updatedValue,\n      this.props.selectedItems,\n    );\n\n    this._updateSuggestionsVisible(true /*shouldShow*/);\n    if (suggestions !== null) {\n      this.updateSuggestionsList(suggestions);\n    }\n  }\n\n  private _onValidateInput = (): void => {\n    if (this.state.queryString && this.props.onValidateInput && this.props.createGenericItem) {\n      const itemToConvert: ISuggestionModel<T> = (this.props.createGenericItem as (\n        input: string,\n        isValid: boolean,\n      ) => ISuggestionModel<T>)(\n        this.state.queryString,\n        (this.props.onValidateInput as (input: string) => boolean)(this.state.queryString),\n      );\n      const convertedItems = this.suggestionStore.convertSuggestionsToSuggestionItems([itemToConvert]);\n      this.onChange(convertedItems[0].item);\n    }\n  };\n\n  private _updateSuggestionsVisible(shouldShow: boolean): void {\n    if (shouldShow) {\n      this.showPicker();\n    } else {\n      this.hidePicker();\n    }\n  }\n\n  private _bindToInputElement(): void {\n    if (this.props.inputElement && !this.state.didBind) {\n      this.props.inputElement.addEventListener('keydown', this.onKeyDown);\n      this.setState({ didBind: true });\n    }\n  }\n\n  private _unbindFromInputElement(): void {\n    if (this.props.inputElement && this.state.didBind) {\n      this.props.inputElement.removeEventListener('keydown', this.onKeyDown);\n      this.setState({ didBind: false });\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}