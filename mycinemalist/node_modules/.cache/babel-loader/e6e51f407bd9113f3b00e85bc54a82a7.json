{"ast":null,"code":"import { getGlobalClassNames, HighContrastSelector } from '../../../Styling';\nvar GlobalClassNames = {\n  root: 'ms-ShimmerLine-root',\n  topLeftCorner: 'ms-ShimmerLine-topLeftCorner',\n  topRightCorner: 'ms-ShimmerLine-topRightCorner',\n  bottomLeftCorner: 'ms-ShimmerLine-bottomLeftCorner',\n  bottomRightCorner: 'ms-ShimmerLine-bottomRightCorner'\n};\nexport function getStyles(props) {\n  var _a; // eslint-disable-next-line deprecation/deprecation\n\n\n  var height = props.height,\n      borderStyle = props.borderStyle,\n      theme = props.theme;\n  var semanticColors = theme.semanticColors;\n  var globalClassNames = getGlobalClassNames(GlobalClassNames, theme);\n  var borderStyles = borderStyle || {};\n  var sharedCornerStyles = {\n    position: 'absolute',\n    fill: semanticColors.bodyBackground\n  };\n  return {\n    root: [globalClassNames.root, theme.fonts.medium, {\n      height: height + \"px\",\n      boxSizing: 'content-box',\n      position: 'relative',\n      borderTopStyle: 'solid',\n      borderBottomStyle: 'solid',\n      borderColor: semanticColors.bodyBackground,\n      borderWidth: 0,\n      selectors: (_a = {}, _a[HighContrastSelector] = {\n        borderColor: 'Window',\n        selectors: {\n          '> *': {\n            fill: 'Window'\n          }\n        }\n      }, _a)\n    }, borderStyles],\n    topLeftCorner: [globalClassNames.topLeftCorner, {\n      top: '0',\n      left: '0'\n    }, sharedCornerStyles],\n    topRightCorner: [globalClassNames.topRightCorner, {\n      top: '0',\n      right: '0'\n    }, sharedCornerStyles],\n    bottomRightCorner: [globalClassNames.bottomRightCorner, {\n      bottom: '0',\n      right: '0'\n    }, sharedCornerStyles],\n    bottomLeftCorner: [globalClassNames.bottomLeftCorner, {\n      bottom: '0',\n      left: '0'\n    }, sharedCornerStyles]\n  };\n}","map":{"version":3,"mappings":"AACA,SAAoBA,mBAApB,EAAyCC,oBAAzC,QAAqE,kBAArE;AAEA,IAAMC,gBAAgB,GAAG;EACvBC,IAAI,EAAE,qBADiB;EAEvBC,aAAa,EAAE,8BAFQ;EAGvBC,cAAc,EAAE,+BAHO;EAIvBC,gBAAgB,EAAE,iCAJK;EAKvBC,iBAAiB,EAAE;AALI,CAAzB;AAQA,OAAM,SAAUC,SAAV,CAAoBC,KAApB,EAAiD;SAAA,CACrD;;;EACQ;EAAA,IAAQC,+BAAR;EAAA,IAAqBC,mBAArB;EAEA;EACR,IAAMC,gBAAgB,GAAGZ,mBAAmB,CAACE,gBAAD,EAAmBS,KAAnB,CAA5C;EAEA,IAAME,YAAY,GAAcH,WAAW,IAAI,EAA/C;EAEA,IAAMI,kBAAkB,GAAc;IACpCC,QAAQ,EAAE,UAD0B;IAEpCC,IAAI,EAAEC,cAAc,CAACC;EAFe,CAAtC;EAKA,OAAO;IACLf,IAAI,EAAE,CACJS,gBAAgB,CAACT,IADb,EAEJQ,KAAK,CAACQ,KAAN,CAAYC,MAFR,EAGJ;MACEC,MAAM,EAAKA,MAAM,OADnB;MAEEC,SAAS,EAAE,aAFb;MAGEP,QAAQ,EAAE,UAHZ;MAIEQ,cAAc,EAAE,OAJlB;MAKEC,iBAAiB,EAAE,OALrB;MAMEC,WAAW,EAAER,cAAc,CAACC,cAN9B;MAOEQ,WAAW,EAAE,CAPf;MAQEC,SAAS,YACPC,GAAC3B,oBAAD,IAAwB;QACtBwB,WAAW,EAAE,QADS;QAEtBE,SAAS,EAAE;UACT,OAAO;YACLX,IAAI,EAAE;UADD;QADE;MAFW,CADjB;IARX,CAHI,EAsBJH,YAtBI,CADD;IAyBLT,aAAa,EAAE,CACbQ,gBAAgB,CAACR,aADJ,EAEb;MACEyB,GAAG,EAAE,GADP;MAEEC,IAAI,EAAE;IAFR,CAFa,EAMbhB,kBANa,CAzBV;IAiCLT,cAAc,EAAE,CACdO,gBAAgB,CAACP,cADH,EAEd;MACEwB,GAAG,EAAE,GADP;MAEEE,KAAK,EAAE;IAFT,CAFc,EAMdjB,kBANc,CAjCX;IAyCLP,iBAAiB,EAAE,CACjBK,gBAAgB,CAACL,iBADA,EAEjB;MACEyB,MAAM,EAAE,GADV;MAEED,KAAK,EAAE;IAFT,CAFiB,EAMjBjB,kBANiB,CAzCd;IAiDLR,gBAAgB,EAAE,CAChBM,gBAAgB,CAACN,gBADD,EAEhB;MACE0B,MAAM,EAAE,GADV;MAEEF,IAAI,EAAE;IAFR,CAFgB,EAMhBhB,kBANgB;EAjDb,CAAP;AA0DD","names":["getGlobalClassNames","HighContrastSelector","GlobalClassNames","root","topLeftCorner","topRightCorner","bottomLeftCorner","bottomRightCorner","getStyles","props","borderStyle","theme","globalClassNames","borderStyles","sharedCornerStyles","position","fill","semanticColors","bodyBackground","fonts","medium","height","boxSizing","borderTopStyle","borderBottomStyle","borderColor","borderWidth","selectors","_a","top","left","right","bottom"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\office-ui-fabric-react\\lib\\components\\Shimmer\\src\\components\\Shimmer\\ShimmerLine\\ShimmerLine.styles.ts"],"sourcesContent":["import { IShimmerLineStyleProps, IShimmerLineStyles } from './ShimmerLine.types';\nimport { IRawStyle, getGlobalClassNames, HighContrastSelector } from '../../../Styling';\n\nconst GlobalClassNames = {\n  root: 'ms-ShimmerLine-root',\n  topLeftCorner: 'ms-ShimmerLine-topLeftCorner',\n  topRightCorner: 'ms-ShimmerLine-topRightCorner',\n  bottomLeftCorner: 'ms-ShimmerLine-bottomLeftCorner',\n  bottomRightCorner: 'ms-ShimmerLine-bottomRightCorner',\n};\n\nexport function getStyles(props: IShimmerLineStyleProps): IShimmerLineStyles {\n  // eslint-disable-next-line deprecation/deprecation\n  const { height, borderStyle, theme } = props;\n\n  const { semanticColors } = theme;\n  const globalClassNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  const borderStyles: IRawStyle = borderStyle || {};\n\n  const sharedCornerStyles: IRawStyle = {\n    position: 'absolute',\n    fill: semanticColors.bodyBackground,\n  };\n\n  return {\n    root: [\n      globalClassNames.root,\n      theme.fonts.medium,\n      {\n        height: `${height}px`,\n        boxSizing: 'content-box',\n        position: 'relative',\n        borderTopStyle: 'solid',\n        borderBottomStyle: 'solid',\n        borderColor: semanticColors.bodyBackground,\n        borderWidth: 0,\n        selectors: {\n          [HighContrastSelector]: {\n            borderColor: 'Window',\n            selectors: {\n              '> *': {\n                fill: 'Window',\n              },\n            },\n          },\n        },\n      },\n      borderStyles,\n    ],\n    topLeftCorner: [\n      globalClassNames.topLeftCorner,\n      {\n        top: '0',\n        left: '0',\n      },\n      sharedCornerStyles,\n    ],\n    topRightCorner: [\n      globalClassNames.topRightCorner,\n      {\n        top: '0',\n        right: '0',\n      },\n      sharedCornerStyles,\n    ],\n    bottomRightCorner: [\n      globalClassNames.bottomRightCorner,\n      {\n        bottom: '0',\n        right: '0',\n      },\n      sharedCornerStyles,\n    ],\n    bottomLeftCorner: [\n      globalClassNames.bottomLeftCorner,\n      {\n        bottom: '0',\n        left: '0',\n      },\n      sharedCornerStyles,\n    ],\n  };\n}\n"]},"metadata":{},"sourceType":"module"}