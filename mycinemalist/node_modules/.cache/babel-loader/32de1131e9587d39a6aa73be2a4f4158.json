{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { Customizations } from './Customizations';\nimport { hoistStatics } from '../hoistStatics';\nimport { CustomizerContext } from './CustomizerContext';\nimport { concatStyleSets } from '@uifabric/merge-styles';\nexport function customizable(scope, fields, concatStyles) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function customizableFactory(ComposedComponent) {\n    var _a;\n\n    var resultClass = (_a =\n    /** @class */\n    function (_super) {\n      __extends(ComponentWithInjectedProps, _super);\n\n      function ComponentWithInjectedProps(props) {\n        var _this = _super.call(this, props) || this; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n        _this._styleCache = {};\n        _this._onSettingChanged = _this._onSettingChanged.bind(_this);\n        return _this;\n      }\n\n      ComponentWithInjectedProps.prototype.componentDidMount = function () {\n        Customizations.observe(this._onSettingChanged);\n      };\n\n      ComponentWithInjectedProps.prototype.componentWillUnmount = function () {\n        Customizations.unobserve(this._onSettingChanged);\n      };\n\n      ComponentWithInjectedProps.prototype.render = function () {\n        var _this = this;\n\n        return React.createElement(CustomizerContext.Consumer, null, function (context) {\n          var defaultProps = Customizations.getSettings(fields, scope, context.customizations); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n          var componentProps = _this.props; // If defaultProps.styles is a function, evaluate it before calling concatStyleSets\n\n          if (defaultProps.styles && typeof defaultProps.styles === 'function') {\n            defaultProps.styles = defaultProps.styles(__assign(__assign({}, defaultProps), componentProps));\n          } // If concatStyles is true and custom styles have been defined compute those styles\n\n\n          if (concatStyles && defaultProps.styles) {\n            if (_this._styleCache.default !== defaultProps.styles || _this._styleCache.component !== componentProps.styles) {\n              var mergedStyles = concatStyleSets(defaultProps.styles, componentProps.styles);\n              _this._styleCache.default = defaultProps.styles;\n              _this._styleCache.component = componentProps.styles;\n              _this._styleCache.merged = mergedStyles;\n            }\n\n            return React.createElement(ComposedComponent, __assign({}, defaultProps, componentProps, {\n              styles: _this._styleCache.merged\n            }));\n          }\n\n          return React.createElement(ComposedComponent, __assign({}, defaultProps, componentProps));\n        });\n      };\n\n      ComponentWithInjectedProps.prototype._onSettingChanged = function () {\n        this.forceUpdate();\n      };\n\n      return ComponentWithInjectedProps;\n    }(React.Component), _a.displayName = 'Customized' + scope, _a);\n    return hoistStatics(ComposedComponent, resultClass);\n  };\n}","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,SAASC,iBAAT,QAAsD,qBAAtD;AACA,SAASC,eAAT,QAAgC,wBAAhC;AAEA,OAAM,SAAUC,YAAV,CACJC,KADI,EAEJC,MAFI,EAGJC,YAHI,EAGkB;EAGtB;EACA,OAAO,SAASC,mBAAT,CAAgCC,iBAAhC,EAAyE;;;IAC9E,IAAMC,WAAW;IAAA;IAAA;MAA4CC;;MAM3D,oCAAYC,KAAZ,EAAoB;QAApB,YACEC,kBAAMD,KAAN,KAAY,IADd,CAAoB,CAHpB;;;QACQE,oBAAgE,EAAhE;QAKNA,KAAI,CAACC,iBAAL,GAAyBD,KAAI,CAACC,iBAAL,CAAuBC,IAAvB,CAA4BF,KAA5B,CAAzB;;MACD;;MAEMG,yDAAP;QACEjB,cAAc,CAACkB,OAAf,CAAuB,KAAKH,iBAA5B;MACD,CAFM;;MAIAE,4DAAP;QACEjB,cAAc,CAACmB,SAAf,CAAyB,KAAKJ,iBAA9B;MACD,CAFM;;MAIAE,8CAAP;QAAA;;QACE,OACElB,oBAACG,iBAAiB,CAACkB,QAAnB,EAA2B,IAA3B,EACG,UAACC,OAAD,EAA4B;UAC3B,IAAMC,YAAY,GAAGtB,cAAc,CAACuB,WAAf,CAA2BjB,MAA3B,EAAmCD,KAAnC,EAA0CgB,OAAO,CAACG,cAAlD,CAArB,CAD2B,CAG3B;;UACA,IAAMC,cAAc,GAAGX,KAAI,CAACF,KAA5B,CAJ2B,CAM3B;;UACA,IAAIU,YAAY,CAACI,MAAb,IAAuB,OAAOJ,YAAY,CAACI,MAApB,KAA+B,UAA1D,EAAsE;YACpEJ,YAAY,CAACI,MAAb,GAAsBJ,YAAY,CAACI,MAAb,CAAmBC,sBAAML,YAAN,GAAuBG,cAAvB,CAAnB,CAAtB;UACD,CAT0B,CAW3B;;;UACA,IAAIlB,YAAY,IAAIe,YAAY,CAACI,MAAjC,EAAyC;YACvC,IACEZ,KAAI,CAACc,WAAL,CAAiBC,OAAjB,KAA6BP,YAAY,CAACI,MAA1C,IACAZ,KAAI,CAACc,WAAL,CAAiBE,SAAjB,KAA+BL,cAAc,CAACC,MAFhD,EAGE;cACA,IAAMK,YAAY,GAAG5B,eAAe,CAACmB,YAAY,CAACI,MAAd,EAAsBD,cAAc,CAACC,MAArC,CAApC;cACAZ,KAAI,CAACc,WAAL,CAAiBC,OAAjB,GAA2BP,YAAY,CAACI,MAAxC;cACAZ,KAAI,CAACc,WAAL,CAAiBE,SAAjB,GAA6BL,cAAc,CAACC,MAA5C;cACAZ,KAAI,CAACc,WAAL,CAAiBI,MAAjB,GAA0BD,YAA1B;YACD;;YAED,OAAOhC,oBAACU,iBAAD,EAAkBkB,aAAKL,YAAL,EAAuBG,cAAvB,EAAqC;cAAEC,MAAM,EAAEZ,KAAI,CAACc,WAAL,CAAiBI;YAA3B,CAArC,CAAlB,CAAP;UACD;;UAED,OAAOjC,oBAACU,iBAAD,EAAkBkB,aAAKL,YAAL,EAAuBG,cAAvB,CAAlB,CAAP;QACD,CA5BH,CADF;MAgCD,CAjCM;;MAmCCR,yDAAR;QACE,KAAKgB,WAAL;MACD,CAFO;;MAGV;IAAC,CA1DgB,CAA4ClC,KAAK,CAACmC,SAAlD,GACDC,iBAAsB,eAAe9B,KADpC,KAAjB;IA4DA,OAAOJ,YAAY,CAACQ,iBAAD,EAAoBC,WAApB,CAAnB;EACD,CA9DD;AA+DD","names":["React","Customizations","hoistStatics","CustomizerContext","concatStyleSets","customizable","scope","fields","concatStyles","customizableFactory","ComposedComponent","resultClass","__extends","props","_super","_this","_onSettingChanged","bind","ComponentWithInjectedProps","observe","unobserve","Consumer","context","defaultProps","getSettings","customizations","componentProps","styles","__assign","_styleCache","default","component","mergedStyles","merged","forceUpdate","Component","_a"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\office-ui-fabric-react\\node_modules\\@uifabric\\utilities\\lib\\src\\customizations\\customizable.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Customizations } from './Customizations';\nimport { hoistStatics } from '../hoistStatics';\nimport { CustomizerContext, ICustomizerContext } from './CustomizerContext';\nimport { concatStyleSets } from '@uifabric/merge-styles';\n\nexport function customizable(\n  scope: string,\n  fields: string[],\n  concatStyles?: boolean,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n): <P>(ComposedComponent: React.ComponentType<P>) => any {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function customizableFactory<P>(ComposedComponent: React.ComponentType<P>): any {\n    const resultClass = class ComponentWithInjectedProps extends React.Component<P, {}> {\n      public static displayName: string = 'Customized' + scope;\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      private _styleCache: { default?: any; component?: any; merged?: any } = {};\n\n      constructor(props: P) {\n        super(props);\n\n        this._onSettingChanged = this._onSettingChanged.bind(this);\n      }\n\n      public componentDidMount(): void {\n        Customizations.observe(this._onSettingChanged);\n      }\n\n      public componentWillUnmount(): void {\n        Customizations.unobserve(this._onSettingChanged);\n      }\n\n      public render(): JSX.Element {\n        return (\n          <CustomizerContext.Consumer>\n            {(context: ICustomizerContext) => {\n              const defaultProps = Customizations.getSettings(fields, scope, context.customizations);\n\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              const componentProps = this.props as any;\n\n              // If defaultProps.styles is a function, evaluate it before calling concatStyleSets\n              if (defaultProps.styles && typeof defaultProps.styles === 'function') {\n                defaultProps.styles = defaultProps.styles({ ...defaultProps, ...componentProps });\n              }\n\n              // If concatStyles is true and custom styles have been defined compute those styles\n              if (concatStyles && defaultProps.styles) {\n                if (\n                  this._styleCache.default !== defaultProps.styles ||\n                  this._styleCache.component !== componentProps.styles\n                ) {\n                  const mergedStyles = concatStyleSets(defaultProps.styles, componentProps.styles);\n                  this._styleCache.default = defaultProps.styles;\n                  this._styleCache.component = componentProps.styles;\n                  this._styleCache.merged = mergedStyles;\n                }\n\n                return <ComposedComponent {...defaultProps} {...componentProps} styles={this._styleCache.merged} />;\n              }\n\n              return <ComposedComponent {...defaultProps} {...componentProps} />;\n            }}\n          </CustomizerContext.Consumer>\n        );\n      }\n\n      private _onSettingChanged(): void {\n        this.forceUpdate();\n      }\n    };\n\n    return hoistStatics(ComposedComponent, resultClass);\n  };\n}\n"]},"metadata":{},"sourceType":"module"}