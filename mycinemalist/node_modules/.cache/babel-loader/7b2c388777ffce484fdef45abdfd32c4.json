{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { warnDeprecations, initializeComponentRef, classNamesFunction, css, format, getId, divProperties, getNativeProps } from '../../Utilities';\nimport { Icon } from '../../Icon';\nimport { FocusZone, FocusZoneDirection } from '../../FocusZone';\nimport { RatingSize } from './Rating.types';\nvar getClassNames = classNamesFunction();\n\nvar RatingStar = function RatingStar(props) {\n  var icon = props.icon || 'FavoriteStarFill';\n  return React.createElement(\"div\", {\n    className: props.classNames.ratingStar,\n    key: props.id\n  }, React.createElement(Icon, {\n    className: props.classNames.ratingStarBack,\n    iconName: icon\n  }), !props.disabled && React.createElement(Icon, {\n    className: props.classNames.ratingStarFront,\n    iconName: icon,\n    style: {\n      width: props.fillPercentage + '%'\n    }\n  }));\n};\n\nvar RatingBase =\n/** @class */\nfunction (_super) {\n  __extends(RatingBase, _super);\n\n  function RatingBase(props) {\n    var _this = _super.call(this, props) || this;\n\n    initializeComponentRef(_this);\n    warnDeprecations('Rating', props, {\n      onChanged: 'onChange'\n    });\n    _this._id = getId('Rating');\n    _this._min = _this.props.allowZeroStars ? 0 : 1;\n    /* eslint-disable deprecation/deprecation */\n\n    if (_this.props.min !== undefined && _this.props.min !== 1) {\n      _this._min = _this.props.min;\n    }\n    /* eslint-enable deprecation/deprecation */\n\n\n    _this._labelId = getId('RatingLabel');\n    _this.state = {\n      rating: _this._getInitialValue(props)\n    };\n    return _this;\n  }\n\n  RatingBase.prototype.render = function () {\n    var _a, _b, _c;\n\n    var _d = this.props,\n        disabled = _d.disabled,\n        getAriaLabel = _d.getAriaLabel,\n        styles = _d.styles,\n        max = _d.max,\n        readOnly = _d.readOnly,\n        size = _d.size,\n        theme = _d.theme,\n        _e = _d.icon,\n        icon = _e === void 0 ? 'FavoriteStarFill' : _e,\n        _f = _d.unselectedIcon,\n        unselectedIcon = _f === void 0 ? 'FavoriteStar' : _f,\n        onRenderStar = _d.onRenderStar;\n    var id = this._id;\n    var stars = [];\n    var starIds = [];\n\n    var rating = this._getRating();\n\n    var divProps = getNativeProps(this.props, divProperties);\n    this._classNames = getClassNames(styles, {\n      disabled: disabled,\n      readOnly: readOnly,\n      theme: theme\n    });\n\n    var renderStar = function renderStar(starProps, renderer) {\n      return renderer ? renderer(starProps) : React.createElement(RatingStar, __assign({\n        key: starProps.starNum + 'rating'\n      }, starProps));\n    };\n\n    for (var i = this._min; i <= max; i++) {\n      if (i !== 0) {\n        var fillPercentage = this._getFillingPercentage(i);\n\n        var ratingStarProps = {\n          fillPercentage: fillPercentage,\n          disabled: disabled,\n          classNames: this._classNames,\n          icon: fillPercentage > 0 ? icon : unselectedIcon,\n          starNum: i\n        };\n        starIds.push(this._getStarId(i - 1));\n        stars.push(React.createElement(\"button\", __assign({\n          className: css(this._classNames.ratingButton, (_a = {}, _a[this._classNames.ratingStarIsLarge] = size === RatingSize.Large, _a[this._classNames.ratingStarIsSmall] = size !== RatingSize.Large, _a)),\n          id: starIds[i - 1],\n          key: i\n        }, i === Math.ceil(rating) ? {\n          'data-is-current': true\n        } : {}, {\n          onFocus: this._onFocus.bind(this, i),\n          onClick: this._onFocus.bind(this, i),\n          disabled: disabled || readOnly ? true : false,\n          role: \"presentation\",\n          type: \"button\"\n        }), this._getLabel(i), renderStar(ratingStarProps, onRenderStar)));\n      }\n    }\n\n    var ariaLabel = getAriaLabel ? getAriaLabel(rating ? rating : 0, max) : undefined; // When in read-only mode, we allow focus (per ARIA standards) and set up ARIA attributes to indicate element\n    // is read-only. https://www.w3.org/TR/wai-aria-1.1/#aria-readonly\n\n    var readOnlyProps = readOnly ? {\n      allowFocusRoot: true,\n      disabled: true,\n      'aria-label': ariaLabel,\n      'aria-readonly': true,\n      'data-is-focusable': true,\n      tabIndex: 0\n    } : undefined;\n    return React.createElement(\"div\", __assign({\n      className: css('ms-Rating-star', this._classNames.root, (_b = {}, _b[this._classNames.rootIsLarge] = size === RatingSize.Large, _b[this._classNames.rootIsSmall] = size !== RatingSize.Large, _b)),\n      \"aria-label\": !readOnly ? ariaLabel : '',\n      id: id\n    }, divProps), React.createElement(FocusZone, __assign({\n      direction: FocusZoneDirection.horizontal,\n      className: css(this._classNames.ratingFocusZone, (_c = {}, _c[this._classNames.rootIsLarge] = size === RatingSize.Large, _c[this._classNames.rootIsSmall] = size !== RatingSize.Large, _c)),\n      defaultActiveElement: rating ? starIds[Math.ceil(rating) - 1] && '#' + starIds[Math.ceil(rating) - 1] : undefined\n    }, readOnlyProps), stars));\n  };\n\n  RatingBase.prototype._getStarId = function (index) {\n    return this._id + '-star-' + index;\n  };\n\n  RatingBase.prototype._onFocus = function (value, ev) {\n    if (Math.ceil(this.state.rating) !== value) {\n      this.setState({\n        rating: value\n      }); // eslint-disable-next-line deprecation/deprecation\n\n      var _a = this.props,\n          onChange = _a.onChange,\n          onChanged = _a.onChanged;\n\n      if (onChange) {\n        onChange(ev, value);\n      }\n\n      if (onChanged) {\n        onChanged(value);\n      }\n    }\n  };\n\n  RatingBase.prototype._getLabel = function (rating) {\n    var text = this.props.ariaLabelFormat || '';\n    return React.createElement(\"span\", {\n      id: this._labelId + \"-\" + rating,\n      className: this._classNames.labelText\n    }, format(text, rating, this.props.max));\n  };\n\n  RatingBase.prototype._getInitialValue = function (props) {\n    if (typeof props.rating === 'undefined') {\n      return this._min;\n    }\n\n    if (props.rating === null) {\n      return undefined;\n    }\n\n    return this._getClampedRating(props.rating);\n  };\n\n  RatingBase.prototype._getClampedRating = function (rating) {\n    return Math.min(Math.max(rating, this._min), this.props.max);\n  };\n\n  RatingBase.prototype._getRating = function () {\n    if (this.props.rating !== undefined) {\n      return this._getClampedRating(this.props.rating);\n    }\n\n    if (this.state.rating !== undefined && this.state.rating !== null) {\n      return this._getClampedRating(this.state.rating);\n    }\n\n    return 0;\n  };\n\n  RatingBase.prototype._getFillingPercentage = function (starPosition) {\n    var rating = this._getRating();\n\n    var ceilValue = Math.ceil(rating);\n    var fillPercentage = 100;\n\n    if (starPosition === rating) {\n      fillPercentage = 100;\n    } else if (starPosition === ceilValue) {\n      fillPercentage = 100 * (rating % 1);\n    } else if (starPosition > ceilValue) {\n      fillPercentage = 0;\n    }\n\n    return fillPercentage;\n  };\n\n  RatingBase.defaultProps = {\n    min: 1,\n    max: 5\n  };\n  return RatingBase;\n}(React.Component);\n\nexport { RatingBase };","map":{"version":3,"mappings":"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","names":["React","warnDeprecations","initializeComponentRef","classNamesFunction","css","format","getId","divProperties","getNativeProps","Icon","FocusZone","FocusZoneDirection","RatingSize","getClassNames","RatingStar","props","icon","className","classNames","ratingStar","key","id","ratingStarBack","iconName","disabled","ratingStarFront","style","width","fillPercentage","__extends","_super","_this","onChanged","_id","_min","allowZeroStars","min","undefined","_labelId","state","rating","_getInitialValue","RatingBase","getAriaLabel","styles","max","readOnly","size","theme","_e","_f","unselectedIcon","onRenderStar","stars","starIds","_getRating","divProps","_classNames","renderStar","starProps","renderer","__assign","starNum","i","_getFillingPercentage","ratingStarProps","push","_getStarId","ratingButton","_a","ratingStarIsLarge","Large","ratingStarIsSmall","Math","ceil","onFocus","_onFocus","bind","onClick","role","type","_getLabel","ariaLabel","readOnlyProps","allowFocusRoot","tabIndex","root","_b","rootIsLarge","rootIsSmall","direction","horizontal","ratingFocusZone","_c","defaultActiveElement","index","value","ev","setState","onChange","text","ariaLabelFormat","labelText","_getClampedRating","starPosition","ceilValue","Component"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\office-ui-fabric-react\\lib\\components\\src\\components\\Rating\\Rating.base.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  warnDeprecations,\n  initializeComponentRef,\n  classNamesFunction,\n  css,\n  format,\n  getId,\n  divProperties,\n  getNativeProps,\n} from '../../Utilities';\nimport { IProcessedStyleSet } from '../../Styling';\nimport { Icon } from '../../Icon';\nimport { FocusZone, FocusZoneDirection, IFocusZoneProps } from '../../FocusZone';\nimport { IRatingProps, RatingSize, IRatingStyleProps, IRatingStyles, IRatingStarProps } from './Rating.types';\n\nconst getClassNames = classNamesFunction<IRatingStyleProps, IRatingStyles>();\n\nexport interface IRatingState {\n  rating: number | null | undefined;\n}\n\nconst RatingStar = (props: IRatingStarProps) => {\n  const icon = props.icon || 'FavoriteStarFill';\n  return (\n    <div className={props.classNames.ratingStar} key={props.id}>\n      <Icon className={props.classNames.ratingStarBack} iconName={icon} />\n      {!props.disabled && (\n        <Icon\n          className={props.classNames.ratingStarFront}\n          iconName={icon}\n          style={{ width: props.fillPercentage + '%' }}\n        />\n      )}\n    </div>\n  );\n};\n\nexport class RatingBase extends React.Component<IRatingProps, IRatingState> {\n  public static defaultProps: IRatingProps = {\n    min: 1,\n    max: 5,\n  };\n  private _id: string;\n  private _min: number;\n  private _labelId: string;\n  private _classNames: IProcessedStyleSet<IRatingStyles>;\n\n  constructor(props: IRatingProps) {\n    super(props);\n\n    initializeComponentRef(this);\n\n    warnDeprecations('Rating', props, { onChanged: 'onChange' });\n\n    this._id = getId('Rating');\n    this._min = this.props.allowZeroStars ? 0 : 1;\n    /* eslint-disable deprecation/deprecation */\n    if (this.props.min !== undefined && this.props.min !== 1) {\n      this._min = this.props.min;\n    }\n    /* eslint-enable deprecation/deprecation */\n    this._labelId = getId('RatingLabel');\n\n    this.state = {\n      rating: this._getInitialValue(props),\n    };\n  }\n\n  public render(): JSX.Element {\n    const {\n      disabled,\n      getAriaLabel,\n      styles,\n      max,\n      readOnly,\n      size,\n      theme,\n      icon = 'FavoriteStarFill',\n      unselectedIcon = 'FavoriteStar',\n      onRenderStar,\n    } = this.props;\n\n    const id = this._id;\n    const stars = [];\n    const starIds = [];\n    const rating = this._getRating();\n    const divProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(this.props, divProperties);\n\n    this._classNames = getClassNames(styles!, {\n      disabled,\n      readOnly,\n      theme: theme!,\n    });\n\n    const renderStar = (starProps: IRatingStarProps, renderer?: IRatingProps['onRenderStar']) =>\n      renderer ? renderer(starProps) : <RatingStar key={starProps.starNum + 'rating'} {...starProps} />;\n\n    for (let i = this._min as number; i <= (max as number); i++) {\n      if (i !== 0) {\n        const fillPercentage = this._getFillingPercentage(i);\n        const ratingStarProps: IRatingStarProps = {\n          fillPercentage,\n          disabled,\n          classNames: this._classNames,\n          icon: fillPercentage > 0 ? icon : unselectedIcon,\n          starNum: i,\n        };\n\n        starIds.push(this._getStarId(i - 1));\n\n        stars.push(\n          <button\n            className={css(this._classNames.ratingButton, {\n              [this._classNames.ratingStarIsLarge]: size === RatingSize.Large,\n              [this._classNames.ratingStarIsSmall]: size !== RatingSize.Large,\n            })}\n            id={starIds[i - 1]}\n            key={i}\n            {...(i === Math.ceil(rating) ? { 'data-is-current': true } : {})}\n            onFocus={this._onFocus.bind(this, i)}\n            onClick={this._onFocus.bind(this, i)} // For Safari & Firefox on OSX\n            disabled={disabled || readOnly ? true : false}\n            role=\"presentation\"\n            type=\"button\"\n          >\n            {this._getLabel(i)}\n            {renderStar(ratingStarProps, onRenderStar)}\n          </button>,\n        );\n      }\n    }\n\n    const ariaLabel = getAriaLabel ? getAriaLabel(rating ? rating : 0, max as number) : undefined;\n\n    // When in read-only mode, we allow focus (per ARIA standards) and set up ARIA attributes to indicate element\n    // is read-only. https://www.w3.org/TR/wai-aria-1.1/#aria-readonly\n    const readOnlyProps: IFocusZoneProps | undefined = readOnly\n      ? ({\n          allowFocusRoot: true,\n          disabled: true,\n          'aria-label': ariaLabel,\n          'aria-readonly': true,\n          'data-is-focusable': true,\n          tabIndex: 0,\n        } as IFocusZoneProps)\n      : undefined;\n\n    return (\n      <div\n        className={css('ms-Rating-star', this._classNames.root, {\n          [this._classNames.rootIsLarge]: size === RatingSize.Large,\n          [this._classNames.rootIsSmall]: size !== RatingSize.Large,\n        })}\n        aria-label={!readOnly ? ariaLabel : ''}\n        id={id}\n        {...divProps}\n      >\n        <FocusZone\n          direction={FocusZoneDirection.horizontal}\n          className={css(this._classNames.ratingFocusZone, {\n            [this._classNames.rootIsLarge]: size === RatingSize.Large,\n            [this._classNames.rootIsSmall]: size !== RatingSize.Large,\n          })}\n          defaultActiveElement={\n            rating ? starIds[Math.ceil(rating) - 1] && '#' + starIds[Math.ceil(rating) - 1] : undefined\n          }\n          {...readOnlyProps}\n        >\n          {stars}\n        </FocusZone>\n      </div>\n    );\n  }\n\n  private _getStarId(index: number): string {\n    return this._id + '-star-' + index;\n  }\n\n  private _onFocus(value: number, ev: React.FocusEvent<HTMLElement>): void {\n    if (Math.ceil(this.state.rating!) !== value) {\n      this.setState({\n        rating: value,\n      } as IRatingState);\n\n      // eslint-disable-next-line deprecation/deprecation\n      const { onChange, onChanged } = this.props;\n\n      if (onChange) {\n        onChange(ev, value);\n      }\n\n      if (onChanged) {\n        onChanged(value);\n      }\n    }\n  }\n\n  private _getLabel(rating: number): JSX.Element {\n    const text = this.props.ariaLabelFormat || '';\n\n    return (\n      <span id={`${this._labelId}-${rating}`} className={this._classNames.labelText}>\n        {format(text, rating, this.props.max)}\n      </span>\n    );\n  }\n\n  private _getInitialValue(props: IRatingProps): number | undefined {\n    if (typeof props.rating === 'undefined') {\n      return this._min;\n    }\n\n    if (props.rating === null) {\n      return undefined;\n    }\n\n    return this._getClampedRating(props.rating);\n  }\n\n  private _getClampedRating(rating: number): number {\n    return Math.min(Math.max(rating, this._min as number), this.props.max as number);\n  }\n\n  private _getRating(): number {\n    if (this.props.rating !== undefined) {\n      return this._getClampedRating(this.props.rating);\n    }\n    if (this.state.rating !== undefined && this.state.rating !== null) {\n      return this._getClampedRating(this.state.rating);\n    }\n    return 0;\n  }\n\n  private _getFillingPercentage(starPosition: number): number {\n    const rating = this._getRating();\n    const ceilValue = Math.ceil(rating as number);\n    let fillPercentage = 100;\n\n    if (starPosition === rating) {\n      fillPercentage = 100;\n    } else if (starPosition === ceilValue) {\n      fillPercentage = 100 * ((rating as number) % 1);\n    } else if (starPosition > ceilValue) {\n      fillPercentage = 0;\n    }\n    return fillPercentage;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}