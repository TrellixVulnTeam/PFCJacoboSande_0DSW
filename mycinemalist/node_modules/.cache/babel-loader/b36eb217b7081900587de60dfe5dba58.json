{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { AnimationClassNames, AnimationStyles, HighContrastSelector, getFocusStyle, getGlobalClassNames, FontWeights } from '../../Styling';\nimport { IsFocusVisibleClassName } from '../../Utilities';\nexport var DetailsRowGlobalClassNames = {\n  root: 'ms-DetailsRow',\n  // TODO: in Fabric 7.0 lowercase the 'Compact' for consistency across other components.\n  compact: 'ms-DetailsList--Compact',\n  cell: 'ms-DetailsRow-cell',\n  cellAnimation: 'ms-DetailsRow-cellAnimation',\n  cellCheck: 'ms-DetailsRow-cellCheck',\n  check: 'ms-DetailsRow-check',\n  cellMeasurer: 'ms-DetailsRow-cellMeasurer',\n  listCellFirstChild: 'ms-List-cell:first-child',\n  isContentUnselectable: 'is-contentUnselectable',\n  isSelected: 'is-selected',\n  isCheckVisible: 'is-check-visible',\n  isRowHeader: 'is-row-header',\n  fields: 'ms-DetailsRow-fields'\n};\nvar IsFocusableSelector = \"[data-is-focusable='true']\";\nexport var DEFAULT_CELL_STYLE_PROPS = {\n  cellLeftPadding: 12,\n  cellRightPadding: 8,\n  cellExtraRightPadding: 24\n}; // Source of default row heights to share.\n\nexport var DEFAULT_ROW_HEIGHTS = {\n  rowHeight: 42,\n  compactRowHeight: 32\n}; // Constant values\n\nvar values = __assign(__assign({}, DEFAULT_ROW_HEIGHTS), {\n  rowVerticalPadding: 11,\n  compactRowVerticalPadding: 6\n});\n\nexport var getDetailsRowStyles = function (props) {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n\n  var theme = props.theme,\n      isSelected = props.isSelected,\n      canSelect = props.canSelect,\n      droppingClassName = props.droppingClassName,\n      anySelected = props.anySelected,\n      isCheckVisible = props.isCheckVisible,\n      checkboxCellClassName = props.checkboxCellClassName,\n      compact = props.compact,\n      className = props.className,\n      _o = props.cellStyleProps,\n      cellStyleProps = _o === void 0 ? DEFAULT_CELL_STYLE_PROPS : _o,\n      enableUpdateAnimations = props.enableUpdateAnimations;\n  var palette = theme.palette,\n      fonts = theme.fonts;\n  var neutralPrimary = palette.neutralPrimary,\n      white = palette.white,\n      neutralSecondary = palette.neutralSecondary,\n      neutralLighter = palette.neutralLighter,\n      neutralLight = palette.neutralLight,\n      neutralDark = palette.neutralDark,\n      neutralQuaternaryAlt = palette.neutralQuaternaryAlt;\n  var focusBorder = theme.semanticColors.focusBorder;\n  var classNames = getGlobalClassNames(DetailsRowGlobalClassNames, theme);\n  var colors = {\n    // Default\n    defaultHeaderText: neutralPrimary,\n    defaultMetaText: neutralSecondary,\n    defaultBackground: white,\n    // Default Hover\n    defaultHoverHeaderText: neutralDark,\n    defaultHoverMetaText: neutralPrimary,\n    defaultHoverBackground: neutralLighter,\n    // Selected\n    selectedHeaderText: neutralDark,\n    selectedMetaText: neutralPrimary,\n    selectedBackground: neutralLight,\n    // Selected Hover\n    selectedHoverHeaderText: neutralDark,\n    selectedHoverMetaText: neutralPrimary,\n    selectedHoverBackground: neutralQuaternaryAlt,\n    // Focus\n    focusHeaderText: neutralDark,\n    focusMetaText: neutralPrimary,\n    focusBackground: neutralLight,\n    focusHoverBackground: neutralQuaternaryAlt\n  }; // Selected row styles\n\n  var selectedStyles = [getFocusStyle(theme, {\n    inset: -1,\n    borderColor: focusBorder,\n    outlineColor: white\n  }), classNames.isSelected, {\n    color: colors.selectedMetaText,\n    background: colors.selectedBackground,\n    borderBottom: \"1px solid \" + white,\n    selectors: (_a = {\n      '&:before': {\n        position: 'absolute',\n        display: 'block',\n        top: -1,\n        height: 1,\n        bottom: 0,\n        left: 0,\n        right: 0,\n        content: '',\n        borderTop: \"1px solid \" + white\n      },\n      // Selected State hover\n      '&:hover': {\n        background: colors.selectedHoverBackground,\n        color: colors.selectedHoverMetaText,\n        selectors: (_b = {}, // Selected State hover meta cell\n        _b[\".\" + classNames.cell + \" \" + HighContrastSelector] = {\n          color: 'HighlightText',\n          selectors: {\n            '> a': {\n              color: 'HighlightText'\n            }\n          }\n        }, // Selected State hover Header cell\n        _b[\".\" + classNames.isRowHeader] = {\n          color: colors.selectedHoverHeaderText,\n          selectors: (_c = {}, _c[HighContrastSelector] = {\n            color: 'HighlightText'\n          }, _c)\n        }, // Ensure high-contrast mode overrides default hover background\n        _b[HighContrastSelector] = {\n          background: 'Highlight'\n        }, _b)\n      },\n      // Focus state\n      '&:focus': {\n        background: colors.focusBackground,\n        selectors: (_d = {}, // Selected State hover meta cell\n        _d[\".\" + classNames.cell] = {\n          color: colors.focusMetaText,\n          selectors: (_e = {}, _e[HighContrastSelector] = {\n            color: 'HighlightText',\n            selectors: {\n              '> a': {\n                color: 'HighlightText'\n              }\n            }\n          }, _e)\n        }, // Row header cell\n        _d[\".\" + classNames.isRowHeader] = {\n          color: colors.focusHeaderText,\n          selectors: (_f = {}, _f[HighContrastSelector] = {\n            color: 'HighlightText'\n          }, _f)\n        }, // Ensure high-contrast mode overrides default focus background\n        _d[HighContrastSelector] = {\n          background: 'Highlight'\n        }, _d)\n      }\n    }, _a[HighContrastSelector] = {\n      background: 'Highlight',\n      color: 'HighlightText',\n      MsHighContrastAdjust: 'none',\n      selectors: {\n        a: {\n          color: 'HighlightText'\n        }\n      }\n    }, // Focus and hover state\n    _a['&:focus:hover'] = {\n      background: colors.focusHoverBackground\n    }, _a)\n  }];\n  var cannotSelectStyles = [classNames.isContentUnselectable, {\n    userSelect: 'none',\n    cursor: 'default'\n  }];\n  var rootCompactStyles = {\n    minHeight: values.compactRowHeight,\n    border: 0\n  };\n  var cellCompactStyles = {\n    minHeight: values.compactRowHeight,\n    paddingTop: values.compactRowVerticalPadding,\n    paddingBottom: values.compactRowVerticalPadding,\n    paddingLeft: cellStyleProps.cellLeftPadding + \"px\"\n  };\n  var defaultCellStyles = [getFocusStyle(theme, {\n    inset: -1\n  }), classNames.cell, {\n    display: 'inline-block',\n    position: 'relative',\n    boxSizing: 'border-box',\n    minHeight: values.rowHeight,\n    verticalAlign: 'top',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    paddingTop: values.rowVerticalPadding,\n    paddingBottom: values.rowVerticalPadding,\n    paddingLeft: cellStyleProps.cellLeftPadding + \"px\",\n    selectors: (_g = {\n      '& > button': {\n        maxWidth: '100%'\n      }\n    }, _g[IsFocusableSelector] = getFocusStyle(theme, {\n      inset: -1,\n      borderColor: neutralSecondary,\n      outlineColor: white\n    }), _g)\n  }, isSelected && {\n    selectors: (_h = {}, _h[HighContrastSelector] = {\n      background: 'Highlight',\n      color: 'HighlightText',\n      MsHighContrastAdjust: 'none',\n      selectors: {\n        a: {\n          color: 'HighlightText'\n        }\n      }\n    }, _h)\n  }, compact && cellCompactStyles];\n  return {\n    root: [classNames.root, AnimationClassNames.fadeIn400, droppingClassName, theme.fonts.small, isCheckVisible && classNames.isCheckVisible, getFocusStyle(theme, {\n      borderColor: focusBorder,\n      outlineColor: white\n    }), {\n      borderBottom: \"1px solid \" + neutralLighter,\n      background: colors.defaultBackground,\n      color: colors.defaultMetaText,\n      // This ensures that the row always tries to consume is minimum width and does not compress.\n      display: 'inline-flex',\n      minWidth: '100%',\n      minHeight: values.rowHeight,\n      whiteSpace: 'nowrap',\n      padding: 0,\n      boxSizing: 'border-box',\n      verticalAlign: 'top',\n      textAlign: 'left',\n      selectors: (_j = {}, _j[\".\" + classNames.listCellFirstChild + \" &:before\"] = {\n        display: 'none'\n      }, _j['&:hover'] = {\n        background: colors.defaultHoverBackground,\n        color: colors.defaultHoverMetaText,\n        selectors: (_k = {}, _k[\".\" + classNames.isRowHeader] = {\n          color: colors.defaultHoverHeaderText\n        }, _k)\n      }, _j[\"&:hover .\" + classNames.check] = {\n        opacity: 1\n      }, _j[\".\" + IsFocusVisibleClassName + \" &:focus .\" + classNames.check] = {\n        opacity: 1\n      }, _j)\n    }, isSelected && selectedStyles, !canSelect && cannotSelectStyles, compact && rootCompactStyles, className],\n    cellUnpadded: {\n      paddingRight: cellStyleProps.cellRightPadding + \"px\"\n    },\n    cellPadded: {\n      paddingRight: cellStyleProps.cellExtraRightPadding + cellStyleProps.cellRightPadding + \"px\",\n      selectors: (_l = {}, _l[\"&.\" + classNames.cellCheck] = {\n        paddingRight: 0\n      }, _l)\n    },\n    cell: defaultCellStyles,\n    cellAnimation: enableUpdateAnimations && AnimationStyles.slideLeftIn40,\n    cellMeasurer: [classNames.cellMeasurer, {\n      overflow: 'visible',\n      whiteSpace: 'nowrap'\n    }],\n    checkCell: [defaultCellStyles, classNames.cellCheck, checkboxCellClassName, {\n      padding: 0,\n      // Ensure that the check cell covers the top border of the cell.\n      // This ensures the click target does not leave a spot which would\n      // cause other items to be deselected.\n      paddingTop: 1,\n      marginTop: -1,\n      flexShrink: 0\n    }],\n    checkCover: {\n      position: 'absolute',\n      top: -1,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      display: anySelected ? 'block' : 'none'\n    },\n    fields: [classNames.fields, {\n      display: 'flex',\n      alignItems: 'stretch'\n    }],\n    isRowHeader: [classNames.isRowHeader, {\n      color: colors.defaultHeaderText,\n      fontSize: fonts.medium.fontSize\n    }, isSelected && {\n      color: colors.selectedHeaderText,\n      fontWeight: FontWeights.semibold,\n      selectors: (_m = {}, _m[HighContrastSelector] = {\n        color: 'HighlightText'\n      }, _m)\n    }],\n    isMultiline: [defaultCellStyles, {\n      whiteSpace: 'normal',\n      wordBreak: 'break-word',\n      textOverflow: 'clip'\n    }],\n    check: [classNames.check]\n  };\n};","map":{"version":3,"mappings":"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","names":["AnimationClassNames","AnimationStyles","HighContrastSelector","getFocusStyle","getGlobalClassNames","FontWeights","IsFocusVisibleClassName","DetailsRowGlobalClassNames","root","compact","cell","cellAnimation","cellCheck","check","cellMeasurer","listCellFirstChild","isContentUnselectable","isSelected","isCheckVisible","isRowHeader","fields","IsFocusableSelector","DEFAULT_CELL_STYLE_PROPS","cellLeftPadding","cellRightPadding","cellExtraRightPadding","DEFAULT_ROW_HEIGHTS","rowHeight","compactRowHeight","values","rowVerticalPadding","compactRowVerticalPadding","getDetailsRowStyles","props","canSelect","droppingClassName","anySelected","checkboxCellClassName","className","_o","cellStyleProps","enableUpdateAnimations","fonts","white","neutralSecondary","neutralLighter","neutralLight","neutralDark","neutralQuaternaryAlt","classNames","theme","colors","defaultHeaderText","neutralPrimary","defaultMetaText","defaultBackground","defaultHoverHeaderText","defaultHoverMetaText","defaultHoverBackground","selectedHeaderText","selectedMetaText","selectedBackground","selectedHoverHeaderText","selectedHoverMetaText","selectedHoverBackground","focusHeaderText","focusMetaText","focusBackground","focusHoverBackground","selectedStyles","inset","borderColor","focusBorder","outlineColor","color","background","borderBottom","selectors","position","display","top","height","bottom","left","right","content","borderTop","_b","_c","_d","_e","_f","_a","MsHighContrastAdjust","a","cannotSelectStyles","userSelect","cursor","rootCompactStyles","minHeight","border","cellCompactStyles","paddingTop","paddingBottom","paddingLeft","defaultCellStyles","boxSizing","verticalAlign","whiteSpace","overflow","textOverflow","maxWidth","_g","_h","fadeIn400","small","minWidth","padding","textAlign","_j","_k","opacity","cellUnpadded","paddingRight","cellPadded","_l","slideLeftIn40","checkCell","marginTop","flexShrink","checkCover","alignItems","fontSize","medium","fontWeight","semibold","_m","isMultiline","wordBreak"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\office-ui-fabric-react\\lib\\components\\src\\components\\DetailsList\\DetailsRow.styles.ts"],"sourcesContent":["import { IDetailsRowStyleProps, IDetailsRowStyles, ICellStyleProps } from './DetailsRow.types';\nimport {\n  AnimationClassNames,\n  AnimationStyles,\n  HighContrastSelector,\n  IStyle,\n  getFocusStyle,\n  getGlobalClassNames,\n  FontWeights,\n} from '../../Styling';\nimport { IsFocusVisibleClassName } from '../../Utilities';\n\nexport const DetailsRowGlobalClassNames = {\n  root: 'ms-DetailsRow',\n  // TODO: in Fabric 7.0 lowercase the 'Compact' for consistency across other components.\n  compact: 'ms-DetailsList--Compact',\n  cell: 'ms-DetailsRow-cell',\n  cellAnimation: 'ms-DetailsRow-cellAnimation',\n  cellCheck: 'ms-DetailsRow-cellCheck',\n  check: 'ms-DetailsRow-check',\n  cellMeasurer: 'ms-DetailsRow-cellMeasurer',\n  listCellFirstChild: 'ms-List-cell:first-child',\n  isContentUnselectable: 'is-contentUnselectable',\n  isSelected: 'is-selected',\n  isCheckVisible: 'is-check-visible',\n  isRowHeader: 'is-row-header',\n  fields: 'ms-DetailsRow-fields',\n};\nconst IsFocusableSelector = \"[data-is-focusable='true']\";\n\nexport const DEFAULT_CELL_STYLE_PROPS: ICellStyleProps = {\n  cellLeftPadding: 12,\n  cellRightPadding: 8,\n  cellExtraRightPadding: 24,\n};\n\n// Source of default row heights to share.\nexport const DEFAULT_ROW_HEIGHTS = {\n  rowHeight: 42,\n  compactRowHeight: 32,\n};\n\n// Constant values\nconst values = {\n  ...DEFAULT_ROW_HEIGHTS,\n  rowVerticalPadding: 11,\n  compactRowVerticalPadding: 6,\n};\n\nexport const getDetailsRowStyles = (props: IDetailsRowStyleProps): IDetailsRowStyles => {\n  const {\n    theme,\n    isSelected,\n    canSelect,\n    droppingClassName,\n    anySelected,\n    isCheckVisible,\n    checkboxCellClassName,\n    compact,\n    className,\n    cellStyleProps = DEFAULT_CELL_STYLE_PROPS,\n    enableUpdateAnimations,\n  } = props;\n\n  const { palette, fonts } = theme;\n  const {\n    neutralPrimary,\n    white,\n    neutralSecondary,\n    neutralLighter,\n    neutralLight,\n    neutralDark,\n    neutralQuaternaryAlt,\n  } = palette;\n  const { focusBorder } = theme.semanticColors;\n\n  const classNames = getGlobalClassNames(DetailsRowGlobalClassNames, theme);\n\n  const colors = {\n    // Default\n    defaultHeaderText: neutralPrimary,\n    defaultMetaText: neutralSecondary,\n    defaultBackground: white,\n\n    // Default Hover\n    defaultHoverHeaderText: neutralDark,\n    defaultHoverMetaText: neutralPrimary,\n    defaultHoverBackground: neutralLighter,\n\n    // Selected\n    selectedHeaderText: neutralDark,\n    selectedMetaText: neutralPrimary,\n    selectedBackground: neutralLight,\n\n    // Selected Hover\n    selectedHoverHeaderText: neutralDark,\n    selectedHoverMetaText: neutralPrimary,\n    selectedHoverBackground: neutralQuaternaryAlt,\n\n    // Focus\n    focusHeaderText: neutralDark,\n    focusMetaText: neutralPrimary,\n    focusBackground: neutralLight,\n    focusHoverBackground: neutralQuaternaryAlt,\n  };\n\n  // Selected row styles\n  const selectedStyles: IStyle = [\n    getFocusStyle(theme, { inset: -1, borderColor: focusBorder, outlineColor: white }),\n    classNames.isSelected,\n    {\n      color: colors.selectedMetaText,\n      background: colors.selectedBackground,\n      borderBottom: `1px solid ${white}`,\n      selectors: {\n        '&:before': {\n          position: 'absolute',\n          display: 'block',\n          top: -1,\n          height: 1,\n          bottom: 0,\n          left: 0,\n          right: 0,\n          content: '',\n          borderTop: `1px solid ${white}`,\n        },\n\n        // Selected State hover\n        '&:hover': {\n          background: colors.selectedHoverBackground,\n          color: colors.selectedHoverMetaText,\n          selectors: {\n            // Selected State hover meta cell\n            [`.${classNames.cell} ${HighContrastSelector}`]: {\n              color: 'HighlightText',\n              selectors: {\n                '> a': {\n                  color: 'HighlightText',\n                },\n              },\n            },\n\n            // Selected State hover Header cell\n            [`.${classNames.isRowHeader}`]: {\n              color: colors.selectedHoverHeaderText,\n              selectors: {\n                [HighContrastSelector]: {\n                  color: 'HighlightText',\n                },\n              },\n            },\n\n            // Ensure high-contrast mode overrides default hover background\n            [HighContrastSelector]: {\n              background: 'Highlight',\n            },\n          },\n        },\n\n        // Focus state\n        '&:focus': {\n          background: colors.focusBackground,\n          selectors: {\n            // Selected State hover meta cell\n            [`.${classNames.cell}`]: {\n              color: colors.focusMetaText,\n              selectors: {\n                [HighContrastSelector]: {\n                  color: 'HighlightText',\n                  selectors: {\n                    '> a': {\n                      color: 'HighlightText',\n                    },\n                  },\n                },\n              },\n            },\n\n            // Row header cell\n            [`.${classNames.isRowHeader}`]: {\n              color: colors.focusHeaderText,\n              selectors: {\n                [HighContrastSelector]: {\n                  color: 'HighlightText',\n                },\n              },\n            },\n\n            // Ensure high-contrast mode overrides default focus background\n            [HighContrastSelector]: {\n              background: 'Highlight',\n            },\n          },\n        },\n\n        [HighContrastSelector]: {\n          background: 'Highlight',\n          color: 'HighlightText',\n          MsHighContrastAdjust: 'none',\n          selectors: {\n            a: {\n              color: 'HighlightText',\n            },\n          },\n        },\n\n        // Focus and hover state\n        '&:focus:hover': {\n          background: colors.focusHoverBackground,\n        },\n      },\n    },\n  ];\n\n  const cannotSelectStyles: IStyle = [\n    classNames.isContentUnselectable,\n    {\n      userSelect: 'none',\n      cursor: 'default',\n    },\n  ];\n\n  const rootCompactStyles: IStyle = {\n    minHeight: values.compactRowHeight,\n    border: 0,\n  };\n\n  const cellCompactStyles: IStyle = {\n    minHeight: values.compactRowHeight,\n    paddingTop: values.compactRowVerticalPadding,\n    paddingBottom: values.compactRowVerticalPadding,\n    paddingLeft: `${cellStyleProps.cellLeftPadding}px`,\n  };\n\n  const defaultCellStyles: IStyle = [\n    getFocusStyle(theme, { inset: -1 }),\n    classNames.cell,\n    {\n      display: 'inline-block',\n      position: 'relative',\n      boxSizing: 'border-box',\n      minHeight: values.rowHeight,\n      verticalAlign: 'top',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      paddingTop: values.rowVerticalPadding,\n      paddingBottom: values.rowVerticalPadding,\n      paddingLeft: `${cellStyleProps.cellLeftPadding}px`,\n      selectors: {\n        '& > button': {\n          maxWidth: '100%',\n        },\n\n        [IsFocusableSelector]: getFocusStyle(theme, { inset: -1, borderColor: neutralSecondary, outlineColor: white }),\n      },\n    },\n\n    isSelected && {\n      selectors: {\n        [HighContrastSelector]: {\n          background: 'Highlight',\n          color: 'HighlightText',\n          MsHighContrastAdjust: 'none',\n          selectors: {\n            a: {\n              color: 'HighlightText',\n            },\n          },\n        },\n      },\n    },\n\n    compact && cellCompactStyles,\n  ];\n\n  return {\n    root: [\n      classNames.root,\n      AnimationClassNames.fadeIn400,\n      droppingClassName,\n      theme.fonts.small,\n      isCheckVisible && classNames.isCheckVisible,\n      getFocusStyle(theme, { borderColor: focusBorder, outlineColor: white }),\n      {\n        borderBottom: `1px solid ${neutralLighter}`,\n        background: colors.defaultBackground,\n        color: colors.defaultMetaText,\n        // This ensures that the row always tries to consume is minimum width and does not compress.\n        display: 'inline-flex',\n        minWidth: '100%',\n        minHeight: values.rowHeight,\n        whiteSpace: 'nowrap',\n        padding: 0,\n        boxSizing: 'border-box',\n        verticalAlign: 'top',\n        textAlign: 'left',\n        selectors: {\n          [`.${classNames.listCellFirstChild} &:before`]: {\n            display: 'none',\n          },\n\n          '&:hover': {\n            background: colors.defaultHoverBackground,\n            color: colors.defaultHoverMetaText,\n            selectors: {\n              [`.${classNames.isRowHeader}`]: {\n                color: colors.defaultHoverHeaderText,\n              },\n            },\n          },\n\n          [`&:hover .${classNames.check}`]: {\n            opacity: 1,\n          },\n\n          [`.${IsFocusVisibleClassName} &:focus .${classNames.check}`]: {\n            opacity: 1,\n          },\n        },\n      },\n      isSelected && selectedStyles,\n      !canSelect && cannotSelectStyles,\n      compact && rootCompactStyles,\n      className,\n    ],\n\n    cellUnpadded: {\n      paddingRight: `${cellStyleProps.cellRightPadding}px`,\n    },\n\n    cellPadded: {\n      paddingRight: `${cellStyleProps.cellExtraRightPadding + cellStyleProps.cellRightPadding}px`,\n      selectors: {\n        [`&.${classNames.cellCheck}`]: {\n          paddingRight: 0,\n        },\n      },\n    },\n\n    cell: defaultCellStyles,\n    cellAnimation: enableUpdateAnimations && AnimationStyles.slideLeftIn40,\n    cellMeasurer: [\n      classNames.cellMeasurer,\n      {\n        overflow: 'visible',\n        whiteSpace: 'nowrap',\n      },\n    ],\n    checkCell: [\n      defaultCellStyles,\n      classNames.cellCheck,\n      checkboxCellClassName,\n      {\n        padding: 0,\n        // Ensure that the check cell covers the top border of the cell.\n        // This ensures the click target does not leave a spot which would\n        // cause other items to be deselected.\n        paddingTop: 1,\n        marginTop: -1,\n        flexShrink: 0,\n      },\n    ],\n    checkCover: {\n      position: 'absolute',\n      top: -1,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      display: anySelected ? 'block' : 'none',\n    },\n    fields: [\n      classNames.fields,\n      {\n        display: 'flex',\n        alignItems: 'stretch',\n      },\n    ],\n    isRowHeader: [\n      classNames.isRowHeader,\n      {\n        color: colors.defaultHeaderText,\n        fontSize: fonts.medium.fontSize,\n      },\n      isSelected && {\n        color: colors.selectedHeaderText,\n        fontWeight: FontWeights.semibold,\n        selectors: {\n          [HighContrastSelector]: {\n            color: 'HighlightText',\n          },\n        },\n      },\n    ],\n    isMultiline: [\n      defaultCellStyles,\n      {\n        whiteSpace: 'normal',\n        wordBreak: 'break-word',\n        textOverflow: 'clip',\n      },\n    ],\n    check: [classNames.check],\n  };\n};\n"]},"metadata":{},"sourceType":"module"}