{"ast":null,"code":"import { getGlobalClassNames, HighContrastSelector } from '../../../Styling';\nexport var SuggestionsItemGlobalClassNames = {\n  root: 'ms-Suggestions-item',\n  itemButton: 'ms-Suggestions-itemButton',\n  closeButton: 'ms-Suggestions-closeButton',\n  isSuggested: 'is-suggested'\n};\nexport function getStyles(props) {\n  var _a, _b, _c;\n\n  var className = props.className,\n      theme = props.theme,\n      suggested = props.suggested;\n  var palette = theme.palette,\n      semanticColors = theme.semanticColors;\n  var classNames = getGlobalClassNames(SuggestionsItemGlobalClassNames, theme);\n  return {\n    root: [classNames.root, {\n      display: 'flex',\n      alignItems: 'stretch',\n      boxSizing: 'border-box',\n      width: '100%',\n      position: 'relative',\n      selectors: {\n        '&:hover': {\n          background: semanticColors.menuItemBackgroundHovered\n        },\n        '&:hover .ms-Suggestions-closeButton': {\n          display: 'block'\n        }\n      }\n    }, suggested && {\n      selectors: {\n        ':after': {\n          pointerEvents: 'none',\n          content: '\"\"',\n          position: 'absolute',\n          left: 0,\n          top: 0,\n          bottom: 0,\n          right: 0,\n          border: \"1px solid \" + theme.semanticColors.focusBorder\n        }\n      }\n    }, className],\n    itemButton: [classNames.itemButton, {\n      width: '100%',\n      padding: 0,\n      border: 'none',\n      height: '100%',\n      // Force the item button to be collapsible so it can always shrink\n      // to accommodate the close button as a peer in its flex container.\n      minWidth: 0,\n      // Require for IE11 to truncate the component.\n      overflow: 'hidden',\n      selectors: (_a = {}, _a[HighContrastSelector] = {\n        color: 'WindowText',\n        selectors: {\n          ':hover': {\n            background: 'Highlight',\n            color: 'HighlightText',\n            MsHighContrastAdjust: 'none'\n          }\n        }\n      }, _a[':hover'] = {\n        color: semanticColors.menuItemTextHovered\n      }, _a)\n    }, suggested && [classNames.isSuggested, {\n      background: semanticColors.menuItemBackgroundPressed,\n      selectors: (_b = {\n        ':hover': {\n          background: semanticColors.menuDivider\n        }\n      }, _b[HighContrastSelector] = {\n        background: 'Highlight',\n        color: 'HighlightText',\n        MsHighContrastAdjust: 'none'\n      }, _b)\n    }]],\n    closeButton: [classNames.closeButton, {\n      display: 'none',\n      color: palette.neutralSecondary,\n      padding: '0 4px',\n      height: 'auto',\n      width: 32,\n      selectors: (_c = {\n        ':hover, :active': {\n          background: palette.neutralTertiaryAlt,\n          color: palette.neutralDark\n        }\n      }, _c[HighContrastSelector] = {\n        color: 'WindowText'\n      }, _c)\n    }, suggested && {\n      selectors: {\n        ':hover, :active': {\n          background: palette.neutralTertiary,\n          color: palette.neutralPrimary\n        }\n      }\n    }]\n  };\n}","map":{"version":3,"mappings":"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","names":["getGlobalClassNames","HighContrastSelector","SuggestionsItemGlobalClassNames","root","itemButton","closeButton","isSuggested","getStyles","props","theme","suggested","semanticColors","classNames","display","alignItems","boxSizing","width","position","selectors","background","menuItemBackgroundHovered","pointerEvents","content","left","top","bottom","right","border","focusBorder","className","padding","height","minWidth","overflow","_a","color","MsHighContrastAdjust","menuItemTextHovered","menuItemBackgroundPressed","menuDivider","_b","palette","neutralSecondary","neutralTertiaryAlt","neutralDark","_c","neutralTertiary","neutralPrimary"],"sources":["D:\\PFCJACOBO\\PFC\\mycinemalist\\node_modules\\office-ui-fabric-react\\lib\\components\\pickers\\src\\components\\pickers\\Suggestions\\SuggestionsItem.styles.ts"],"sourcesContent":["import { getGlobalClassNames, HighContrastSelector } from '../../../Styling';\nimport { ISuggestionsItemStyleProps, ISuggestionsItemStyles } from './SuggestionsItem.types';\n\nexport const SuggestionsItemGlobalClassNames = {\n  root: 'ms-Suggestions-item',\n  itemButton: 'ms-Suggestions-itemButton',\n  closeButton: 'ms-Suggestions-closeButton',\n  isSuggested: 'is-suggested',\n};\n\nexport function getStyles(props: ISuggestionsItemStyleProps): ISuggestionsItemStyles {\n  const { className, theme, suggested } = props;\n\n  const { palette, semanticColors } = theme;\n\n  const classNames = getGlobalClassNames(SuggestionsItemGlobalClassNames, theme);\n\n  return {\n    root: [\n      classNames.root,\n      {\n        display: 'flex',\n        alignItems: 'stretch',\n        boxSizing: 'border-box',\n        width: '100%',\n        position: 'relative',\n        selectors: {\n          '&:hover': {\n            background: semanticColors.menuItemBackgroundHovered,\n          },\n          '&:hover .ms-Suggestions-closeButton': {\n            display: 'block',\n          },\n        },\n      },\n      suggested && {\n        selectors: {\n          ':after': {\n            pointerEvents: 'none',\n            content: '\"\"',\n            position: 'absolute',\n            left: 0,\n            top: 0,\n            bottom: 0,\n            right: 0,\n            border: `1px solid ${theme.semanticColors.focusBorder}`,\n          },\n        },\n      },\n      className,\n    ],\n    itemButton: [\n      classNames.itemButton,\n      {\n        width: '100%',\n        padding: 0,\n        border: 'none',\n        height: '100%',\n        // Force the item button to be collapsible so it can always shrink\n        // to accommodate the close button as a peer in its flex container.\n        minWidth: 0,\n        // Require for IE11 to truncate the component.\n        overflow: 'hidden',\n        selectors: {\n          [HighContrastSelector]: {\n            color: 'WindowText',\n            selectors: {\n              ':hover': {\n                background: 'Highlight',\n                color: 'HighlightText',\n                MsHighContrastAdjust: 'none',\n              },\n            },\n          },\n          ':hover': {\n            color: semanticColors.menuItemTextHovered,\n          },\n        },\n      },\n      suggested && [\n        classNames.isSuggested,\n        {\n          background: semanticColors.menuItemBackgroundPressed,\n          selectors: {\n            ':hover': {\n              background: semanticColors.menuDivider,\n            },\n            [HighContrastSelector]: {\n              background: 'Highlight',\n              color: 'HighlightText',\n              MsHighContrastAdjust: 'none',\n            },\n          },\n        },\n      ],\n    ],\n    closeButton: [\n      classNames.closeButton,\n      {\n        display: 'none',\n        color: palette.neutralSecondary,\n        padding: '0 4px',\n        height: 'auto',\n        width: 32,\n        selectors: {\n          ':hover, :active': {\n            background: palette.neutralTertiaryAlt,\n            color: palette.neutralDark,\n          },\n          [HighContrastSelector]: {\n            color: 'WindowText',\n          },\n        },\n      },\n      suggested && {\n        selectors: {\n          ':hover, :active': {\n            background: palette.neutralTertiary,\n            color: palette.neutralPrimary,\n          },\n        },\n      },\n    ],\n  };\n}\n"]},"metadata":{},"sourceType":"module"}